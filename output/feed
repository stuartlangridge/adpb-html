<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>as days pass by</title><link>https://www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><lastBuildDate>Fri, 04 Sep 2020 10:30:00 +0100</lastBuildDate><item><title>Making apps for Linux, a proposal</title><link>https://www.kryogenix.org/days/2020/09/04/making-apps-for-linux-a-proposal/</link><description>&lt;p&gt;In the spring of 2020, the &lt;span class="caps"&gt;GNOME&lt;/span&gt; project ran their &lt;a href="https://www.gnome.org/challenge/"&gt;Community Engagement Challenge&lt;/a&gt; in which teams proposed ideas that would &amp;#8220;engage beginning coders with the free and open-source software community [and] connect the next generation of coders to the &lt;span class="caps"&gt;FOSS&lt;/span&gt; community and keep them involved for years to come.&amp;#8221; I have a few thoughts on this topic, and so does &lt;a href="https://popey.com"&gt;Alan Pope&lt;/a&gt;, and so we got chatting and put together a proposal for a programming environment for making simple apps in a way that new developers could easily grasp. We were quite pleased with it as a concept, but: it didn&amp;#8217;t get selected for further development. Oh well, never mind. But the ideas still seem good to us, so I think it&amp;#8217;s worth publishing the proposal anyway so that someone else has the chance to be inspired by it, or decide they want it to happen.&amp;nbsp;Here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kryogenix.org/code/cabin/"&gt;Cabin: Creating simple apps for Linux, by Stuart Langridge and Alan&amp;nbsp;Pope&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;d be interested in your&amp;nbsp;thoughts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 04 Sep 2020 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-09-04:/days/2020/09/04/making-apps-for-linux-a-proposal/</guid><category>General musings</category></item><item><title>IoT devices and Android and disappointment</title><link>https://www.kryogenix.org/days/2020/08/18/iot-devices-and-android-and-disappointment/</link><description>&lt;p&gt;One of the projects I&amp;#8217;m working on involves creating a little device which you talk to from your phone. So, I thought, I&amp;#8217;ll do this &lt;em&gt;properly&lt;/em&gt;. No &amp;#8220;cloud service&amp;#8221; that you don&amp;#8217;t need; no native app that you don&amp;#8217;t need; you&amp;#8217;ll just send data from your phone to it, locally, and if the owners go bust it won&amp;#8217;t brick all your devices. I think a lot of people want their devices to live on beyond the company that sold them, and they want their devices to be under their own control, and they want to be able to do all this from any device of their choosing; their phone, their laptop, whatever. An awful lot of devices don&amp;#8217;t do some or all of that, and perhaps we can do better. That is, here&amp;#8217;s the summary of that as a sort of guiding principle, which we&amp;#8217;re going to try to&amp;nbsp;do:&lt;/p&gt;
&lt;p&gt;You should be able to communicate &lt;strong&gt;a few hundred &lt;span class="caps"&gt;KB&lt;/span&gt; of data&lt;/strong&gt; to the device &lt;strong&gt;locally&lt;/strong&gt;, &lt;strong&gt;without needing a cloud service&lt;/strong&gt; by using &lt;strong&gt;a web app rather than a native app&lt;/strong&gt; from &lt;strong&gt;an Android phone&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s why that doesn&amp;#8217;t work. Android and Chrome, I am very disappointed in&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bluetooth &lt;span class="caps"&gt;LE&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/iot-chrome-s1.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;The first reaction here is to use Bluetooth &lt;span class="caps"&gt;LE&lt;/span&gt;. This is what it&amp;#8217;s for; it&amp;#8217;s easy to use, phones support it, Chrome on Android has &lt;a href="https://developers.google.com/web/updates/2015/07/interact-with-ble-devices-on-the-web"&gt;Web Bluetooth&lt;/a&gt;, everything&amp;#8217;s gravy,&amp;nbsp;right?&lt;/p&gt;
&lt;p&gt;No, sadly. Because of the &amp;#8220;a few hundred &lt;span class="caps"&gt;KB&lt;/span&gt; of data&amp;#8221; requirement. This is, honestly, not a &lt;em&gt;lot&lt;/em&gt; of data; a few hundred kilobytes at most. However&amp;#8230; that&amp;#8217;s too much for poor old Bluetooth &lt;span class="caps"&gt;LE&lt;/span&gt;. &lt;a href="https://aimconsulting.com/insights/blog/wi-fi-vs-bluetooth-classic-vs-bluetooth-low-energy-ble-choosing-the-right-technology-when-designing-for-iot/"&gt;An excellent article from &lt;span class="caps"&gt;AIM&lt;/span&gt; Consulting&lt;/a&gt; goes into this in a little detail and there&amp;#8217;s a &lt;a href="https://www.novelbits.io/bluetooth-5-speed-maximum-throughput/"&gt;much more detailed article from Novelbits&lt;/a&gt;, but transferring tens or hundreds of &lt;span class="caps"&gt;KB&lt;/span&gt; of data over &lt;span class="caps"&gt;BLE&lt;/span&gt; just isn&amp;#8217;t practical. Maybe you can get speeds of a few hundred kilo &lt;em&gt;bits&lt;/em&gt; per second in theory, but in practice it&amp;#8217;s nothing like that; I was getting speeds of &lt;strong&gt;twenty&lt;/strong&gt; &lt;em&gt;bytes&lt;/em&gt; per second, which is utterly unhelpful. Sure, maybe it can be more efficient than that, but it&amp;#8217;s just never going to be fast enough: nobody&amp;#8217;s going to want to send a &lt;span class="caps"&gt;40KB&lt;/span&gt; image and wait three minutes for it to do so. &lt;span class="caps"&gt;BLE&lt;/span&gt;&amp;#8217;s good for small amounts of data; not for even medium&amp;nbsp;amounts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WiFi to your local &lt;span class="caps"&gt;AP&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/iot-chrome-s2.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;The next idea, therefore, is to connect the device to the wifi router in your house. This is how most IoT devices work; you teach them about your wifi network and they connect to it. But&amp;#8230; &lt;em&gt;how&lt;/em&gt; do you teach them that? Normally, you put them in some sort of &amp;#8220;setup&amp;#8221; mode and the device creates its own wifi network, and then you connect your phone to that, teach it about your wifi network, and then it stops its own &lt;span class="caps"&gt;AP&lt;/span&gt; and connects to yours instead. This is maybe &lt;span class="caps"&gt;OK&lt;/span&gt; if the device never moves from your house and it only has one wifi network to connect to; it&amp;#8217;s &lt;em&gt;terrible&lt;/em&gt; if it&amp;#8217;s something that moves around to different places. But you still need to connect to its private &lt;span class="caps"&gt;AP&lt;/span&gt; first to do that setup, and so let&amp;#8217;s talk about&amp;nbsp;that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WiFi to the&amp;nbsp;device&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/iot-chrome-s3.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;The device creates its own WiFi network; it becomes a wifi router. You then connect your phone to it, and then you can talk to it. The device can even be a web server, so you can load the controlling web app from the device itself. This is ideal; exactly what I&amp;nbsp;planned.&lt;/p&gt;
&lt;p&gt;Except it doesn&amp;#8217;t work, and as far as I can tell it&amp;#8217;s Android&amp;#8217;s fault. Bah&amp;nbsp;humbug.&lt;/p&gt;
&lt;p&gt;You see, the device&amp;#8217;s wifi network obviously doesn&amp;#8217;t have a route to the internet. So, when you connect your phone to it, Android says &amp;#8220;hey! there&amp;#8217;s no route to the internet here! this wifi network sucks and clearly you don&amp;#8217;t want to be connected to it!&amp;#8221; and, after ten seconds or so, disconnects you. Boom. You have no chance to use the web app on the device to configure the device, because Android (10, at least) disconnects you from the device&amp;#8217;s wifi network before you can do&amp;nbsp;so.&lt;/p&gt;
&lt;p&gt;Now, there is the concept of a &amp;#8220;captive portal&amp;#8221;. This is the thing you get in hotels and airports and so on, where you have to fill in some details or pay some money or something to be able to use the wifi; what happens is that all web accesses get redirected to the captive portal page where you do or pay whatever&amp;#8217;s necessary and then the network suddenly becomes able to access the internet. Android will helpfully detect these networks and show you that captive portal login page so you can sign in. Can we have our device be a captive&amp;nbsp;portal?&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/iot-chrome-s4.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;No. Well, we can, but it doesn&amp;#8217;t&amp;nbsp;help.&lt;/p&gt;
&lt;p&gt;You see, Android shows you the captive portal login page in a special cut-down &amp;#8220;browser&amp;#8221;. This captive portal browser (Apple calls it a &lt;span class="caps"&gt;CNA&lt;/span&gt;, for Captive Network Assistant, so I shall too&amp;#8230; but we&amp;#8217;re not talking about iOS here, which is an entirely different kettle of fish for a different article), this &lt;span class="caps"&gt;CNA&lt;/span&gt; isn&amp;#8217;t &lt;em&gt;really&lt;/em&gt; a browser. Obviously, our IoT device can&amp;#8217;t provide a route to the internet; it&amp;#8217;s not that it has one but won&amp;#8217;t let you see it, like a hotel; it doesn&amp;#8217;t have one at all. So you can&amp;#8217;t fill anything into the &lt;span class="caps"&gt;CNA&lt;/span&gt; that will make that happen. If you try to switch back to the real browser in order to access the website being served from the device, Android says &amp;#8220;aha, you closed the &lt;span class="caps"&gt;CNA&lt;/span&gt; and there&amp;#8217;s still no route to the internet!&amp;#8221; and disconnects you from the device wifi. That doesn&amp;#8217;t&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;You can&amp;#8217;t open a page in the real browser &lt;em&gt;from&lt;/em&gt; the &lt;span class="caps"&gt;CNA&lt;/span&gt;, either. You used to be able to do &lt;a href="https://stackoverflow.com/questions/59585783/open-app-browser-android-using-captive-portal-error-social-login-with-facebook"&gt;some shenanigans with a link pointing to an &lt;code&gt;intent://&lt;/code&gt; &lt;span class="caps"&gt;URL&lt;/span&gt;&lt;/a&gt; but that doesn&amp;#8217;t work any&amp;nbsp;more.&lt;/p&gt;
&lt;p&gt;Maybe we can run the whole web app &lt;em&gt;inside&lt;/em&gt; the &lt;span class="caps"&gt;CNA&lt;/span&gt;? I mean, it&amp;#8217;s a web browser, right? Not an ideal user experience, but it might be &lt;span class="caps"&gt;OK&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Nope. The &lt;span class="caps"&gt;CNA&lt;/span&gt; is a browser, but half of the features are turned off. There are a bunch of JavaScript APIs you don&amp;#8217;t have access to, but the key thing for our purposes is that &lt;code&gt;&amp;lt;input type="file"&amp;gt;&lt;/code&gt; elements don&amp;#8217;t work; you can&amp;#8217;t open a file picker to allow someone to choose a file to upload to the device. So that&amp;#8217;s a non-starter&amp;nbsp;too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So, what do we&amp;nbsp;do?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, it seems that the&amp;nbsp;plan:&lt;/p&gt;
&lt;p&gt;communicate &lt;strong&gt;a few hundred &lt;span class="caps"&gt;KB&lt;/span&gt; of data&lt;/strong&gt; to the device &lt;strong&gt;locally&lt;/strong&gt;,  &lt;strong&gt;without needing a cloud service&lt;/strong&gt; by using &lt;strong&gt;a web app rather than a native app&lt;/strong&gt; from &lt;strong&gt;an Android&amp;nbsp;phone&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;isn&amp;#8217;t possible. It &lt;em&gt;could&lt;/em&gt; be, but it isn&amp;#8217;t; there are roadblocks in the way. So building the sort of IoT device which ought to exist isn&amp;#8217;t actually possible, thanks very much Android. Thandroid. We have to compromise on one of the key&amp;nbsp;points.&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re only communicating small amounts of data, then you can use Bluetooth &lt;span class="caps"&gt;LE&lt;/span&gt; for this. Sadly, this is not something you can really choose to compromise on; if your device plan only needs small volumes, great, but if it needs more then likely you can&amp;#8217;t say &amp;#8220;we just won&amp;#8217;t send that data&amp;#8221;. So that&amp;#8217;s a&amp;nbsp;no-go.&lt;/p&gt;
&lt;p&gt;You can use a cloud service. That is: you teach the device about the local wifi network and then it talks to your cloud servers, and so does your phone; all data is round-tripped through those cloud servers. This is stupid: if the cloud servers go away, the device is a brick. Yes, lots of companies do this, but part of the reason they do it is that they &lt;em&gt;want&lt;/em&gt; to be able to control whether you can access a device you&amp;#8217;ve bought by running the connection via their own servers, so they can charge you subscription money for it. If you&amp;#8217;re not doing that, then the servers are a constant ongoing cost and you can&amp;#8217;t ever shut them down. And it&amp;#8217;s a poor model, and aggressively consumer-hostile, to require someone to continue paying you to use a thing they purchased. Not doing that. Communication should be local; the device is in my house, I&amp;#8217;m in my house, why the hell should talking to it require going via a server on the other side of the&amp;nbsp;world?&lt;/p&gt;
&lt;p&gt;You can use a native app. Native apps can avoid the whole &amp;#8220;this wifi network has no internet access so I will disconnect you from it for your own good&amp;#8221; approach by calling &lt;a href="https://stackoverflow.com/questions/62320720/android-disconnects-automatically-from-wifi-without-internet-below-android-10"&gt;various native APIs in the connectivity manager&lt;/a&gt;. A web app can&amp;#8217;t do this. So you&amp;#8217;re somewhat forced into using a native app even though you really shouldn&amp;#8217;t have&amp;nbsp;to.&lt;/p&gt;
&lt;p&gt;Or you can use something other than Android; iOS, it seems, &lt;a href="https://stackoverflow.com/questions/55138577/how-to-redirect-to-default-browser-from-captive-portal-cna-browser"&gt;has a workaround&lt;/a&gt; although it&amp;#8217;s a bit&amp;nbsp;dodgy.&lt;/p&gt;
&lt;p&gt;None of these are good answers. Currently I&amp;#8217;m looking at building native apps, which I really don&amp;#8217;t think I should have to do; this is exactly the sort of thing that the web should be good at, and is available on every platform and to everyone, and I can&amp;#8217;t use the web for it because a bunch of decisions have been taken to prevent that. There are good reasons for those decisions, certainly; I want my phone to be helpful when I&amp;#8217;m on some stupid hotel wifi with a signin. But it&amp;#8217;s also breaking a perfectly legitimate use case and forcing me to use native apps rather than the&amp;nbsp;web.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/iot-chrome-s5.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;Unless I&amp;#8217;m wrong? If I am&amp;#8230; this is where you tell me how to do it. Something with a pleasant user experience, that non-technical people can easily do. If it doesn&amp;#8217;t match that, I ain&amp;#8217;t doin&amp;#8217; it, just to warn you. But if you know how this can be done to meet my list of criteria, I&amp;#8217;m happy to&amp;nbsp;listen.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 18 Aug 2020 13:13:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-08-18:/days/2020/08/18/iot-devices-and-android-and-disappointment/</guid><category>General musings</category></item><item><title>I’m not outside</title><link>https://www.kryogenix.org/days/2020/06/04/i-m-not-outside/</link><description>&lt;p&gt;I&amp;#8217;m not&amp;nbsp;outside.&lt;/p&gt;
&lt;p&gt;Right now, a mass of people are in Centenary Square in&amp;nbsp;Birmingham.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://pbs.twimg.com/media/EZqSVXPXQAEYY9y?format=jpg&amp;name=900x900" alt=""&gt;&lt;/p&gt;
&lt;p&gt;They&amp;#8217;ll currently be chanting. Then there&amp;#8217;s music and speeches and poetry and a lie-down. I&amp;#8217;m not there. I wish I was&amp;nbsp;there.&lt;/p&gt;
&lt;p&gt;This is part of the Black Lives Matter protests going on around the world, because again a black man was murdered by police. His name was &lt;a href="https://www.theguardian.com/us-news/george-floyd"&gt;George Floyd&lt;/a&gt;. That was in Minneapolis; a couple of months ago &lt;a href="https://www.nytimes.com/article/breonna-taylor-police.html"&gt;Breonna Taylor&lt;/a&gt;, a black woman, was shot eight times by police in Louisville. Here in the &lt;span class="caps"&gt;UK&lt;/span&gt; &lt;a href="https://www.inquest.org.uk/bame-deaths-in-police-custody"&gt;black and minority ethnicity people die in police custody twice as much as others&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s 31 years to the day since the &lt;a href="https://en.wikipedia.org/wiki/1989_Tiananmen_Square_protests"&gt;Tiananmen Square protests&lt;/a&gt; in China in which a man stood in front of a tank, and then he disappeared. Nobody even knows his name, or what happened to&amp;nbsp;him.&lt;/p&gt;
&lt;p&gt;The protests in Birmingham today won&amp;#8217;t miss one individual voice, mine. And the world doesn&amp;#8217;t need the opinion of one more white guy on what should be done about all this, about the world crashing down around our ears; better that I listen and support. I can&amp;#8217;t go outside, because I&amp;#8217;m immunocompromised. The government seems to flip-flop on whether it&amp;#8217;s &lt;span class="caps"&gt;OK&lt;/span&gt; for shielding people to go out or not, but in a world where there are &lt;a href="https://twitter.com/brucel/status/1268467622766620672"&gt;more &lt;span class="caps"&gt;UK&lt;/span&gt; deaths from the virus than the rest of the &lt;span class="caps"&gt;EU&lt;/span&gt; put together&lt;/a&gt;, where as of today nearly forty thousand people have died in this country &amp;#8212; not been inconvenienced, not caught the flu and recovered, &lt;em&gt;died&lt;/em&gt;, a count over half that of &lt;span class="caps"&gt;UK&lt;/span&gt; civilian deaths in World War 2 except this happened in half a year &amp;#8212; in that world, I&amp;#8217;m frightened of being in a large crowd, masks and social distancing or not. But the crowd are right. The city is right. When some Birmingham council worker &lt;a href="https://twitter.com/AliAerosol/status/1267802971938660352"&gt;painted over an I Can&amp;#8217;t Breathe emblem&lt;/a&gt;, causing the council to &lt;a href="https://twitter.com/BhamCityCouncil/status/1267852703251804162"&gt;claim there was no political motive behind that&lt;/a&gt; (tip for you: I&amp;#8217;m sure there&amp;#8217;s no council policy to do it, and they&amp;#8217;ve unreservedly apologised, but whichever worker did it sure as hell had a political motive), that emblem was back in 24 hours, and in three other places around the city too. Good one,&amp;nbsp;Birmingham.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/blmbrum20200604.jpg" alt="Protestors in Centenary Square today"&gt;&lt;/p&gt;
&lt;p&gt;There are &lt;a href="https://www.birminghammail.co.uk/news/midlands-news/live-updates-black-lives-matter-18362476"&gt;apparently two thousand of you&lt;/a&gt;. I can hear the noise from the window, and it&amp;#8217;s wonderful. Shout for me too. Wish I could be there with&amp;nbsp;you.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-theme="dark"&gt;&lt;p lang="en" dir="ltr"&gt;My city would be shit, insipid and soulless, if it wasn’t for the beautiful fusion of cultures and heritages from all over the world - each contributing so much (arts, music, food and much more) that has enriched our lives immeasurably ✊🏾✊🏽✊🏿✊🏼&lt;a href="https://t.co/A4E1CDfK4o"&gt;https://t.co/A4E1CDfK4o&lt;/a&gt; &lt;a href="https://t.co/FVbwOJ9X2e"&gt;pic.twitter.com/FVbwOJ9X2e&lt;/a&gt;&lt;/p&gt;&amp;mdash; Cold War Steve (@Coldwar_Steve) &lt;a href="https://twitter.com/Coldwar_Steve/status/1268122649416413185?ref_src=twsrc%5Etfw"&gt;June 3, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 04 Jun 2020 16:55:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-06-04:/days/2020/06/04/i-m-not-outside/</guid><category>General musings</category></item><item><title>Browsers are not rendering engines</title><link>https://www.kryogenix.org/days/2020/05/26/browsers-are-not-rendering-engines/</link><description>&lt;p&gt;An interesting writeup by Brian Kardell on &lt;a href="https://bkardell.com/blog/EcosystemHealth.html"&gt;web engine diversity and ecosystem health&lt;/a&gt;, in which he puts forward a thesis that we currently have the most healthy and open web ecosystem ever, because we&amp;#8217;ve got three major rendering engines (WebKit, Blink, and Gecko), they&amp;#8217;re all cross-platform, and they&amp;#8217;re all open source. This is, I think, true. Brian&amp;#8217;s argument is that this paints a better picture of the web than a lot of the doom-saying we get about how there are only a few large companies in control of the web. This is&amp;#8230; well, I think there&amp;#8217;s truth to both sides of that. Brian&amp;#8217;s right, and what he says is often overlooked. But I don&amp;#8217;t think it&amp;#8217;s the whole&amp;nbsp;story.&lt;/p&gt;
&lt;p&gt;You see, diversity of rendering engines isn&amp;#8217;t actually in itself the point. What&amp;#8217;s really important is diversity of &lt;em&gt;influence&lt;/em&gt;: who has the ability to make decisions which shape the web in particular ways, and do they make those decisions for good reasons or not so good? Historically, when each company had one browser, and each browser had its own rendering engine, these three layers were good proxies for one another: if one company&amp;#8217;s browser achieved a lot of dominance, then that automatically meant dominance for that browser&amp;#8217;s rendering engine, and also for that browser&amp;#8217;s creator. Each was isolated; a separate codebase with separate developers and separate strategic priorities. Now, though, as Brian says, that&amp;#8217;s not the case. Basically every device that can see the web and isn&amp;#8217;t a desktop computer and isn&amp;#8217;t explicitly running Chrome is a WebKit browser; it&amp;#8217;s not just &amp;#8220;iOS Safari&amp;#8217;s engine&amp;#8221;. A whole bunch of long-tail browsers are essentially a rethemed Chrome and thus Blink: Brave and Edge are high up among&amp;nbsp;them. &lt;/p&gt;
&lt;p&gt;However, engines being open source doesn&amp;#8217;t change who can influence the &lt;em&gt;direction&lt;/em&gt;; it just allows others to contribute to the implementation. Pick something uncontroversial which seems like a good idea: say, &lt;a href="https://caniuse.com/#feat=avif"&gt;&lt;span class="caps"&gt;AVIF&lt;/span&gt; image format&lt;/a&gt; support, which at time of writing (May 2020) has no support in browsers yet. (Firefox has an in-progress implementation.) I don&amp;#8217;t think anyone particularly &lt;em&gt;objects&lt;/em&gt; to this format; it&amp;#8217;s just not at the top of anyone&amp;#8217;s list yet. So, if you were mad keen on &lt;span class="caps"&gt;AVIF&lt;/span&gt; support being in browsers everywhere, then you&amp;#8217;re in a really good position to make that happen right now, and this is exactly the benefit of having an open ecosystem. You could build that support for Gecko, WebKit, and Blink, contribute it upstream, and (assuming you didn&amp;#8217;t do anything weird), it&amp;#8217;d get accepted. If you can&amp;#8217;t build that yourself then you ring up a firm, such as Igalia, whose raison d&amp;#8217;etre is doing exactly this sort of thing and they write it for you in exchange for payment of some kind. Hooray! We&amp;#8217;ve basically never been in this position before: currently, for the first time in the history of the web, a dedicated outsider can contribute to essentially every browser available. How good is that? Very good, is how good it&amp;nbsp;is.&lt;/p&gt;
&lt;p&gt;Obviously, this only applies to things that everyone agrees on. If you show up with a patchset that provides support for the &lt;code&gt;&amp;lt;stuart&amp;gt;&lt;/code&gt; element, you will be told: go away and get this standardised first. And that&amp;#8217;s absolutely&amp;nbsp;correct.&lt;/p&gt;
&lt;p&gt;But it doesn&amp;#8217;t let you influence the strategic direction, and this is where the notions of diversity in rendering engines and diversity in influence begins to break down. If you show up to the Blink repository with a patchset that wires an adblocker directly into the rendering engine, it is, frankly, not gonna show up in Chrome. If you go to WebKit with a complete implementation of service worker support, or web payments, it&amp;#8217;s not gonna show up in iOS Safari. The companies who make the browsers maintain private forks of the open codebase, into which they add proprietary things and from which they remove open source things they don&amp;#8217;t want. It&amp;#8217;s not actually clear to me whether such changes would even be accepted into the open source codebases or whether they&amp;#8217;d be blocked by the companies who are the primary sponsors of those open source codebases, but leave that to one side. The key point here is that the open ecosystem is only actually open to non-controversial change. The ability to make, or to refuse, controversial changes is reserved to the major browser vendors alone: they can make changes and don&amp;#8217;t have to ask your permission, and you&amp;#8217;re not in the same position. And sure, that&amp;#8217;s how the world works, and there&amp;#8217;s an awful lot of ingratitude out there from people who demand that large companies dedicate billions of pounds to a project and then have limited say over what it&amp;#8217;s spent &lt;em&gt;on&lt;/em&gt;, which is pretty galling from time to&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Brian references Jeremy Keith&amp;#8217;s &lt;a href="https://adactio.com/journal/16331"&gt;Unity&lt;/a&gt; in which Jeremy says: &amp;#8220;But then I think of situations where complete unity isn’t necessarily a good thing. Take political systems, for example. If you have hundreds of different political parties, that’s not ideal. But if you only have one political party, that’s very bad indeed!&amp;#8221; This is true, but again the nuance is different, because what this is about is influence. If one party wins a large majority, then it doesn&amp;#8217;t matter whether they&amp;#8217;re opposed by one other party or fifty, because they don&amp;#8217;t have to listen to the opposition. (And Jeremy makes this point.) This was the problem with Internet Explorer: it was dominant enough that &lt;span class="caps"&gt;MS&lt;/span&gt; didn&amp;#8217;t have to give a damn what anyone else thought, and so they didn&amp;#8217;t. Now, this problem does eventually correct itself in both browsers and political systems, but it takes an awfully long time; a dominant thing has a &lt;em&gt;lot&lt;/em&gt; of inertia, and explaining to a peasant in &lt;span class="caps"&gt;250AD&lt;/span&gt; that the Roman Empire will go away eventually is about as useful as explaining to a web developer in &lt;span class="caps"&gt;2000AD&lt;/span&gt; that &lt;span class="caps"&gt;CSS&lt;/span&gt; is coming soon, i.e., cold comfort at best and double-plus-frustrating at&amp;nbsp;worst.&lt;/p&gt;
&lt;p&gt;So, a qualified hooray, I suppose. I concur with Brian that &amp;#8220;things are better and healthier because we continue to find better ways to work together. And when we do, everyone does better.&amp;#8221; There is a bunch of stuff that &lt;em&gt;is&lt;/em&gt; uncontroversial, and does make the web better, and it is wonderful that we&amp;#8217;re not limited to begging browser vendors to care about it to get it. But I think that definition excludes a bunch of &amp;#8220;things&amp;#8221; that we&amp;#8217;re not allowed, for reasons we can only speculate&amp;nbsp;about.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 26 May 2020 14:52:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-05-26:/days/2020/05/26/browsers-are-not-rendering-engines/</guid><category>General musings</category></item><item><title>Remediating sites</title><link>https://www.kryogenix.org/days/2020/05/14/remediating-sites/</link><description>&lt;p&gt;Sometimes you&amp;#8217;ll find yourself doing a job where you need to make alterations to a web page that already exists, and where you can&amp;#8217;t change the &lt;span class="caps"&gt;HTML&lt;/span&gt;, so your job is to write some bits of JavaScript to poke at the page, add some attributes and some event handlers, maybe move some things around. This sort of thing comes up a lot with accessibility remediations, but maybe you&amp;#8217;re working with an ancient &lt;span class="caps"&gt;CMS&lt;/span&gt; where changing the templates is a no-no, or you&amp;#8217;re plugging in some after-the-fact support into a site that can&amp;#8217;t be changed without a big approval process but adding a script element is allowed. So you write a script, no worries. How do you test&amp;nbsp;it?&lt;/p&gt;
&lt;p&gt;Well, one way is to actually do it: we assume that the way your work will eventually be deployed is that you&amp;#8217;ll give the owners a script file, they&amp;#8217;ll upload it somehow to the site and add a script element that loads it. That&amp;#8217;s likely to be a very slow and cumbersome process, though (if it wasn&amp;#8217;t, then you wouldn&amp;#8217;t need to be fixing the site by poking it with &lt;span class="caps"&gt;JS&lt;/span&gt;, would you? you&amp;#8217;d just fix the &lt;span class="caps"&gt;HTML&lt;/span&gt; as God intended web developers to do) and so there ought to be a better way. A potential better way is to have them add a script element that points at your script on some other server, so you can iterate on that and then eventually send over the finished version when done. But that&amp;#8217;s still pretty annoying, and it means putting that on the live server (&amp;#8220;a &amp;#8216;staging&amp;#8217; server? no, I don&amp;#8217;t think we&amp;#8217;ve got one of those&amp;#8221;) and then having something in your script which only runs it if it&amp;#8217;s you testing. Alternatively, you might download the &lt;span class="caps"&gt;HTML&lt;/span&gt; for the page with Save Page As and grab all the dependencies. But that never works quite right, does&amp;nbsp;it?&lt;/p&gt;
&lt;p&gt;The way I do this is with &lt;a href="https://addons.mozilla.org/en-GB/firefox/addon/greasemonkey/"&gt;Greasemonkey&lt;/a&gt;. Greasemonkey, or its Chrome-ish cousin &lt;a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=en"&gt;Tampermonkey&lt;/a&gt;, has been around forever, and it lets you write custom scripts which it then takes care of loading for you when you visit a specified &lt;span class="caps"&gt;URL&lt;/span&gt;. Great stuff: write your thing as a Greasemonkey script to test it and then when you&amp;#8217;re happy, send the script file to the client and you&amp;#8217;re&amp;nbsp;done.&lt;/p&gt;
&lt;p&gt;There is a little nuance here, though. A Greasemonkey script isn&amp;#8217;t exactly the same as a script in the page. This is partially because of browser security restrictions, and partially because &lt;span class="caps"&gt;GM&lt;/span&gt; scripts have certain magic privileged access that scripts in the page don&amp;#8217;t have. What this means is that the Greasemonkey script environment is quite sandboxed away; it doesn&amp;#8217;t have direct access to stuff in the page, and stuff in the page doesn&amp;#8217;t have direct access to it (in the early days, there were security problems where in-page script walked its way back up the object tree until it got hold of one of the magic Greasemonkey objects and then used that to do all sorts of naughty privileged things that it shouldn&amp;#8217;t have been able to, and so it all got rigorously sandboxed away to prevent that). So, if the page loads jQuery, say, and you want to use that, then you can&amp;#8217;t, because your script is in its own little world with a peephole to the page, and getting hold of in-page objects is awkward. Obviously, your remediation script can&amp;#8217;t be relying on any of these magic &lt;span class="caps"&gt;GM&lt;/span&gt; privileges (because it won&amp;#8217;t have them when it&amp;#8217;s deployed for real), so you don&amp;#8217;t intend to use them, but because &lt;span class="caps"&gt;GM&lt;/span&gt; doesn&amp;#8217;t know that, it still isolates your script away. Fortunately, there&amp;#8217;s a neat little trick to have the best of both worlds; to create the script in &lt;span class="caps"&gt;GM&lt;/span&gt; to make it easy to test and iterate, but have the script run in the context of the page so it gets the environment it&amp;nbsp;expects.&lt;/p&gt;
&lt;p&gt;What you do is, put all your code in a function, stringify it, and then push that string into an in-page script. Like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// ==UserScript==&lt;/span&gt;
&lt;span class="c1"&gt;// @name     Stuart&amp;#39;s GM remediation script&lt;/span&gt;
&lt;span class="c1"&gt;// @version  1&lt;/span&gt;
&lt;span class="c1"&gt;// @grant    none&lt;/span&gt;
&lt;span class="c1"&gt;// ==/UserScript==&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* All your code goes below here... */&lt;/span&gt;



    &lt;span class="cm"&gt;/* ...and above here. */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)();&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That&amp;#8217;s it. Your code is defined in Greasemonkey, but it&amp;#8217;s actually executed as though it were a &lt;code&gt;script&lt;/code&gt; element in the page. You should basically pretend that that code doesn&amp;#8217;t exist and just write whatever you planned to inside the &lt;code&gt;main()&lt;/code&gt; function. You can define other functions, add event handlers, whatever you fancy. This is a neat trick; I&amp;#8217;m not sure if I invented it or picked it up from somewhere else years ago (and if someone knows, tell me and I&amp;#8217;ll happily link to whoever invented it), but it&amp;#8217;s really useful; you build the remediation script, doing whatever you want it to do, and then when you&amp;#8217;re happy with it, copy whatever&amp;#8217;s &lt;em&gt;inside&lt;/em&gt; the &lt;code&gt;main()&lt;/code&gt; function to a new file called &lt;code&gt;whatever.js&lt;/code&gt; and send that to the client, and tell them: upload this to your creaky old &lt;span class="caps"&gt;CMS&lt;/span&gt; and then link to it with a &lt;code&gt;script&lt;/code&gt; element. Job done. Easier for you, easier for&amp;nbsp;them!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 14 May 2020 18:05:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-05-14:/days/2020/05/14/remediating-sites/</guid><category>General musings</category></item><item><title>Hammer and nails</title><link>https://www.kryogenix.org/days/2020/05/06/hammer-and-nails/</link><description>&lt;p&gt;There is a Linux distribution called Gentoo, named after a type of penguin (of &lt;em&gt;course&lt;/em&gt; it&amp;#8217;s named after a penguin), where installing an app doesn&amp;#8217;t mean that you download a working app. Instead, when you say &amp;#8220;install this app&amp;#8221;, it downloads the source code for that app and then compiles it on your computer. This apparently gives you the freedom to make changes to exactly how that app is built, even as it requires you to have a full set of build tools and compilers and linkers just to get a calculator. I think it&amp;#8217;s clear that the world at large has decided that this is not the way to do things, as evidenced by how almost no other OSes take this approach &amp;#8212; you download a compiled binary of an app and run it, no compiling involved &amp;#8212; but it&amp;#8217;s nice that it exists, so that the few people who really want to take this approach can choose to do&amp;nbsp;so.&lt;/p&gt;
&lt;p&gt;This sort of thing gets a lot of sneering from people who think that all Linux OSes are like that, that people who run Linux think that it&amp;#8217;s about compiling your own kernels and using the Terminal all the time. &lt;em&gt;Why would you want to do that sort of thing, you neckbeard,&lt;/em&gt; is the underlying message, and I largely agree with it; to me (and most people) it seems complicated and harder work for the end user, and mostly a waste of time &amp;#8212; the small amount of power I get from being able to tweak how a thing is built is vastly outweighed by the annoyance of &lt;em&gt;having&lt;/em&gt; to build it if I want it. Now, a Gentoo user doesn&amp;#8217;t actually have to know anything about compilation and build tools, of course; it&amp;#8217;s all handled quietly and seamlessly by the install command, and the compilers and linkers and build tools are run for you without you needing to understand. But it&amp;#8217;s still a bunch of things that my computer has to do that I&amp;#8217;m just not interested in it doing, and I imagine you feel the&amp;nbsp;same.&lt;/p&gt;
&lt;p&gt;So I find it disappointing that this is how half the web industry have decided to make websites these&amp;nbsp;days.&lt;/p&gt;
&lt;p&gt;We don&amp;#8217;t give people a website any more: something that already works, just &lt;span class="caps"&gt;HTML&lt;/span&gt; and &lt;span class="caps"&gt;CSS&lt;/span&gt; and JavaScript ready to show them what they want. Instead, we give them the bits from which a website is made and then have &lt;em&gt;them&lt;/em&gt; compile&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Instead of an &lt;span class="caps"&gt;HTML&lt;/span&gt; page, you get some templates and some &lt;span class="caps"&gt;JSON&lt;/span&gt; data and some build tools, and then that compiler runs in your browser and assembles a website out of the component parts. That&amp;#8217;s what a &amp;#8220;framework&amp;#8221; &lt;em&gt;does&lt;/em&gt;… it builds the website, in real time, from separate machine-readable pieces, on the user&amp;#8217;s computer, every time they visit the website. Just like Gentoo does when you install an app. Sure, you could make the case that the browser is always assembling a website from parts &amp;#8212; &lt;span class="caps"&gt;HTML&lt;/span&gt;, &lt;span class="caps"&gt;CSS&lt;/span&gt;, some &lt;span class="caps"&gt;JS&lt;/span&gt; &amp;#8212; but this is another step beyond that; we ship a bunch of stuff in a made-up framework and a set of build tools, the build tools assemble &lt;span class="caps"&gt;HTML&lt;/span&gt; and &lt;span class="caps"&gt;CSS&lt;/span&gt; and JavaScript, and &lt;em&gt;then&lt;/em&gt; the browser still has to do its bit to build that into a website. Things that should be a long way from the user are now being done much closer to them. And why? &amp;#8220;&lt;a href="https://macwright.org/2020/05/10/spa-fatigue.html"&gt;We&amp;#8217;re layering optimizations upon optimizations in order to get the &lt;span class="caps"&gt;SPA&lt;/span&gt;-like pattern to fit every use case&lt;/a&gt;, and I’m not sure that it is, well, worth it.&amp;#8221; says Tom&amp;nbsp;MacWright.&lt;/p&gt;
&lt;p&gt;Old joke: someone walks into a cheap-looking hotel and asks for a room. You&amp;#8217;ll have to make your own bed, says the receptionist. The visitor agrees, and is told: you&amp;#8217;ll find a hammer and nails behind the&amp;nbsp;door.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-conversation="none" data-theme="dark"&gt;&lt;p lang="en" dir="ltr"&gt;What about the About page? That is just static text, surely that’s quicker? No, it is worse. (Of course, all the &lt;span class="caps"&gt;JS&lt;/span&gt;/&lt;span class="caps"&gt;CSS&lt;/span&gt; would be cached, but so to on mine, and you still don’t have to wait for &lt;span class="caps"&gt;JS&lt;/span&gt; to construct your &lt;span class="caps"&gt;HTML&lt;/span&gt; if you just give it &lt;span class="caps"&gt;HTML&lt;/span&gt;.) &lt;a href="https://t.co/Rxyz322ngt"&gt;pic.twitter.com/Rxyz322ngt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Matthew Somerville (@dracos) &lt;a href="https://twitter.com/dracos/status/1251836599421329410?ref_src=twsrc%5Etfw"&gt;April 19, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/p&gt;
&lt;p&gt;Almost all of us don&amp;#8217;t want this for our native apps, and think it would be ridiculous; why have we decided that our users have to have it on their websites? Web developers: maybe stop insisting that your users compile your apps for you? Or admit that you&amp;#8217;ll put them through an experience that you certainly don&amp;#8217;t tolerate on your own desktops, where you expect to download an app, not to be forced to compile it every time you run it? &lt;em&gt;You&amp;#8217;re&lt;/em&gt; not neckbeards… you just demand that your users have to be. You&amp;#8217;re neckbeard &lt;em&gt;creators&lt;/em&gt;. You want to browse this website? Here&amp;#8217;s a hammer and&amp;nbsp;nails.&lt;/p&gt;
&lt;p&gt;Unless you run Gentoo already, of course! In which case… compile away. &lt;img src="https://kryogenix.org/images/penguin.png"
alt="" style="display:inline;box-shadow:none;vertical-align:text-top"&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 06 May 2020 11:41:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-05-06:/days/2020/05/06/hammer-and-nails/</guid><category>General musings</category></item><item><title>Remote Applause</title><link>https://www.kryogenix.org/days/2020/04/27/remote-applause/</link><description>&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;For online conferences, someone should make it so 👏🏻 or 😆 in the chat leads to the sound of claps and laughs on video. The audience feels like a missing piece of what makes conferences so special. (The more claps and laughs, the more clap and laugh track should be played)&lt;/p&gt;— Nicole Sullivan (@stubbornella) &lt;a href="https://twitter.com/stubbornella/status/1254164566017114112?ref_src=twsrc%5Etfw"&gt;April 25, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;That’s a cool idea, I thought.&lt;/p&gt;
&lt;p&gt;So I built &lt;a href="https://stuartlangridge.github.io/remote-applause/"&gt;Remote Applause&lt;/a&gt;, which does exactly that. Give your session a name, and it gives you a page to be the “stage”, and a link to send to everyone in the “audience”. The audience link has “clap” and “laugh” buttons; when anyone presses one, your stage page plays the sound of a laughter track or applause. Quite neat for an afternoon hack, so I thought I’d talk about how it works.&lt;/p&gt;
&lt;p&gt;&lt;img alt="the Remote Applause audience page" src="https://kryogenix.org/images/rabanner.png"&gt;&lt;/p&gt;
&lt;p&gt;Basically, it’s all driven by WebRTC data connections. WebRTC is notoriously difficult to get right, but fortunately &lt;a href="https://peerjs.com/"&gt;PeerJS&lt;/a&gt; exists which does most of the heavy lifting.&lt;sup id="sf-remote-applause-1-back"&gt;&lt;a href="#sf-remote-applause-1" class="simple-footnote" title="but it requires javascript! Aren’t you always going on about that, Stuart? Well, yes. However, it’s flat-out not possible to do real-time two-way communication sanely without it, so I’m OK with requiring JS in this particular case. For your restaurant menu, no."&gt;1&lt;/a&gt;&lt;/sup&gt; It seemed to be abandoned a few years ago, but they’ve picked it up again since, which is good news. Essentially, the way the thing works is as follows:&lt;/p&gt;
&lt;p&gt;When you name your session, the “stage” page calculates a unique &lt;span class="caps"&gt;ID&lt;/span&gt; from that name, and registers with that name on PeerJS’s coordination server. The audience page calculates the same &lt;span class="caps"&gt;ID&lt;/span&gt;&lt;sup id="sf-remote-applause-2-back"&gt;&lt;a href="#sf-remote-applause-2" class="simple-footnote" title="using a quick JS version of Java’s hashCode function, because PeerJS has requirements on ID strings that exclude some of the characters in base64 so I couldn’t use window.btoa(), I didn’t want (or need) a whole hash library, and the  is complex"&gt;2&lt;/a&gt;&lt;/sup&gt;, registers itself with a random &lt;span class="caps"&gt;ID&lt;/span&gt;, and opens a PeerJS data connection to the stage page (because it knows what its &lt;span class="caps"&gt;ID&lt;/span&gt; is). PeerJS is just using WebRTC data connections under the covers, but the PeerJS people provide the signalling server, which the main alternative &lt;a href="https://github.com/feross/simple-peer"&gt;simple-peer&lt;/a&gt; doesn’t, and I didn’t want to have to run a signalling server myself because then I’d need server-side hosting for it.&lt;/p&gt;
&lt;p&gt;The audience page can then send a “clap” or “laugh” message down that connection whenever the respective button is pressed, and the stage page receives that message and plays the appropriate sound. Well, it’s a fraction more complex than that. The two sounds, clapping and laughing, are constantly playing on a loop but muted. When the stage receives messages, it changes the volume on the sounds. Fortunately, the stage knows how many incoming connections there are, and it knows who the messages are coming in from, so it can scale the volume change appropriately; if most of the audience send a clap, then the stage can jack the clapping volume up to 100%, and if only a few people do then it can still play the clapping but at much lower volume. This largely does away with the need for moderation; a malicious actor who hammers the clap button as often as they can can at the very worst only make the applause track play at full volume, and most of the time they’ll be one in 50 people and so can only make it play at 5% volume or something.&lt;/p&gt;
&lt;p&gt;There are a couple of extra wrinkles. The first one is that autoplaying sounds are a no-no, because of all the awful advertising people who misused them to have autoplaying videos as soon as you opened a page; sound can only start playing if it’s driven by a user gesture of some kind. So the stage has an “enable sounds” checkbox; turning that checkbox on counts as the user gesture, so we can start actually playing the sounds but at zero volume, and we also take advantage of that to send a message to all the connected audience pages to tell them it’s enabled… and the audience pages don’t show the buttons until they get that message, which is handy. The second thing is that when the stage receives a clap or laugh from an audience member it rebroadcasts that to all other audience members; this means that each audience page can show a little clap emoji when that happens, so you can see how many other people are clapping as well as hear it over the conference audio. And the third… well, the third is a bit more annoying.&lt;/p&gt;
&lt;p&gt;If an audience member closes their page, the stage ought to get told about that somehow. And it does… in Firefox. The PeerJS &lt;code&gt;connection&lt;/code&gt; object fires a &lt;code&gt;close&lt;/code&gt; event when this happens, so, hooray. In Chrome, though, we never get that event. As far as I can tell it’s a known bug in PeerJS, or possibly in Chrome’s WebRTC implementation; I didn’t manage to track it down further than the PeerJS issues list. So what we &lt;em&gt;also&lt;/em&gt; do in the stage is poll the PeerJS connection object for every connection every few seconds with &lt;code&gt;setInterval&lt;/code&gt;, because it exposes the underlying WebRTC connection object, and that does indeed have a property dictating its current state. So we check that and if it’s showing &lt;code&gt;disconnected&lt;/code&gt;, we treat that the same as the &lt;code&gt;close&lt;/code&gt; event. Easily enough solved.&lt;/p&gt;
&lt;p&gt;There are more complexities than that, though. WebRTC is pretty goshdarn flaky, in my experience. If the stage runner is using a lot of their bandwidth, then the connections to the stage drop, like, a &lt;em&gt;lot&lt;/em&gt;, and need to be reconnected. I suppose it would be possible to quietly gloss over this in the &lt;span class="caps"&gt;UI&lt;/span&gt; and just save stuff up for when the connection comes back, but I didn’t do that, firstly because I &lt;strong&gt;hate&lt;/strong&gt; it when an app pretends it’s working but actually it isn’t, and secondly because of…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Latency.&lt;/strong&gt; This is the other big problem, and I don’t think it’s one that Remote Applause can fix, because it’s not &lt;span class="caps"&gt;RA&lt;/span&gt;’s problem. You see, the model for this is that I’m streaming myself giving a talk as part of an online conference, right? Now, testing has demonstrated that when doing this on Twitch or YouTube Live or whatever, there’s a delay of anything from 5 to 30 seconds or so in between me saying something and the audience hearing it. Anyone who’s tried interacting with the live chat while streaming will have experienced this. Normally that’s not all that big a problem (except for interacting with the live chat) but it’s definitely a problem for this, because even if Remote Applause is instantaneous (which it pretty much is), when you press the button to applaud, the speaker is 10 seconds further into their talk. So you’ll be applauding the wrong thing. I’m not sure that’s fixable; it’s pretty much an inherent limitation of streaming video. Microsoft reputedly have a &lt;a href="https://docs.microsoft.com/en-us/azure/media-services/latest/live-event-latency"&gt;low latency streaming video service&lt;/a&gt; but most people aren’t using it; maybe Twitch and YouTube will adopt this technology. &lt;/p&gt;
&lt;p&gt;Still, it was a fun little project! Nice to have a reason to use PeerJS for something. And it’s &lt;a href="https://stuartlangridge.github.io/remote-applause/"&gt;hosted on Github Pages&lt;/a&gt; because it’s all client side, so it doesn’t cost me anything to run, which is nice and so I can just leave it up even if nobody’s using it. And I quite like the pictures, too; the stage page shows a view of an audience &lt;em&gt;from&lt;/em&gt; the stage (specifically, &lt;a href="https://en.wikipedia.org/wiki/Metropolitan_Opera_House_(39th_Street)"&gt;the old Met in New York&lt;/a&gt;), and the audience page shows a speaker &lt;em&gt;on&lt;/em&gt; stage (specifically, &lt;a href="https://nl.wikipedia.org/wiki/Zwarte_Riek"&gt;Rika Jansen&lt;/a&gt; (page in Dutch), a Dutch singer, mostly because I liked the picture and she looks cool).&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-remote-applause-1"&gt;but it requires javascript! Aren’t you always going on about that, Stuart? Well, yes. However, it’s flat-out not possible to do real-time two-way communication sanely without it, so I’m &lt;span class="caps"&gt;OK&lt;/span&gt; with requiring &lt;span class="caps"&gt;JS&lt;/span&gt; in this particular case. For your restaurant menu, no. &lt;a href="#sf-remote-applause-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-remote-applause-2"&gt;using a quick &lt;span class="caps"&gt;JS&lt;/span&gt; version of Java’s &lt;code&gt;hashCode&lt;/code&gt; function, because PeerJS has requirements on &lt;span class="caps"&gt;ID&lt;/span&gt; strings that exclude some of the characters in base64 so I couldn’t use &lt;code&gt;window.btoa()&lt;/code&gt;, I didn’t want (or need) a whole hash library, and the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto"&gt;Web Crypto &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; is complex &lt;a href="#sf-remote-applause-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 27 Apr 2020 20:31:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-04-27:/days/2020/04/27/remote-applause/</guid><category>General musings</category></item><item><title>A UK map made of squares</title><link>https://www.kryogenix.org/days/2020/04/15/a-uk-map-made-of-squares/</link><description>&lt;p&gt;For a visualisation thing I was doing, I wanted a &lt;span class="caps"&gt;UK&lt;/span&gt; map made out of small squares: these seem a useful way to make heatmaps of the way a thing affects the &lt;span class="caps"&gt;UK&lt;/span&gt;. There are &lt;a href="https://www.google.com/search?q=map+of+the+uk+made+of+squares&amp;amp;tbm=isch"&gt;plenty of such maps&lt;/a&gt; but they all seem to be on stock image sites which want you to licence them and so on and that seems a bit annoying, so I figured I&amp;#8217;d make&amp;nbsp;one.&lt;/p&gt;
&lt;p&gt;George Hodan has created &lt;a href="https://www.publicdomainpictures.net/en/view-image.php?image=38884"&gt;a public domain (&lt;span class="caps"&gt;CC0&lt;/span&gt;) map of the &lt;span class="caps"&gt;UK&lt;/span&gt;&lt;/a&gt; (&lt;a href="https://kryogenix.org/images/uk-as-squares/map-of-england.jpg"&gt;mirror here&lt;/a&gt;), so that was a good place to start. Then a &lt;a href="https://kryogenix.org/images/uk-as-squares/makesvg.py"&gt;small Python script&lt;/a&gt; and I&amp;#8217;d made an &lt;span class="caps"&gt;SVG&lt;/span&gt; of the&amp;nbsp;map:&lt;/p&gt;
&lt;p&gt;&lt;img style="background: white" src="https://kryogenix.org/images/uk-as-squares/uk-as-squares-20x30.svg" alt="a 20x30 map of the UK"&gt;&lt;/p&gt;
&lt;p&gt;and that&amp;#8217;s all I wanted. Hooray. The script lets me tell it how many squares I want the &lt;span class="caps"&gt;UK&lt;/span&gt; map divided up into, so I generated it in various different sizes (&lt;a href="https://kryogenix.org/images/uk-as-squares/uk-as-squares-10x15.svg"&gt;10x15&lt;/a&gt;, &lt;a href="https://kryogenix.org/images/uk-as-squares/uk-as-squares-15x22.svg"&gt;15x22&lt;/a&gt;, &lt;a href="https://kryogenix.org/images/uk-as-squares/uk-as-squares-20x30.svg"&gt;20x30&lt;/a&gt;, &lt;a href="https://kryogenix.org/images/uk-as-squares/uk-as-squares-30x45.svg"&gt;30x45&lt;/a&gt;, &lt;a href="https://kryogenix.org/images/uk-as-squares/uk-as-squares-40x61.svg"&gt;40x61&lt;/a&gt;, &lt;a href="https://kryogenix.org/images/uk-as-squares/uk-as-squares-50x76.svg"&gt;50x76&lt;/a&gt;) because that was convenient. If you want it in a size that isn&amp;#8217;t one of those, grab the script and go for&amp;nbsp;it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 15 Apr 2020 10:19:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-04-15:/days/2020/04/15/a-uk-map-made-of-squares/</guid><category>General musings</category></item><item><title>Online shopping at the Co-op</title><link>https://www.kryogenix.org/days/2020/03/16/online-shopping-at-the-co-op/</link><description>&lt;p&gt;On the Saturday just gone, I thought to myself: &lt;span class="caps"&gt;OK&lt;/span&gt;, better get some food in. The cupboards aren’t bare or anything, but my freezer was showing a distinct skew towards “things that go with the main bit of dinner” and away from “things that &lt;em&gt;are&lt;/em&gt; the main bit of dinner”, which is a long way of saying: didn’t have any meat. So, off to online shopping!&lt;/p&gt;
&lt;p&gt;I sorta alternate between Tesco and Sainsbury’s for grocery shopping; Tesco decided they wouldn’t deliver to the centre of the city for a little while, but they’re back on it now. Anyway, I was rather disillusioned to see that both of them had no delivery slots available for at least a week. It seems that not only are people &lt;a href="https://www.independent.co.uk/news/world/americas/coronavirus-toilet-paper-panic-buying-covid-19-uk-australia-a9403351.html"&gt;panic-buying toilet roll&lt;/a&gt;, they’re panic-buying everything else too. I don’t want to wait a week. So, have a poke around some of the others… and they’re all the same. Asda, Morrisons, Ocado, Iceland… wait a week at least for a delivery. Amazon don’t do proper food in the &lt;span class="caps"&gt;UK&lt;/span&gt; — “Amazon Pantry” basically sells jars of sun-dried tomatoes and things, not actual food — and so I was a little stymied. Hm. What to do? And then I thought of the &lt;a href="https://quickshop.coop.co.uk"&gt;Co-op&lt;/a&gt;. Which turned out to be an enormously pleasant surprise.&lt;/p&gt;
&lt;p&gt;Their online shopping thing is rather neat. There is considerably less selection than there is from the big supermarkets, it must be admitted. But the way you order shows quite a lot of thinking about user experience. You go to the &lt;a href="https://quickshop.coop.co.uk"&gt;Co-op quickshop&lt;/a&gt; and… put in your postcode. No signup required. And the delay is close to zero. It’s currently 2pm on Monday, and I fill in my postcode and it tells me that the next available slot is 4pm on Monday. Two hours from now. That’s flat-out impossible everywhere else; the big supermarkets will only have slots starting from tomorrow even in less trying times. You go through and add the things you want to buy and then fill in your card details to pay… and then a chap on a motorbike goes to the Co-op, picks up your order, and drives it to your place. I got a text message&lt;sup id="sf-online-shopping-at-the-co-op-1-back"&gt;&lt;a href="#sf-online-shopping-at-the-co-op-1" class="simple-footnote" title="the company that they use to be couriers are called Stuart. This was confusing!"&gt;1&lt;/a&gt;&lt;/sup&gt; when the motorbike chap set off, before he’d even got to the Co-op, giving me a &lt;span class="caps"&gt;URL&lt;/span&gt; by which I could track his progress. I got messages as he picked up the shopping and headed for mine. He arrived and gave me the stuff. All done.&lt;/p&gt;
&lt;p&gt;It seemed very community-focused, very grass-roots. They don’t do their own deliveries; they use a courier, but a very local one. The stuff’s put into bags by your local Co-op and then delivered directly to you with very little notice. They’re open about the process and what’s going on. It seems so much more personal than the big supermarkets do… which I suppose is the Co-op’s whole shtick in the first place, and it’s commendable that they’ve managed to keep that the case even though they’ve moved online. And while the Co-op is a nationwide organisation, it’s also &lt;a href="https://www.coop.co.uk/communities"&gt;rather local and community-focused&lt;/a&gt;. I’ll be shopping there again; shame on me that I had to be pushed into it this first time.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-online-shopping-at-the-co-op-1"&gt;the company that they use to be couriers are called Stuart. This was confusing! &lt;a href="#sf-online-shopping-at-the-co-op-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 16 Mar 2020 13:56:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-03-16:/days/2020/03/16/online-shopping-at-the-co-op/</guid><category>General musings</category></item><item><title>On ethical design, and the Ethical Design Handbook</title><link>https://www.kryogenix.org/days/2020/03/03/on-ethical-design-and-the-ethical-design-handbook/</link><description>&lt;p&gt;We live in a world where websites and apps mostly make people unhappy. Buying or ordering or interacting with anything at all online involves a thousand little unpleasant bumps in the road, a thousand tiny chips struck off the edges of your soul. &amp;#8220;This website uses cookies: accept all?&amp;#8221; Videos that appear over the thing you&amp;#8217;re reading and start playing automatically. Grant this app access to your contacts? Grant this app access to your location? &amp;#8220;Sign up for our newsletter&amp;#8221;, with a second button saying &amp;#8220;No, because I hate free things and also hate America&amp;#8221;. Better buy quick &amp;#8212; there&amp;#8217;s only 2 tickets/beds/rooms/spaces left! Now now&amp;nbsp;now!&lt;/p&gt;
&lt;p&gt;This is not new news. Everyone already knows this. If you ask people &amp;#8212; ordinary, real people, not techies &amp;#8212; about their experiences of buying things online or reading things online and say, &lt;em&gt;was this a pleasant thing to do? were you delighted by it?&lt;/em&gt; then you&amp;#8217;re likely to get a series of wry headshakes. It&amp;#8217;s not just that everyone knows this, everyone&amp;#8217;s rather &lt;em&gt;inured&lt;/em&gt; to it; the expectation is that it will be a bit annoying but you&amp;#8217;ll muddle through. If you said, what&amp;#8217;s it like for you when your internet connection goes down, or you want to change a flight, they will say, yeah, I&amp;#8217;ll probably have to spend half an hour on hold, and the call might drop when I get to queue position 2 and I&amp;#8217;ll have to call again, and they&amp;#8217;ll give me the runaround; the person on the call will be helpful, but Computer will Say No. Decent customer service is no longer something that we expect to receive; it&amp;#8217;s something unusual and weird. Even &lt;em&gt;average&lt;/em&gt; non-hostile customer service is now so unusual that we&amp;#8217;re a bit delighted when it happens; when the corporate body politic rouses itself to do something &lt;em&gt;other&lt;/em&gt; than cram a live rattlesnake up your bottom in pursuit of faceless endless profit then that counts as an unexpected and pleasant&amp;nbsp;surprise.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;d be nice if the world wasn&amp;#8217;t like that. But one thing we&amp;#8217;re a bit short of is the vocabulary for &lt;em&gt;talking&lt;/em&gt; about this; rather than the online experience being a largely grey miasma of unidentified minor divots, can we enumerate the specific things that make us unhappy? And for each one, look at how it could be done better and why it should be done&amp;nbsp;better?&lt;/p&gt;
&lt;p&gt;Trine Falbe, Kim Andersen, and Martin Michael Frederiksen think maybe we can, and have written &lt;a href="https://www.smashingmagazine.com/2020/03/ethical-design-handbook-release/"&gt;&lt;em&gt;The Ethical Design Handbook&lt;/em&gt;&lt;/a&gt;, published by Smashing Media. It&amp;#8217;s written, as they say, for professionals &amp;#8212; for the people building these experiences, to explain how and why to do better, rather than for consumers who have to endure them. And they define &amp;#8220;ethical design&amp;#8221; as &lt;em&gt;businesses, products, and services that grow from a principle of fairness and fundamental respect towards everyone involved&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;They start with some justifications for why ethical design is important, and I&amp;#8217;ll come back to that later. But then there&amp;#8217;s a neat segue into different types of &lt;strong&gt;un&lt;/strong&gt;ethical design, and this is fascinating. There&amp;#8217;s nothing here that will come as a surprise to most people reading it, especially most tech professionals, but I&amp;#8217;d not seen it enumerated quite this baldly before. They describe, and name, all sorts of dark patterns and unpleasant approaches which are out there right now: mass surveillance, behavioural change, promoting addiction, manipulative design, pushing the sense of urgency through scarcity and loss aversion, persuasive design patterns; all with real examples from real places you&amp;#8217;ve heard of. Medium hiding email signup away so you&amp;#8217;ll give them details of your social media account; Huel adding things to your basket which you need to remove; Viagogo adding countdown timers to rush you into making impulsive purchases; Amazon Prime&amp;#8217;s &amp;#8220;I don&amp;#8217;t want my benefits&amp;#8221; button, meaning &amp;#8220;don&amp;#8217;t subscribe&amp;#8221;. Much of this research already existed &amp;#8212; the authors did not necessarily invent these terms and their classifications &amp;#8212; but having them all listed one after the other is both a useful resource and a rather terrifying indictment of our industry and the manipulative techniques it&amp;nbsp;uses.&lt;/p&gt;
&lt;p&gt;However, our industry does use these techniques, and it&amp;#8217;s important to ask why. The book kinda-sorta addresses this, but it shies away a little from admitting the truth: companies do this stuff because it &lt;em&gt;works&lt;/em&gt;. Is it unethical? Yeah. Does it make people unhappy? Yeah. (They quote a &lt;a href="https://behavioralscientist.org/consumers-are-becoming-wise-to-your-nudge/"&gt;rather nice study&lt;/a&gt; suggesting that half of all people recognise these tricks and distrust sites that use them, and the majority of those go further and feel disgusted and contemptuous.) But, and this is the kicker&amp;#8230; it doesn&amp;#8217;t seem to hurt the bottom line. People feel disgusted or distrusting and then still buy stuff &lt;em&gt;anyway&lt;/em&gt;. I&amp;#8217;m sure a behavioural psychologist in the 1950s would have been baffled by this: if you do stuff that makes people not like you, they&amp;#8217;ll go elsewhere, right? Which is, it seems, not the case. Much as it&amp;#8217;s occasionally easy to imagine that companies do things because they&amp;#8217;re actually evil and want to increase the amount of suffering in the world, they do not. There are no actual demons running companies. (Probably. Hail to Hastur, just in case.) Some of it is likely superstition &amp;#8212; everyone else does this technique, so it&amp;#8217;ll probably work for us &amp;#8212; and some of it really should get more rigorous testing than it does get: when your company added an extra checkbox to the user journey saying &amp;#8220;I would not dislike to not not not sign not up for the newsletter&amp;#8221;, did purchases go up, or just newsletter signups? Did you really A/B test that? Or just assume that &amp;#8220;more signups, even deceptive ones = more money&amp;#8221; without checking? But they&amp;#8217;re not all uninformed choices. Companies do test these dark patterns, and they do work. We might wish otherwise, but that&amp;#8217;s not how the world is; you can&amp;#8217;t elect a new population who are less susceptible to these tricks or more offended by them, even if you might wish&amp;nbsp;to.&lt;/p&gt;
&lt;p&gt;And thereby hangs, I think, my lack of satisfaction with the core message of this book. It&amp;#8217;s not going to convince anyone who isn&amp;#8217;t already convinced. This is where we come back to the justifications mentioned earlier. &amp;#8220;[P]rivacy is important to [consumers], and it’s a growing concern&amp;#8221;, says the book, and I wholeheartedly agree with this; I&amp;#8217;ve written and delivered &lt;a href="https://kryogenix.org/code/privacy-could-be-the-next-big-thing-hackference/"&gt;a whole talk&lt;/a&gt; on precisely this topic at a bunch of conferences. But I didn&amp;#8217;t need to read this book to feel that manipulation of the audience is a bad thing: not because it costs money or goodwill, but just because it&amp;#8217;s &lt;em&gt;wrong&lt;/em&gt;, &lt;strong&gt;even if&lt;/strong&gt; it earns you more money. It&amp;#8217;s not me you&amp;#8217;ve gotta convince: it&amp;#8217;s the people who put ethics and goodwill on one side of the balance and an increased bottom line on the other side and the increased bottom line wins. The book says &amp;#8220;It’s not good times to gamble all your hard work for quick wins at the costs of manipulation&amp;#8221;, and &amp;#8220;Surveillance capitalism is unethical by nature because at its core, it takes advantage of rich data to profile people and to understand their behaviour for the sole purpose of making money&amp;#8221;, but the people doing this know this and don&amp;#8217;t care. It in fact &lt;em&gt;is&lt;/em&gt; good times to go for quick wins at the cost of manipulation; how else can you explain so many people &lt;em&gt;doing&lt;/em&gt; it? And so the underlying message here is that the need for ethical design is &lt;em&gt;asserted&lt;/em&gt; rather than demonstrated. Someone who already buys the argument (say, me) will nod their way through the book, agreeing at every turn, and finding useful examples to bolster arguments or flesh out approaches. Someone who &lt;em&gt;doesn&amp;#8217;t&lt;/em&gt; already buy the argument will see a bunch of descriptions of a bunch of things that are, by the book&amp;#8217;s definition, unethical&amp;#8230; and then simply write &amp;#8220;but it makes us more money and that&amp;#8217;s my job, so we&amp;#8217;re doing it anyway&amp;#8221; after every sentence and leave without changing&amp;nbsp;anything.&lt;/p&gt;
&lt;p&gt;It is, unfortunately, the same approach taken by other important but ignored technical influences, such as accessibility or open source or progressive enhancement. Or, outside the tech world, environmentalism or vegetarianism. You say: this thing you&amp;#8217;re doing is bad, because just look at it, it is&amp;#8230; and here&amp;#8217;s all the people you&amp;#8217;re letting down or excluding or disenfranchising by being bad people, so stop being bad people. It seems intuitively obvious to anyone who already believes: why would you build inaccessible sites and exclude everyone who isn&amp;#8217;t able to read them? Why would you build unethical apps that manipulate people and leave them unhappy and disquieted? Why would you use plastic and drive petrol cars when the world is going to burn? But it &lt;em&gt;doesn&amp;#8217;t work&lt;/em&gt;. I wish it did. Much as the rightness and righteousness of our arguments ought to be convincing in themselves, they are not, and we&amp;#8217;re not moving the needle by continually reiterating the reasons why someone should&amp;nbsp;believe.&lt;/p&gt;
&lt;p&gt;But then&amp;#8230; maybe that&amp;#8217;s why the book is named &lt;em&gt;The Ethical Design Handbook&lt;/em&gt; and not &lt;em&gt;The Ethical Design &lt;strong&gt;Manifesto&lt;/strong&gt;&lt;/em&gt;. I went into reading this hoping that what the authors had written would be a thing to change the world, a convincer that one could hand to unethical designers or ethical designers with unethical bosses and which would make them change. It isn&amp;#8217;t. They even explicitly disclaim that responsibility early on: &amp;#8220;Designers from the dark side read other books, not this one, and let us leave it at that,&amp;#8221; says the introduction. So this maybe isn&amp;#8217;t the book that changes everyone&amp;#8217;s minds; that&amp;#8217;s someone else&amp;#8217;s job. Instead, it&amp;#8217;s a blueprint for how to build the better world once you&amp;#8217;ve already been convinced to do so. If your customers keep coming back and saying that they find your approach distasteful, if you decide to prioritise delight over conversions at least a little bit, if you&amp;#8217;re prepared to be a little less rich to be a lot more decent, then you&amp;#8217;ll need a guidebook to explain what made your people unhappy and what to do about it. In that regard, &lt;em&gt;The Ethical Design Handbook&lt;/em&gt; does a pretty good job, and if that&amp;#8217;s what you need then it&amp;#8217;s worth your&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;This is an important thing: there&amp;#8217;s often the search for a silver bullet, for a thing which fixes the world. I was guilty of that here, hoping for something which would convince unethical designers to start being ethical. That&amp;#8217;s not what this book is for. It&amp;#8217;s for those who want to but don&amp;#8217;t know how. And because of that, it&amp;#8217;s full of useful advice. Take, for example, the best practices chapter: it specifically calls out some wisdom about cookie warnings. In particular, it calls out that &lt;em&gt;you don&amp;#8217;t need cookie warnings at all&lt;/em&gt; if you&amp;#8217;re not being evil about what you plan to allow your third party advertisers to do with the data. This is pretty much the first place I&amp;#8217;ve seen this written down, despite how it&amp;#8217;s the truth. And this is useful in itself; to have something to show one&amp;#8217;s boss or one&amp;#8217;s business analyst. If the word has come down from on high to add cookie warnings to the site then pushback on that from design or development is likely to be ignored&amp;#8230; but being able to present a published book backing up those words is potentially valuable. Similarly, the book goes to some effort to &lt;em&gt;quantify&lt;/em&gt; what ethical design is, by giving scores to what you do or don&amp;#8217;t do, and this too is a good structure on which to hang a new design and to use to feed into the next thing your team builds. So, don&amp;#8217;t make the initial mistake I did, of thinking that this is a manifesto; this is a &lt;em&gt;working&lt;/em&gt; book, filled with how to actually get the job done, not a philosophical thinkpiece. &lt;a href="https://ethicaldesignhandbook.com/"&gt;Grab it&lt;/a&gt; and point at it in design meetings and use it to bolster your team through their next project. It&amp;#8217;s worth&amp;nbsp;it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 03 Mar 2020 19:08:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-03-03:/days/2020/03/03/on-ethical-design-and-the-ethical-design-handbook/</guid><category>General musings</category></item></channel></rss>