<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>as days pass by</title><link>http://www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><atom:link href="http://www.kryogenix.org/days/feed" rel="self"></atom:link><lastBuildDate>Wed, 25 Feb 2015 21:39:00 +0000</lastBuildDate><item><title>Bad Voltage Live 2015</title><link>http://www.kryogenix.org/days/2015/02/25/bad-voltage-live-2015/</link><description>&lt;p&gt;&lt;img src="http://kryogenix.org/images/IMG_5909.jpg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;This week we did the first &lt;a href="http://badvoltage.org"&gt;Bad Voltage&lt;/a&gt; live 
show, at the SCaLE conference in Los Angeles. It was the first time that
Bryan, Jono, Jeremy, and I had actually all been in the same place.
And it was a really good&amp;nbsp;laugh.&lt;/p&gt;
&lt;p&gt;We&amp;#8217;d been planning this for some time, as you can imagine. The show
normally has discussions about technical things, reviews, and amusing
things, and the live show had that in spades. It also had hundreds of
glowsticks, fifty rubber ducks, Bryan Lunduke dressed in a towel,
Jeremy giving us all insects to eat (which we all did, apart from Jono
who has still not eaten an insect because he is a little child),
a very very young child saying that Jono and I are bobbins,
a chap on a video calling Jono something &lt;em&gt;considerably&lt;/em&gt; more offensive
which we were forced to bleep out, a shower made from a tent,
shots of Fireball rum, some Creme Eggs, a trivia quiz run by Jorge
Castro, and competitions where audience members won a System76 Galago
UltraPro laptop, a PogoLinux server, and a BananaPi from Owncloud. And
lots of people liked&amp;nbsp;it. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.badvoltage.org/wp-content/uploads/2015/02/IMG_5851-960x600.jpg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;I rather enjoyed the discussions. We had two. The first was about the
idea of having a &amp;#8220;developer mode&amp;#8221; for Linux desktops. This was actually
a result of an idea &lt;a href="https://plus.google.com/u/0/+SamHewitt/posts/AiMipv62yLg"&gt;posted to G+ by Sam Hewitt&lt;/a&gt;
where he&amp;nbsp;said&lt;/p&gt;
&lt;blockquote&gt;How controversial would a &amp;#8220;developer mode&amp;#8221; be for a Linux 
desktop environment? For instance it would hide things like the
terminal, debug tools, etc. from an application overview/menu/launcher.&lt;/blockquote&gt;

&lt;p&gt;﻿&lt;/p&gt;
&lt;p&gt;Now, I happen to think that this is a good idea. Bryan (and the SCaLE audience
generally) do not. I have some reservations, and you can read about those
on the G+ post and watch the discussion in the show video, but it&amp;#8217;s a
really interesting topic; it shows up how people think about their desktop,
what assumptions we make about it, and how the mainstream think perhaps
differently from some existing Ubuntu&amp;nbsp;users.&lt;/p&gt;
&lt;p&gt;We also discussed the recently-released Ubuntu phone. My detailed review
is still being written, but this was a good chance to talk about the
phone and whether it&amp;#8217;s brilliant or&amp;nbsp;bollocks.&lt;/p&gt;
&lt;p&gt;So, watch the show! It&amp;#8217;s available on YouTube at &lt;a href="https://www.youtube.com/watch?v=k02EeD0rXYo"&gt;https://www.youtube.com/watch?v=k02EeD0rXYo&lt;/a&gt;
and you should watch it; you&amp;#8217;ll like it. Tell us about what you thought
of the show on our forum at &lt;a href="http://community.badvoltage.org"&gt;community.badvoltage.org&lt;/a&gt;.
And next year, come to SCaLE. It&amp;#8217;s a really great conference, and I for one
would like to say a really big thank you to Ilan and Gareth, who were
super-duper helpful and then were prepared to dress up in clown outfits
for the show. Nice one, chaps. Couldn&amp;#8217;t have done it without&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;d also like to personally thank Melissa Sealy, who is the most helpful
member of hotel staff I have ever met. We were putting up &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/EkSeRdNmiJU"&gt;posters that Jono designed&lt;/a&gt;
around the hotel and she showed up (she&amp;#8217;s some sort of all-powerful floor
manager or something) and we expected the Mother Of All Bollockings for
sticking the posters on the walls. And indeed, she said: don&amp;#8217;t stick
posters on my walls, you horrible reprobates. And then she said: but you
can stick them on boards and put the boards on easels, no problem. And then
found us eight easels. And then later on when we were sorting out the beer
for the live event she sorted everything out. &lt;em&gt;And&lt;/em&gt; she knew about the
secret after-hours party in one of the conference rooms and found it amusing.
Nice one, Melissa. Your bosses at the Hilton &lt;span class="caps"&gt;LAX&lt;/span&gt; ought to give you a pay 
rise or a big bunch of flowers or&amp;nbsp;something.&lt;/p&gt;
&lt;p&gt;Come to Bad Voltage Live when we do another one. And watch this one&amp;nbsp;here!&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/k02EeD0rXYo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 25 Feb 2015 21:39:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-02-25:2015/02/25/bad-voltage-live-2015/</guid></item><item><title>Bad Voltage live show at SCALE 2015</title><link>http://www.kryogenix.org/days/2015/02/02/bad-voltage-live-show-at-scale-2015/</link><description>&lt;p&gt;We&amp;#8217;ve been talking about doing this for some time, and now it&amp;#8217;s nearly here. Yes. &lt;a href="http://www.badvoltage.org"&gt;Bad Voltage&lt;/a&gt;, the finest podcast in this or any other galaxy, the source of all the tech knowledge you&amp;#8217;ll ever need, and a certain amount of unjustified abuse of your humble correspondent (and &lt;em&gt;completely&lt;/em&gt; justified abuse of my co-presenters), is now hitting the real world. &lt;strong&gt;&lt;a href="http://www.badvoltage.org/live/"&gt;Live Voltage&lt;/a&gt; 2015&lt;/strong&gt;, a Bad Voltage show performed and recorded live on stage, is happening on Friday 20th February at &lt;a href="http://www.socallinuxexpo.org/scale/13x"&gt;&lt;span class="caps"&gt;SCALE&lt;/span&gt; 13x&lt;/a&gt; in Los&amp;nbsp;Angeles.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://farm6.staticflickr.com/5613/15470441550_2d9abc58b2_o.jpg" style="width: 100%" alt=""&gt;&lt;/p&gt;

&lt;p&gt;If you like the show you&amp;#8217;ll like Live Voltage. If you like Live Voltage you&amp;#8217;ll like &lt;span class="caps"&gt;SCALE&lt;/span&gt;. So, come to Los Angeles in a few weeks, take in the rest of &lt;span class="caps"&gt;SCALE&lt;/span&gt;, and see Bad Voltage live for the very first&amp;nbsp;time!&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re in the &lt;span class="caps"&gt;UK&lt;/span&gt; and you can&amp;#8217;t make it to Los Angeles, then Joe Borg is organising an event at The Wellington in Birmingham to watch the show on the live stream, on Saturday 21st February from 11am. The Welly is one of the best pubs in Birmingham and has a fantastic selection of real ales; people are travelling from around the country for the get-together. If you&amp;#8217;d like to go, check out &lt;a href="http://community.badvoltage.org/t/uk-live-voltage-mirror-birmingham-21-february-whos-in/9644/7"&gt;the thread on the Bad Voltage forum&lt;/a&gt; for details, and come along to meet Bad Voltageites, have a drink, and watch the&amp;nbsp;show!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 02 Feb 2015 12:32:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-02-02:2015/02/02/bad-voltage-live-show-at-scale-2015/</guid></item><item><title>Temporarily older than Benedict Cumberbatch for six months again, dammit</title><link>http://www.kryogenix.org/days/2015/01/30/temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit/</link><description>&lt;p&gt;Jesus Christ on a one-wheeled bicycle, I’m thirty-nine. &lt;/p&gt;
&lt;p&gt;Next year I’ll be forty. But that’s pretty cool. People congratulate you for that. Thirty-nine? My parents are thirty-nine.&lt;/p&gt;
&lt;p&gt;Well, no, obviously they aren’t. But they are in my head. &lt;/p&gt;
&lt;p&gt;Whining about age aside, this has been a fab year. &lt;a href="http://www.kryogenix.org/days/2014/01/30/but-these-posts-go-to-eleven/"&gt;I’ve&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2013/01/30/thirty-seven-for-gods-sake-how-did-that-happen/"&gt;been&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2012/01/30/a-year-goes-past/"&gt;writing&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2011/01/31/brave-new-age/"&gt;these&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2009/01/30/mini-hippo-returns/"&gt;little&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2008/01/30/another-year-passes/"&gt;birthday&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2007/01/30/my-week/"&gt;summaries&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2006/01/30/turning-thirty/"&gt;for&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2005/01/30/staring/"&gt;some&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2004/01/31/birthdays/"&gt;time&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2003/01/30/revolution/"&gt;now&lt;/a&gt;, and one of the things I like most about that is that not only have I been writing them but that I’ve reinvented the website they’ve been written &lt;em&gt;on&lt;/em&gt; about half a dozen times in that period and, you know what? Someone sitting at a crappy &lt;span class="caps"&gt;PC&lt;/span&gt; in St Aidan’s computer room in Durham, telnetted in to one of the servers, reading webpages with Lynx because that’s what we had in 1994…he&lt;sup id="sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-1-back"&gt;&lt;a title="it was a he, then. I hope it is better now" href="#sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; can read all those posts. Dave Winer, after he invented blogs and &lt;span class="caps"&gt;RSS&lt;/span&gt;, can read all those posts. We add things to the web, but the core rolls on, from &lt;span class="caps"&gt;TBL&lt;/span&gt; in the early nineties to my site today. Hooray. &lt;/p&gt;
&lt;p&gt;You might be thinking, who cares about yesterday’s software working today? Which I’m sure is baked into you if you’re a rich Mac user who upgrades all the time. I’m sure you have a bunch of reasons why it’s critical that you preach openness but &lt;em&gt;your&lt;/em&gt; laptop is different, or that people who only have &lt;span class="caps"&gt;IE9&lt;/span&gt; should be denied the web. Well, screw you. You are making things worse. Pack it in. &lt;/p&gt;
&lt;p&gt;All that out the way, this is gonna be a good year. Last year on the web was basically everyone realising that the web really should be able to provide an “app-like” experience to people who think that that’s important, and that it’s capable of doing whatever “native” apps do without having all their stupid restrictions. The trailblazers even started showing how. This year will be everyone else learning how from those trailblazers. Last year in Ubuntu was what the American football people call a “building” year, I think; getting a whole bunch of dominoes in play for a big push. This year (this month, in fact) the first Ubuntu phone comes out.&lt;sup id="sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-2-back"&gt;&lt;a title="There’s snappy too but I don’t use that sort of tool as much" href="#sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; Big times ahead. It’s going to be fun. The tech scene in Birmingham is really quite lively now, and that’ll keep growing too.&lt;/p&gt;
&lt;p&gt;And of course I’ll be thirty nine for all of it, which is apparently &lt;a href="http://newsroom.ucla.edu/releases/physical-decline-caused-by-slow-64365"&gt;when my brain works best&lt;/a&gt;. Bring it on. Birthdays rule, even if they start really early with a delightful phone call from your daughter. Will see her this evening, anyway.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-1"&gt;it was a he, then. I hope it is better now &lt;a href="#sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-2"&gt;There’s snappy too but I don’t use that sort of tool as much &lt;a href="#sf-temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 30 Jan 2015 10:40:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-01-30:2015/01/30/temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit/</guid></item><item><title>Keyhunter Birmingham</title><link>http://www.kryogenix.org/days/2015/01/26/keyhunter-birmingham/</link><description>&lt;p&gt;You know those little &lt;a href="http://gamejolt.com/search/?q=room+escape"&gt;&amp;#8220;escape the room&amp;#8221; Flash games&lt;/a&gt;? Where you have to click on things to search them, and get clues, and use the clues to find other clues and eventually the way out? They&amp;#8217;re a bit like My First Myst. And actually quite fun, at&amp;nbsp;times.&lt;/p&gt;
&lt;p&gt;Well&amp;#8230; in a startling reversal of the trend of taking real things and making electronic versions of them, there are now real-world games where you&amp;#8217;re locked in a room and have to solve clues to escape. I discovered, almost by accident, &lt;a href="http://escaperoomhub.com/"&gt;Escape Room Hub&lt;/a&gt; which lists a whole load of them all over the world, and was pleasantly surprised to learn that there&amp;#8217;s one in Birmingham. It&amp;#8217;s called &lt;a href="http://www.keyhunter.co.uk/"&gt;Keyhunter&lt;/a&gt;, and it&amp;#8217;s on Sherlock St (out past the Hippodrome). So we went on Friday&amp;nbsp;night.&lt;/p&gt;
&lt;p&gt;Basically, they lock you in a room, and you have to solve clues to escape. I&amp;#8217;m not going to talk in detail about the clues, firstly because they ask you not to and secondly because that&amp;#8217;d just ruin it for everybody. I will say this, though, as a warning. I originally booked their &amp;#8220;silver&amp;#8221; package, because I thought that the bronze one would be too easy. Then we had to reschedule for boring reasons, and so ended up doing the bronze one&amp;#8230; and we were spectacularly, hysterically rubbish. You are allowed to ask for two hints via a little walkie-talkie they give you, and we needed both and &lt;em&gt;still&lt;/em&gt; didn&amp;#8217;t finish it in the hour. So, be told: it is difficult. I suspect that having more people in your team (we were just two of us) would help quite a bit, so bear that in mind. But it was thoroughly good fun! We spend two hours in the pub afterwards redesigning it, I admit, but if you want a new thing to do, try Keyhunter. I recommend&amp;nbsp;it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 26 Jan 2015 16:48:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-01-26:2015/01/26/keyhunter-birmingham/</guid></item><item><title>Live screencasting from Ubuntu phone</title><link>http://www.kryogenix.org/days/2015/01/21/live-screencasting-from-ubuntu-phone/</link><description>&lt;p&gt;After &lt;a href="http://www.kryogenix.org/days/2015/01/11/ubuntu-phone-screencasting-a-minor-tip/"&gt;the previous post&lt;/a&gt; which describes how to send screen video from the Ubuntu phone to a file on your desktop via &lt;code&gt;netcat&lt;/code&gt;, it occurred to me that it ought to be possible to just display your Ubuntu phone directly on your desktop&amp;#8217;s screen in a window&amp;#8230; and with basically the same trick, it&amp;nbsp;is.&lt;/p&gt;
&lt;p&gt;Connect to your Ubuntu phone with &lt;code&gt;ssh&lt;/code&gt;: if the phone is plugged in with a cable then opening the Ubuntu &lt;span class="caps"&gt;SDK&lt;/span&gt; &lt;span class="caps"&gt;IDE&lt;/span&gt;&amp;#8217;s Devices pane will let you do this, or there is a &lt;code&gt;phablet-shell&lt;/code&gt; command which does the same thing when plugged in with a cable, and once you&amp;#8217;ve done that once you can &lt;code&gt;ssh&lt;/code&gt; to the phone over the network with &lt;code&gt;ssh phablet@phone-ip-address&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In that &lt;code&gt;ssh&lt;/code&gt; session, run: &lt;code&gt;mirscreencast -m /var/run/mir_socket --stdout --cap-interval 4 -s 360 640 | nc desktop-machine-ip-address 1234&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In a separate terminal on your desktop machine, run: &lt;code&gt;nc -l -p 1234 | mplayer -demuxer rawvideo -rawvideo w=360:h=640:format=rgba -&lt;/code&gt;  (note the hyphen on the end of that command; it is&amp;nbsp;important!)&lt;/p&gt;
&lt;p&gt;and: you get your phone&amp;#8217;s screen, live, in a window on your desktop. Handy for screencasting at conferences or for hangout video demonstrations or&amp;nbsp;similar.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 21 Jan 2015 15:46:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-01-21:2015/01/21/live-screencasting-from-ubuntu-phone/</guid></item><item><title>Ubuntu phone screencasting, a minor tip</title><link>http://www.kryogenix.org/days/2015/01/11/ubuntu-phone-screencasting-a-minor-tip/</link><description>&lt;p&gt;An Ubuntu phone has a command-line utility called &lt;code&gt;mirscreencast&lt;/code&gt; which dumps screen frames to a file, meaning that in theory it&amp;#8217;s possible to record a video of your phone&amp;#8217;s screen. In practice, though, it doesn&amp;#8217;t work for video; the phone is that busy (a) grabbing frames and (b) writing them to the phone&amp;#8217;s storage that you can&amp;#8217;t actually &lt;em&gt;use&lt;/em&gt; it for jerkiness, and the resultant video includes about one frame in ten. I can&amp;#8217;t fix this, but I did come up with a way to make it at least a bit better &amp;#8212; instead of saving the video onto the phone&amp;#8217;s storage, send it over the network to a real&amp;nbsp;machine.&lt;/p&gt;
&lt;p&gt;On your computer: &lt;code&gt;nc -l -p 1234 &amp;gt; out&lt;/code&gt;, which uses netcat to listen to port 1234 and send everything that comes in there to a file named &lt;code&gt;out&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the phone: &lt;code&gt;mirscreencast -n 600 -m /var/run/mir_socket -s 360 640 --stdout | nc mycomputer 1234&lt;/code&gt;, which uses &lt;code&gt;mirscreencast&lt;/code&gt; to record frames (at a particular smaller size) and then send them with netcat to port 1234 on the computer. (You may need to put your computer&amp;#8217;s &lt;span class="caps"&gt;IP&lt;/span&gt; address instead of &lt;em&gt;mycomputer&lt;/em&gt;, especially since Ubuntu phone won&amp;#8217;t resolve &lt;em&gt;computername.local&lt;/em&gt;&amp;nbsp;names.)&lt;/p&gt;
&lt;p&gt;Then, once recording finishes, &lt;code&gt;mencoder -demuxer rawvideo -rawvideo fps=6:w=360:h=640:format=bgra -ovc x264 -o out.mp4 out&lt;/code&gt; makes a proper mp4. (Cheers &lt;a href="http://www.whizzy.org/2014/08/"&gt;Bill&lt;/a&gt; for the &lt;code&gt;mirscreencast&lt;/code&gt; info.)&lt;/p&gt;
&lt;p&gt;It still isn&amp;#8217;t great. But it&amp;#8217;s a bit&amp;nbsp;better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;UPDATE&lt;/span&gt;&lt;/strong&gt;: using &lt;code&gt;mirscreencast&lt;/code&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;s &lt;code&gt;-s&lt;/code&gt; option to shrink the size &lt;em&gt;and&lt;/em&gt; &lt;code&gt;--cap-interval&lt;/code&gt; option to only grab some frames seems to work even better. A command like &lt;code&gt;mirscreencast -n 60 -m /var/run/mir_socket --stdout --cap-interval 4 -s 384 640&lt;/code&gt; will record 1/4 of the frames (&lt;code&gt;--cap-interval 4&lt;/code&gt;), which is 15fps (rather than the screen&amp;#8217;s 60fps), and resize those frames to half their size (my Nexus 4 has a screen resolution of 768x1280, which halved is 384x640, and each frame is only a quarter of the size). Converting like so: &lt;code&gt;mencoder -demuxer rawvideo -rawvideo fps=15:w=384:h=640:format=rgba -ovc x264 -o out.mp4 out&lt;/code&gt; (note the &lt;code&gt;format=rgba&lt;/code&gt;, the &lt;code&gt;w&lt;/code&gt; and &lt;code&gt;h&lt;/code&gt; for screen size, and &lt;code&gt;fps=15&lt;/code&gt;) and you get pretty much perfectly smooth&amp;nbsp;video.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 11 Jan 2015 06:14:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-01-11:2015/01/11/ubuntu-phone-screencasting-a-minor-tip/</guid></item><item><title>Ubuntu Component Store, redux 2</title><link>http://www.kryogenix.org/days/2015/01/01/ubuntu-component-store-redux-2/</link><description>&lt;p&gt;A couple of months ago I came up with &lt;a href="http://www.kryogenix.org/days/2014/11/16/ubuntu-component-store-redux/"&gt;a proposal for how an Ubuntu Component Store could work&lt;/a&gt; to be a place where people could upload self-contained components for Ubuntu &lt;span class="caps"&gt;SDK&lt;/span&gt; apps, after a long discussion with nik90 about it all. However, it requires a server which maintains accounts and so on, and that&amp;#8217;s hassle. So, an alternative idea, which is a bit more limited but also quite a bit more doable, I&amp;nbsp;think.&lt;/p&gt;
&lt;p&gt;We still go with core, curated, and community components as in the above proposal, and this is only about community components. They are still called username/componentname as before. But now, they &lt;em&gt;must&lt;/em&gt; be hosted on&amp;nbsp;Launchpad.&lt;/p&gt;
&lt;p&gt;What you do, to build a component, is you push a branch to Launchpad. That branch must have the following things in&amp;nbsp;it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/ubuntu_component_store.json&lt;/code&gt; - a &lt;span class="caps"&gt;JSON&lt;/span&gt; manifest describing your component. More on this&amp;nbsp;later.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/ubuntu_component_store&lt;/code&gt; - a folder in which all the bits of your component&amp;nbsp;live&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/ubuntu_component_store/bin/arm-linux-gnueabihf/$COMPONENTNAME.o&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/ubuntu_component_store/bin/i386-linux-gnu/$COMPONENTNAME.o&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/ubuntu_component_store/bin/x86_64-linux-gnu/$COMPONENTNAME.o&lt;/code&gt; - any compiled parts of your component go in &lt;code&gt;bin/$arch/&lt;/code&gt; as binary compiled&amp;nbsp;files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/ubuntu_component_store/qml/$WHATEVER.qml&lt;/code&gt; - any &lt;span class="caps"&gt;QML&lt;/span&gt; files for your component (and any external files that they depend on, such as images) go in &lt;code&gt;qml/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Obviously if your component is only a binary &lt;span class="caps"&gt;QML&lt;/span&gt; plugin then it won&amp;#8217;t have a &lt;code&gt;qml&lt;/code&gt; folder, and if it&amp;#8217;s pure &lt;span class="caps"&gt;QML&lt;/span&gt; then it won&amp;#8217;t have a &lt;code&gt;bin&lt;/code&gt; folder. Note that &lt;code&gt;bin&lt;/code&gt; contains &lt;em&gt;compiled&lt;/em&gt; plugins, not source. You should have a way of letting people get the source for your component, especially if they want to change it or improve it, but that&amp;#8217;s not what this is about: &lt;code&gt;ucs install&lt;/code&gt; gets a working binary thing. It does not get the source so that you compile it yourself, because it&amp;#8217;s aimed at people who don&amp;#8217;t want to do compilation at all. (In particular, a pure &lt;span class="caps"&gt;QML&lt;/span&gt; project won&amp;#8217;t have any of the cmake stuff even set up, and it should not have to&amp;nbsp;have.)&lt;/p&gt;
&lt;p&gt;The binary arch stuff is designed to fit in with &lt;a href="http://www.theorangenotebook.com/2014/12/creating-mutli-arch-click-packages.html"&gt;fat packages&lt;/a&gt;&amp;nbsp;properly.&lt;/p&gt;
&lt;p&gt;You then submit the component to the server, with &lt;code&gt;ucs submit lp:~username/project/branch&lt;/code&gt;, passing the &lt;span class="caps"&gt;LP&lt;/span&gt; &lt;span class="caps"&gt;URL&lt;/span&gt; for the branch you pushed. The server fetches &lt;code&gt;ubuntu_component_store.json&lt;/code&gt; from the root of that branch and parses it for metadata; it may also check that the branch looks validly like a component. The server then updates &lt;code&gt;community_components.json&lt;/code&gt;, which is a file listing all metadata for all the community components, and uploads it back to Launchpad. (It&amp;#8217;s a bit like a Debian Packages&amp;nbsp;file.)&lt;/p&gt;
&lt;p&gt;Then a developer decides to use your component, so they &lt;code&gt;ucs install name/yourcomponent&lt;/code&gt;. This fetches &lt;code&gt;community_components.json&lt;/code&gt; from Launchpad and gets the details of your component from it: in particular, it gets the &lt;span class="caps"&gt;LP&lt;/span&gt; branch &lt;span class="caps"&gt;URL&lt;/span&gt;. It then downloads the &lt;code&gt;ubuntu_component_store/bin&lt;/code&gt; and/or &lt;code&gt;ubuntu_component_store/qml&lt;/code&gt; folders from your &lt;span class="caps"&gt;LP&lt;/span&gt; branch and puts them somewhere appropriate in the current project folder so that they&amp;#8217;ll work and can be referenced from your&amp;nbsp;code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ucs search &amp;amp;lt;something&amp;amp;gt;&lt;/code&gt; searches &lt;code&gt;community_components.json&lt;/code&gt; &lt;em&gt;locally&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;This different approach means that the server is stateless; when it receives a &lt;code&gt;ucs submit&lt;/code&gt; request, it updates the big metadata file with the new details, but the server is not part of the normal app developer process; it&amp;#8217;s only used by &lt;em&gt;component&lt;/em&gt; developers, and only for submissions. This makes the server much, much easier to&amp;nbsp;write.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 01 Jan 2015 22:02:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-01-01:2015/01/01/ubuntu-component-store-redux-2/</guid></item><item><title>Enabling the devtools inspector when using Oxide in an Ubuntu SDK QML app</title><link>http://www.kryogenix.org/days/2014/12/30/enabling-the-devtools-inspector-when-using-oxide-in-an-ubuntu-sdk-qml-app/</link><description>&lt;p&gt;A tiny post for something I’ve just worked out. If you’re using Oxide, the Ubuntu web rendering engine (based on Chrome’s Blink) in an Ubuntu &lt;span class="caps"&gt;SDK&lt;/span&gt; &lt;span class="caps"&gt;QML&lt;/span&gt; app, it’d be useful to have access to the devtools inspector so you can debug it. Well, you can, although this doesn’t seem to be documented anywhere. Adnane “daker” Belmadiaf wrote a useful post &lt;a href="http://daker.me/2014/05/how-to-use-oxide-in-your-ubuntu-qml-application.html"&gt;describing how to use Oxide in your Ubuntu &lt;span class="caps"&gt;QML&lt;/span&gt; application&lt;/a&gt; but unaccountably didn’t explain how to turn on the dev tools&lt;sup id="sf-enabling-the-devtools-inspector-when-using-oxide-in-an-ubuntu-sdk-qml-app-1-back"&gt;&lt;a title="possibly because you couldn’t when he wrote the post :)" href="#sf-enabling-the-devtools-inspector-when-using-oxide-in-an-ubuntu-sdk-qml-app-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; so this is how to do it.&lt;/p&gt;
&lt;p&gt;Give your &lt;code&gt;WebView&lt;/code&gt; a &lt;code&gt;WebContext&lt;/code&gt; and set its &lt;code&gt;devtoolsEnabled&lt;/code&gt; and &lt;code&gt;devtoolsPort&lt;/code&gt; properties. That’s it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import com.canonical.Oxide 1.0
WebView {

    ...

    context: WebContext {
        devtoolsEnabled: true
        devtoolsPort: 9232
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-enabling-the-devtools-inspector-when-using-oxide-in-an-ubuntu-sdk-qml-app-1"&gt;possibly because you couldn’t when he wrote the post :) &lt;a href="#sf-enabling-the-devtools-inspector-when-using-oxide-in-an-ubuntu-sdk-qml-app-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 30 Dec 2014 13:37:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2014-12-30:2014/12/30/enabling-the-devtools-inspector-when-using-oxide-in-an-ubuntu-sdk-qml-app/</guid></item><item><title>The Matasano crypto challenges</title><link>http://www.kryogenix.org/days/2014/12/17/the-matasano-crypto-challenges/</link><description>&lt;p&gt;&lt;a href="http://cryptopals.com/"&gt;The Matasano crypto challenges&lt;/a&gt; are a set of increasingly difficult coding challenges in cryptography; not puzzles, but designed to show you how crypto fits together and why all the parts are important. Cheers to &lt;a href="https://blog.pinboard.in/2013/04/the_matasano_crypto_challenges/"&gt;Maciej Ceglowski of pinboard.in&lt;/a&gt; for bringing them to my&amp;nbsp;attention.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve been playing around with doing the challenges from first principles, in JavaScript. That is: not using any built-in crypto stuff, and implementing things like &lt;span class="caps"&gt;XOR&lt;/span&gt; myself by individually twiddling bits. It&amp;#8217;s interesting! The thing that Maciej says here, and with which I totally agree, is that a lot of this (certainly the first batch, which is all I&amp;#8217;ve done so far) is stuff that you already &lt;em&gt;know&lt;/em&gt; how to do, intellectually, but you&amp;#8217;ve never actually done &amp;#8212; have you ever written a base64 encoder? Rather than just using &lt;code&gt;string.encode('base64')&lt;/code&gt; or whatever? Obviously there&amp;#8217;s no need to write this sort of thing yourself in production code (this is not one of those arguments that kids should learn long division rather than just owning a phone with a calculator on it), but I&amp;#8217;ve found that actually making a thing to implement simple crypto such as &lt;span class="caps"&gt;XOR&lt;/span&gt; with a repeated key to have a few surprising tricks and turns in it. And, in immensely revealing fashion, one then goes on to write code which breaks such a cipher. In microseconds. Obviously intellectually I knew that Viginere ciphers are an old-fashioned thing, and I&amp;#8217;d read various books in which they were broken and how they were, but there&amp;#8217;s something about writing a little function yourself which viscerally demonstrates just how &lt;em&gt;easy&lt;/em&gt; it was in a way that a hundred articles&amp;nbsp;cannot.&lt;/p&gt;
&lt;p&gt;Code so far (I&amp;#8217;m only up to challenge 6 in set 1!) is in &lt;a href="http://sil.jsbin.com/zoxoye"&gt;jsbin&lt;/a&gt; if you want to have a look, or have a play&amp;nbsp;yourself!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 17 Dec 2014 09:01:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2014-12-17:2014/12/17/the-matasano-crypto-challenges/</guid></item><item><title>Vouching for webmentions; hashing for vouches</title><link>http://www.kryogenix.org/days/2014/11/30/vouching-for-webmentions-hashing-for-vouches/</link><description>&lt;p&gt;As mentioned &lt;a href="http://www.kryogenix.org/days/2014/11/29/enabling-webmentions/"&gt;yesterday&lt;/a&gt; I’ve 
enabled &lt;a href="http://indiewebcamp.com/Webmention"&gt;webmentions&lt;/a&gt; on this site. Now, webmentions could have the 
same spam problem that Pingback has, and so one of the proposed solutions is &lt;a href="http://indiewebcamp.com/Vouch"&gt;Vouch&lt;/a&gt;, 
where when you send a webmention you also include with it a “vouch &lt;span class="caps"&gt;URL&lt;/span&gt;”. That &lt;span class="caps"&gt;URL&lt;/span&gt; is
a page which (a) links to &lt;em&gt;you&lt;/em&gt;, and (b) is trusted by the person you’re linking &lt;em&gt;to&lt;/em&gt;. That way, the receiver can say: &lt;span class="caps"&gt;OK&lt;/span&gt;, I 
don’t know this person who’s linking to me, but I do know this other person, and she knows the first person, so I reckon 
they’re probably &lt;span class="caps"&gt;OK&lt;/span&gt;. You can see an example of this on &lt;a href="http://aaronparecki.com/replies/2014/10/17/1/vouch"&gt;Aaron Parecki’s “replies” site&lt;/a&gt;; one of the comments says 
“(vouched for by &lt;a href="https://waterpigs.co.uk/notes/4VUFr4/"&gt;waterpigs.co.uk&lt;/a&gt;)”.&lt;/p&gt;
&lt;p&gt;Put your hand up if you can see a problem with this approach.&lt;/p&gt;
&lt;p&gt;I think there are two problems; neither are insurmountable, but both are problems. The first is: how do you find a person
who will vouch for you and whom the recipient trusts? I think of this like, say, the problem of you, gentle reader, finding
out what my mobile phone number is. If you’re reading this, then we’re probably vaguely connected; we both work on the web,
or on Ubuntu, or both like Portishead, or something; we probably have some friends in common; there are lots of people out
there who know my mobile number; therefore, if you really wanted my number, you could play the “six degrees of 
&lt;s&gt;Kevin Bacon&lt;/s&gt;Stuart Langridge” game and find someone who knows that number and trusts &lt;em&gt;you&lt;/em&gt; enough to give it over. But
it’s a really annoying task, because you don’t know who to ask; all you can do is basically ping friends at random. In
particular, if there is actually &lt;em&gt;nobody&lt;/em&gt; you know who knows my phone number, then you can’t tell that; all you can do is
keep asking people and you’ll never know whether you haven’t found anyone because you haven’t looked hard enough, or
because we’re not good enough friends and so there’s nobody out there to find. You could look for an unlimited time.&lt;/p&gt;
&lt;p&gt;I do not like things that could make me work for an unlimited amount of time.&lt;/p&gt;
&lt;p&gt;Second issue: the &lt;em&gt;clique problem&lt;/em&gt;. If you only accept vouches from people you trust, then there’s no easy way to &lt;em&gt;get&lt;/em&gt; 
trusted. It makes it much, much harder for an outsider with something to say to get themselves heard. Now, some people
like that: they want discussions to be among known people only, and that’s fine. But I don’t really like the idea of
institutionalising that by baking it into the core protocol.&lt;/p&gt;
&lt;p&gt;Since Vouch exists in large part to avoid spam, I thought: hey, what if we build a thing which will vouch for you if you
prove you’re not a spammer?&lt;sup id="sf-vouching-for-webmentions-hashing-for-vouches-1-back"&gt;&lt;a title="Actually, I didn’t quite think of this. I thought: why not prove you’re not a spammer  directly? And Michiel de Jong thought of the idea of proving it to a service which then  vouches for you, which is super clever because it piggybacks on the existing Vouch network, it allows people to trust “autovouched” mentions differently from “personally vouched” mentions, and it doesn’t require everyone with an endpoint to update it." href="#sf-vouching-for-webmentions-hashing-for-vouches-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; And then people will hopefully learn over time that being thus vouched 
for is valid, and then everyone wins. If you know someone who will vouch for you, then use them to do so; if you don’t,
prove you’re not a spammer and have the service vouch for you. If you receive a vouched for webmention from someone you
trust, great; if you receive one vouched for by the service, then satisfy yourself that the service works and then you
can give it some limited degree of trust. So it’s not &lt;em&gt;necessary&lt;/em&gt; to use this sort of service, but it
can help to make a bridge from one “circle of trust” to another, or to help someone get involved in the conversation
even if they’re new to the group. We had a &lt;a href="http://indiewebcamp.com/irc/2014-11-29#t1417292682908"&gt;really interesting discussion&lt;/a&gt;
about all this on the &lt;a href="http://indiewebcamp.com/IRC"&gt;#indiewebcamp &lt;span class="caps"&gt;IRC&lt;/span&gt; channel&lt;/a&gt; yesterday.&lt;/p&gt;
&lt;p&gt;So I built &lt;a href="https://hash-for-vouch.herokuapp.com"&gt;Hash for Vouch&lt;/a&gt;. A simple service: you do a little bit of computational work 
(a &lt;a href="http://hashcash.org"&gt;hashcash&lt;/a&gt;-style algorithm), and the service verifies that you did the work and then puts up a page 
which vouches for you, which you can send along with your webmention. There’s an &lt;span class="caps"&gt;API&lt;/span&gt; so you can do the work and then prove 
it to get a vouch &lt;span class="caps"&gt;URL&lt;/span&gt; programmatically, or you can use the form on the front page to do that work in your browser and get 
a vouch &lt;span class="caps"&gt;URL&lt;/span&gt; that way. Spammers can’t do the work because it makes spam uneconomical if each one takes five seconds to send.
And anyone real can join the conversation.&lt;/p&gt;
&lt;p&gt;I’m now sending webmentions which are vouched for by &lt;a href="https://hash-for-vouch.herokuapp.com"&gt;Hash for Vouch&lt;/a&gt; when I link to
URLs on this site. Feel free to do the same!&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-vouching-for-webmentions-hashing-for-vouches-1"&gt;Actually, I didn’t quite think of this. I thought: why not prove you’re not a spammer 
directly? And &lt;a href="https://michielbdejong.com"&gt;Michiel de Jong&lt;/a&gt; thought of the idea of proving it to a service which then 
vouches for you, which is super clever because it piggybacks on the existing Vouch network, it allows people to trust
“autovouched” mentions differently from “personally vouched” mentions, and it doesn’t require everyone with an endpoint
to update it. &lt;a href="#sf-vouching-for-webmentions-hashing-for-vouches-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 30 Nov 2014 15:55:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2014-11-30:2014/11/30/vouching-for-webmentions-hashing-for-vouches/</guid></item></channel></rss>