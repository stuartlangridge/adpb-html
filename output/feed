<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>as days pass by</title><link>http://www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><atom:link href="http://www.kryogenix.org/days/feed" rel="self"></atom:link><lastBuildDate>Sun, 24 May 2015 23:38:00 +0100</lastBuildDate><item><title>Unhappy about SPA frameworks</title><link>http://www.kryogenix.org/days/2015/05/24/unhappy-about-spa-frameworks/</link><description>&lt;p&gt;I&amp;#8217;ve been looking at single-page-app frameworks and not keen on any of them. The list at http://todomvc.com/ has a bunch, and I think I&amp;#8217;ve rejected them all &amp;#8212; I concede that some of these reasons are just flat-out prejudice or reasonably baseless bad feelings or seem pretty trivial to whoever&amp;#8217;s reading, so this is your chance to talk me into something you think is good and show me why my bad feelings are unjustified or&amp;nbsp;wrong.&lt;/p&gt;
&lt;p&gt;What I&amp;#8217;d like is two-way data binding, routing, and some notion of making separate isolated components. I don&amp;#8217;t have a pure &lt;span class="caps"&gt;REST&lt;/span&gt; put/delete/get &lt;span class="caps"&gt;API&lt;/span&gt; to back end onto, and I do not want a &amp;#8220;framework&amp;#8221; which has as a selling point that you can switch different routing or template components in and out; if I&amp;#8217;m assembling my own preferences out of bits, then I won&amp;#8217;t use a framework at all; I&amp;#8217;ll stitch them together myself. The point of using a framework is exactly that it does everything, and I&amp;#8217;m &lt;span class="caps"&gt;OK&lt;/span&gt; with using the framework&amp;#8217;s methods to do X, Y, and Z, rather than cursing because I want to use a different routing library. I am a large believer in identifying the approach that a particular tool takes, and not using the tool if what you want to do doesn&amp;#8217;t match that approach, even if it&amp;#8217;s possible to use the tool in ways other than its expected that you will. Every time I&amp;#8217;ve done this in the past I&amp;#8217;ve ended up being burned by it. The thing I want is to identify something which wants to do the things I plan, and then use it; not to find something which doesn&amp;#8217;t want to work that way and then make it work that way&amp;nbsp;instead.&lt;/p&gt;
&lt;p&gt;So, convince me I&amp;#8217;m wrong on your preferred choice from this list, or mention something I don&amp;#8217;t know about. And yes, I could write my own, but I&amp;#8217;m massively resistant to that because that just makes the another-day-another-framework problem even&amp;nbsp;worse.&lt;/p&gt;
&lt;p&gt;There is one non-negotiable rule: JavaScript. No other languages which compile to JavaScript. I don&amp;#8217;t mind things like React&amp;#8217;s &lt;span class="caps"&gt;JSX&lt;/span&gt;, because that&amp;#8217;s being used to write &lt;span class="caps"&gt;HTML&lt;/span&gt; (although I&amp;#8217;m not sure about it), but no Coffeescript libraries,&amp;nbsp;please.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Backbone.js&lt;/em&gt; - also requires underscore and jquery. Some ideal thing for this really ought to be self-contained. Concerned about &amp;#8220;is pre-configured to sync with a RESTful &lt;span class="caps"&gt;API&lt;/span&gt;&amp;#8221; too, and I have to plug in my own choice of templating&amp;nbsp;library.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;AngularJS&lt;/em&gt; - used it in the past for things. It makes me sad. There&amp;#8217;s too much magic; it&amp;#8217;s fine until something doesn&amp;#8217;t work, and then you have to reverse-engineer all the&amp;nbsp;magic.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ember.js&lt;/em&gt; - is massive and confuses the hell out of me. I did a bit of hacking on Discourse, which is Ember, and it took me about a day just to work out how to change the simplest&amp;nbsp;thing.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;KnockoutJS&lt;/em&gt; - seems way, way verbose. &lt;code&gt;function AppViewModel() { this.firstName = ko.observable("Bert"); this.fullName = ko.computed(function() { ... }, this); } ko.applyBindings(new AppViewModel());&lt;/code&gt;, seriously? Gnah. I hate&amp;nbsp;that.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Dojo&lt;/em&gt; - old. I never liked it the first time around, really, and I have the feeling that the zeitgeist has not gone with&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;span class="caps"&gt;YUI&lt;/span&gt;&lt;/em&gt; - old, and pretty much abandoned upstream afaik. Used it at Canonical; &amp;#8220;aspect-oriented programming&amp;#8221; is basically computed &lt;span class="caps"&gt;COME&lt;/span&gt; &lt;span class="caps"&gt;FROM&lt;/span&gt; from Intercal, which puts invisible trapdoors in your code so following the thread of control is hell on&amp;nbsp;legs.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Knockback.js&lt;/em&gt; - builds on Knockout, so see&amp;nbsp;knockout.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;CanJS&lt;/em&gt; - models stuff seems specifically designed to back end to a put/get/delete rest &lt;span class="caps"&gt;API&lt;/span&gt;, which I don&amp;#8217;t&amp;nbsp;have.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Polymer&lt;/em&gt; - seems like it may be ropy on iOS. Also, it has a nice big library of pre-built components, which is great, but they&amp;#8217;re all Material Design components, which is not great at all; I&amp;#8217;m not putting an Android-themed app on other platforms, for the same reason I wouldn&amp;#8217;t put an app which looks like iOS on&amp;nbsp;Android.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;React&lt;/em&gt; - I fear React. It seems to be the popular thing, but it&amp;#8217;s very much a thing where one steps out of the world and into the React World instead. Have spoken to a number of people using it for real projects and I don&amp;#8217;t like the idea of&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Mithril&lt;/em&gt; - I utterly utterly do not understand the &lt;code&gt;m.prop&lt;/code&gt; stuff. I don&amp;#8217;t know whether the docs explain it badly or I&amp;#8217;m just not getting it, but I completely cannot grasp the Zen of Mithril. Shame, because it looks cool, if I could get it, which I&amp;nbsp;can&amp;#8217;t.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ampersand&lt;/em&gt; - I&amp;#8217;m in two minds about the &amp;#8220;it&amp;#8217;s a zillion small libraries&amp;#8221; thing. More to the point, I have no sense of how to structure the overall application; individual bits I can see how to do, but I don&amp;#8217;t have a good sense of how to put it&amp;nbsp;together&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Flight&lt;/em&gt; - I&amp;#8217;m not sure this is the right thing for new apps. For restructuring an existing thing, I think it&amp;#8217;d be good, but I&amp;#8217;m building from&amp;nbsp;scratch.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Vue.js&lt;/em&gt; - doesn&amp;#8217;t do routing or provide large-scale structure; they have some notes saying &amp;#8220;hey, that means you can do it your way&amp;#8221; which I don&amp;#8217;t want to&amp;nbsp;do&lt;/li&gt;
&lt;li&gt;&lt;em&gt;MarionetteJS&lt;/em&gt; - depends on Backbone, so see&amp;nbsp;Backbone.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;TroopJS + RequireJS&lt;/em&gt; - lots of dependencies. I do not get how to actually structure an application with it, and the docs are not helpful at&amp;nbsp;this.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wish I were happy about any of these. To be honest, my secret worry is that all frameworks are either incomplete, so I don&amp;#8217;t want them, or do do everything I want but are consequentially too magical and so I don&amp;#8217;t like them. I hope I&amp;#8217;m wrong and there&amp;#8217;s either something I&amp;#8217;ve missed or a framework I don&amp;#8217;t know about. Speak on, readers: &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/a5L9czA7ZfH"&gt;leave comments on Google Plus&lt;/a&gt; or on your own site by&amp;nbsp;webmention.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 24 May 2015 23:38:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-24:2015/05/24/unhappy-about-spa-frameworks/</guid></item><item><title>Burning trees</title><link>http://www.kryogenix.org/days/2015/05/20/burning-trees/</link><description>&lt;p&gt;Today I made a little thing, which I find rather more fascinating than I probably should. You see, &lt;a href="http://omgubuntu.com"&gt;Joey&lt;/a&gt; &lt;a href="https://plus.google.com/u/0/+joeysneddon/posts/4g1pwF51Vfd"&gt;said&lt;/a&gt;, &amp;#8220;I wonder if &lt;a href="http://www.omgubuntu.co.uk/2012/02/the-sands-of-time-linux-desktop"&gt;this&lt;/a&gt; still&amp;nbsp;works?&amp;#8221;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.kryogenix.org/images/sandswall.jpg" alt="'The Sands of Time' Linux Desktop" style="width:100%"&gt;&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s quite cool &amp;#8212; sand dunes in front of a clock &amp;#8212; and it made me remember that years and years ago you used to get these programs where you could click and it would create sand which accumulated at the bottom of the window. The very first one I saw was on the Archimedes. But what came along a little later was one where you could click to produce various different substances &amp;#8212; sand, oil, water, fire &amp;#8212; and oil floated on water, fire set the oil alight, and so on. It was all rather amazing back when the phrase &amp;#8220;particle system&amp;#8221; hadn&amp;#8217;t been invented. Anyway, I thought: hey, what&amp;#8217;d be cool is if the clock in that picture was obscured by actual moving sand, rather than just a static picture of sand dunes. A tiny bit of poking around brought me to &lt;a href="http://dust.awevation.com/"&gt;Dust&lt;/a&gt;, an implementation of precisely the sand/oil/water thing with WebGL in the browser. So I completely forgot about the clock thing and just played with Dust. Which is rather&amp;nbsp;fun.&lt;/p&gt;
&lt;p&gt;After some faffing around I discovered that it had two things I liked: &amp;#8220;lava&amp;#8221;, which is like a static piece of fire in that it ignites things that touch it but is not itself consumed, and &amp;#8220;Life Itself&amp;#8221; which is stuff that grows, like bacteria in a petri dish. But the life stuff is ignited by lava. so if you drop a couple of tiny bits of lava into the world, and then some green fungus life stuff, the fungus grows and takes over the whole window until it touches the lava, and then it gets burned up and vanishes&amp;#8230; but, critically for this, it isn&amp;#8217;t entirely consumed. A few specks remain, and those specks start growing again. Very cool. I spent ages just watching&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;Then I thought, well, this is nice and all, but this Dust thing uses WebGL, which is hassle, and it can&amp;#8217;t actually cope with filling its whole window up with particles because it runs out of memory or space or shaders or something. So I figured I&amp;#8217;d lash together a quick version&amp;nbsp;myself.&lt;/p&gt;
&lt;p&gt;&lt;a class="jsbin-embed" href="http://sil.jsbin.com/zovumo/embed?output"&gt;Burning Trees on jsbin.com&lt;/a&gt;&lt;script src="http://static.jsbin.com/js/embed.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;And lo, it is so: a noddy version in JavaScript. This is superbly inefficient; it regenerates the whole grid and then &lt;code&gt;innerHTML&lt;/code&gt;s it into the page at every clock tick, and it&amp;#8217;s completely character-based, like some sort of &lt;span class="caps"&gt;BBC&lt;/span&gt; Micro program. (At least it&amp;#8217;s using &lt;code&gt;requestAnimationFrame&lt;/code&gt; so it doesn&amp;#8217;t hammer the &lt;span class="caps"&gt;CPU&lt;/span&gt; in a background tab!) But I could still sit there and watch it for ages. I really like it; the sense of watching the green take over and then get burned&amp;nbsp;back.&lt;/p&gt;
&lt;p&gt;I think what I&amp;#8217;d like to do with it is make it considerably more efficient and then try to make it a sort of &amp;#8220;live wallpaper&amp;#8221; for my Ubuntu desktop. For that, I need to read about Life rendering algorithms; &lt;a href="http://pmav.eu/stuff/javascript-game-of-life-v3.1.1/"&gt;this Life implementation at pmav.eu&lt;/a&gt; uses a &lt;span class="caps"&gt;JS&lt;/span&gt; port of &lt;a href="http://dotat.at/prog/life/life.html"&gt;Tony Finch&amp;#8217;s List Life algorithm&lt;/a&gt; to do the calculations. There&amp;#8217;s also &lt;a href="http://golly.sourceforge.net/"&gt;Golly&lt;/a&gt;, the Life simulator, which can do things ridiculously fast, and it&amp;#8217;s possible to program your own ruleset (rather than just follow John Conway&amp;#8217;s original rules), and if I understood how to do this (I do not) then I could probably turn my little Burning Trees thing into something that&amp;#8217;s renderable by Golly at a much bigger size than my inefficient JavaScript can manage. There seems to be a quite large community of people working on Life, still, to my amazement. Where do these people hang out, I wonder? So I can ask them how to write a Golly ruleset. And then see if I can make Golly run fullscreen and render to the root window and have the coolest desktop background imaginable, especially once it&amp;#8217;s graphics rather than block characters, and maybe the green is different colours depending on how old it is, and the fire has a slightly cooler effect, and&amp;#8230; well, you can see, I like this idea, so making it look pretty would be wonderful. Maybe I&amp;#8217;ll even put a clock behind it. But if I did it&amp;#8217;d either be &lt;a href="http://sil.jsbin.com/mexuka"&gt;this one which I pinched from an imgur idea&lt;/a&gt; or my favourite clock that I wrote, which is&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;a class="jsbin-embed" href="http://sil.jsbin.com/qafag/embed?output"&gt;Stuart&amp;#8217;s cool clock on jsbin.com&lt;/a&gt;&lt;script src="http://static.jsbin.com/js/embed.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;Anyway, none of this is what Joey wanted. Sorry, Joey. I hope the thing you wanted still works, even if it is &lt;em&gt;waaaay&lt;/em&gt; complex to set up. Someone should step up and make that easier for you, because I like it when we have pretty things, and there aren&amp;#8217;t enough of them on our&amp;nbsp;desktop.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 20 May 2015 00:58:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-20:2015/05/20/burning-trees/</guid></item><item><title>Your periodic reminder that</title><link>http://www.kryogenix.org/days/2015/05/14/your-periodic-reminder-that/</link><description>&lt;p&gt;Here are things, according to &lt;a href="https://twitter.com/search?q=%22your%20periodic%20reminder%20that%22&amp;amp;src=typd"&gt;Twitter people&lt;/a&gt;, of which you need to be periodically&amp;nbsp;reminded.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;unless you have gender specific bathrooms in your home, you use gender neutral bathrooms on the&amp;nbsp;reg&lt;/li&gt;
&lt;li&gt;one can both disagree with an act but also understand the impulse behind&amp;nbsp;it&lt;/li&gt;
&lt;li&gt;George Osborne promised new powers to English cities don&amp;#8217;t even roll back the 1983 Local Govt&amp;nbsp;dissolution&lt;/li&gt;
&lt;li&gt;I still think Manitoba might be&amp;nbsp;fictitious&lt;/li&gt;
&lt;li&gt;this is Photoshop&amp;#8217;s default&amp;nbsp;pattern&lt;/li&gt;
&lt;li&gt;the best facial exfoliant is still that baking powder sitting on your pantry&amp;nbsp;shelf&lt;/li&gt;
&lt;li&gt;you&amp;#8217;re not being censored when people tell you a conversation is&amp;nbsp;over&lt;/li&gt;
&lt;li&gt;data binding is much faster than virtual &lt;span class="caps"&gt;DOM&lt;/span&gt;&amp;nbsp;diffing&lt;/li&gt;
&lt;li&gt;Douglas Alexander got to be an elder statesman in his 40s by being elected in his&amp;nbsp;20s&lt;/li&gt;
&lt;li&gt;Sequel is&amp;nbsp;awesome&lt;/li&gt;
&lt;li&gt;classical logic is constructivist logic plus&amp;nbsp;lies&lt;/li&gt;
&lt;li&gt;Roseanne Barr is a transphobic garbage person; sorry about your childhood&amp;nbsp;memories&lt;/li&gt;
&lt;li&gt;finding two things are correlated tells you &lt;span class="caps"&gt;ABSOLUTELY&lt;/span&gt; &lt;span class="caps"&gt;ZERO&lt;/span&gt; about what &lt;span class="caps"&gt;CAUSES&lt;/span&gt; &lt;span class="caps"&gt;EITHER&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;sage grouse exist and look like&amp;nbsp;this&lt;/li&gt;
&lt;li&gt;Zimbardo is a&amp;nbsp;hack&lt;/li&gt;
&lt;li&gt;Bring!&amp;nbsp;rocks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don&amp;#8217;t think any of those needed any reminder at all, let alone a periodic&amp;nbsp;one.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 14 May 2015 18:37:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-14:2015/05/14/your-periodic-reminder-that/</guid></item><item><title>Things that are perfect</title><link>http://www.kryogenix.org/days/2015/05/14/things-that-are-perfect/</link><description>&lt;p&gt;&lt;a href="https://twitter.com/itsDanBull/status/598614458785726464"&gt;Dan Bull&lt;/a&gt; asked on twitter: Link me something you consider to be perfect. And I had a few things, which I felt should be recorded for posterity. There’s a lot of stuff I don’t like. But equally there’s quite a bit of stuff which I feel is a perfect shining jewel of the moment it was created; that it could not be improved; that I love it; that it’s perfect.&lt;/p&gt;
&lt;h1&gt;A Doctor Who minimalist poster&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Allons-y" src="http://kryogenix.org/images/tennant-minimalist.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I loved this &lt;a href="http://www.blastr.com/2010/10/10_awesome_minimalist_doc.php"&gt;whole series of posters&lt;/a&gt;, which seem to have been originally done by &lt;a href="http://www.karmaorange.com/"&gt;Karma Orange&lt;/a&gt; although their link has died&lt;sup id="sf-things-that-are-perfect-1-back"&gt;&lt;a title="Regret that I never bought one of these as an actual poster. Although I might get the Matt Smith one. Geronimo." href="#sf-things-that-are-perfect-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. But this is properly fabulous. It makes me smile, just to know it exists.&lt;/p&gt;
&lt;h1&gt;Roads&lt;/h1&gt;
&lt;iframe height="315" src="https://www.youtube.com/embed/Vg1jyL3cr60" width="420" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;I love this song. People who have known me since university will be aware of this. &lt;em&gt;Dummy&lt;/em&gt; by Portishead is the finest album ever, and &lt;em&gt;Roads&lt;/em&gt; is the best song on it. Unusually, the above link is to a live version, because I actually think the live version is even better. Beth’s voice is perfection. Heartbreak. This song is the most wonderful thing.&lt;/p&gt;
&lt;h1&gt;Hell’s Bells, live&lt;/h1&gt;
&lt;iframe height="270" src="//www.dailymotion.com/embed/video/x256bdh" width="480" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;This is Hell’s Bells, by &lt;span class="caps"&gt;AC&lt;/span&gt;/&lt;span class="caps"&gt;DC&lt;/span&gt;, played live at River Plate&lt;sup id="sf-things-that-are-perfect-2-back"&gt;&lt;a title="Yes I know I said that me liking live versions is unusual. You wouldn’t know it from this post, though." href="#sf-things-that-are-perfect-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;. If you gave me a choice of any person, anywhere, that I could be, and I didn’t have to go back and kill Hitler or anything like that, I’d be Brian Johnson, swinging on the rope at River Plate. I’ve never seen &lt;span class="caps"&gt;AC&lt;/span&gt;/&lt;span class="caps"&gt;DC&lt;/span&gt; live, and now I likely never will, but this is the finest gig there’s ever been. Look at the people. Hundreds of thousands of them. That must be something, feeling that wave.&lt;/p&gt;
&lt;h1&gt;The Secret History&lt;/h1&gt;
&lt;p&gt;A book by Donna Tartt. &lt;a href="http://www.amazon.co.uk/The-Secret-History-Donna-Tartt/dp/0140167773"&gt;The Secret History&lt;/a&gt; was a story I first read — was first published — while I was at university. I’ve read much, both before and after it. I can name individual paragraphs from other books that I prefer. But &lt;span class="caps"&gt;TSH&lt;/span&gt; is still, after all these years, my favourite book. That I can’t help but construe certain tragic similarities between Richard Papen and myself, to quote Francis, is where some of its appeal lies. And a day when I don’t quote the book or be influenced by it in some context is unusual, not that anyone else knows that.&lt;/p&gt;
&lt;h1&gt;The Assassin’s Creed Revelations E3 trailer&lt;/h1&gt;
&lt;iframe height="236" src="https://www.youtube.com/embed/4K39UWxdm0U" width="420" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;I’ve never seen anything like this. When it was released I watched it over and over and over again. The soundtrack (&lt;a href="https://en.wikipedia.org/wiki/Iron_(Woodkid_song)"&gt;Iron&lt;/a&gt; by Woodkid) is marvellous, and the video meshes with it ideally; this is not just some song they dropped into the trailer because they couldn’t find anything better. But it’s looking at it that I can hardly believe. It’s jaw-dropping. Look at Ezio’s hood when he’s pushed out onto the balcony, or Leandros’s skin. The trip across the desert, and perching on top of a mountain like Batman. Watch Ezio duck under a swung spear and then nut a guy with a metal helmet on. Better, watch him get shot in the shoulder, look around him like a hunted wolf, and then snap the arrow off. It is unbelieveable. The story, the characterisation, the graphics&lt;sup id="sf-things-that-are-perfect-3-back"&gt;&lt;a title="honest word? the bit where Ezio gets his head pulled off is the first part where he looks like a computer character. Uncanny Valley. Right up until then, he looks totally completely realistic. That tiny bit I find disappointing. But I pretend it isn’t there." href="#sf-things-that-are-perfect-3" class="simple-footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;, the music. Sure, the game wasn’t perfect, but the trailer is. &lt;/p&gt;
&lt;h1&gt;Golden Leaves by Passenger&lt;/h1&gt;
&lt;iframe height="236" src="https://www.youtube.com/embed/ytmLIv4TrUs" width="420" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;I’ve listened to a lot of music. &lt;em&gt;Hell’s Bells&lt;/em&gt; makes me feel happy. &lt;em&gt;Roads&lt;/em&gt; is like being stroked with fur gloves. But &lt;em&gt;Golden Leaves&lt;/em&gt;, and specifically &lt;em&gt;this&lt;/em&gt; recording, done in Cambridge with an orchestra, is the concept of melancholy made material, for me. There’s something compelling about melancholy, a sweet langorous sense of feeling sorry for yourself or for everything and yet being touched by it. There’s not a note wrong, not a lyric misplaced, in this recording of this song. It is wonderful.&lt;/p&gt;
&lt;h1&gt;Preliator by Globus&lt;/h1&gt;
&lt;iframe height="315" src="https://www.youtube.com/embed/5q6skxRLnsI" width="420" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;And this, this is what I listen to when I want to feel heroic. I’ve never known a song like this. Listening to it makes me feel six inches taller. Like I could stand in the fire and be unharmed. Globus have taken the idea of huge, orchestral, imposing, world-shaking music which Wagner and Verdi had and redone it for modern times.&lt;sup id="sf-things-that-are-perfect-4-back"&gt;&lt;a title="fine, for film soundtracks, but you find your patrons where you can" href="#sf-things-that-are-perfect-4" class="simple-footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; This is hero music for everyone. I defy you to listen to it and not imagine yourself at the point of the lightning bolt, marching through the fields of enemy slain and laying all waste before you. What is good in life? This is.&lt;/p&gt;
&lt;h1&gt;Zero Punctuation: Assassin’s Creed Unity&lt;/h1&gt;
&lt;iframe height="236" src="https://www.youtube.com/embed/TB3DrTkVgHw" width="420" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;I like well-written comedy which also manages to be relevant to stuff I care about. We do that&lt;sup id="sf-things-that-are-perfect-5-back"&gt;&lt;a title="or at least try" href="#sf-things-that-are-perfect-5" class="simple-footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; on Bad Voltage. The review sections are, at least to me, things that ought to be Zero Punctuation; Yahtzee fires a whole bunch of blanks at times, but when he gets it right he really really gets it right, and this particular review of a not-very-good game doesn’t put a single foot wrong. Describing the Assassin’s Creed backstory as the “yay downtrodden, boo aristos dynamic” is all of incisive, accurate, and terribly amusing. Arno just being Ezio 2.0 because he has a four-letter-name with an “O” on the end fits ideally into the rhythm. Inspired, every time I watch it.&lt;/p&gt;
&lt;h1&gt;Ants Go Marching In, hero version&lt;/h1&gt;
&lt;iframe height="236" src="https://www.youtube.com/embed/0X3Me_MVR90" width="420" allowfullscreen="" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;You may know this tune as &lt;em&gt;When Johnny Comes Marching Home&lt;/em&gt;. I’d call it &lt;em&gt;The Animals Went In Two By Two&lt;/em&gt;. When Michael Kamen took it for &lt;em&gt;Die Hard With A Vengeance&lt;/em&gt; and made it into hero music, I could hardly believe it. Preliator is hero music for sweeping the battlefield with power. This, this is about being heroic in your actual life. It’s a kid’s song, made epic — made into the definition of the &lt;em&gt;word&lt;/em&gt; epic — just by being well orchestrated. Think of the circularly marching students in &lt;em&gt;Dead Poets Society&lt;/em&gt; crossed with Scar’s &lt;em&gt;Be Prepared&lt;/em&gt;&lt;sup id="sf-things-that-are-perfect-6-back"&gt;&lt;a title="which very, very nearly made it onto this list itself, but it’s a villain song. It is perfect; Scar is not." href="#sf-things-that-are-perfect-6" class="simple-footnote"&gt;6&lt;/a&gt;&lt;/sup&gt;. It is inspirational to a degree I can barely express in words. Six inches taller, again.&lt;/p&gt;
&lt;h1&gt;Lumps&lt;/h1&gt;
&lt;blockquote&gt;Perfection is finality. Finality is death. Nothing is perfect. There are lumps in it.&lt;/blockquote&gt;

&lt;p&gt;So, what’s perfect? Go tell Dan Bull, and tell me. Link me what you think is perfect. Not just good, but perfect. Post it. We need more perfection in the world.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-things-that-are-perfect-1"&gt;Regret that I never bought one of these as an actual poster. Although I might get the Matt Smith one. Geronimo. &lt;a href="#sf-things-that-are-perfect-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-things-that-are-perfect-2"&gt;Yes I know I said that me liking live versions is unusual. You wouldn’t know it from this post, though. &lt;a href="#sf-things-that-are-perfect-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-things-that-are-perfect-3"&gt;honest word? the bit where Ezio gets his head pulled off is the first part where he looks like a computer character. Uncanny Valley. Right up until then, he looks totally completely realistic. That tiny bit I find disappointing. But I pretend it isn’t there. &lt;a href="#sf-things-that-are-perfect-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-things-that-are-perfect-4"&gt;fine, for film soundtracks, but you find your patrons where you can &lt;a href="#sf-things-that-are-perfect-4-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-things-that-are-perfect-5"&gt;or at least try &lt;a href="#sf-things-that-are-perfect-5-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-things-that-are-perfect-6"&gt;which very, very nearly made it onto this list itself, but it’s a villain song. It is perfect; Scar is not. &lt;a href="#sf-things-that-are-perfect-6-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 14 May 2015 01:40:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-14:2015/05/14/things-that-are-perfect/</guid></item><item><title>I wish I could pay for things on my mobile bill</title><link>http://www.kryogenix.org/days/2015/05/05/i-wish-i-could-pay-for-things-on-my-mobile-bill/</link><description>&lt;p&gt;I wish I could pay for things on my mobile bill. Stuff I’m buying from websites, applications from an app store, pizzas from Dominos. This, the concept called “carrier billing” or “operator billing”, would be entirely possible if mobile phone carriers could do one inch of cooperation rather than sitting about wringing their hands about how Apple and Google are getting all the money. Of course they’re getting all the money; you lot would rather they got all the money than any competitor got a cent, and it’s going to kill your businesses and turn you into the dumb pipes that everyone wrongly thinks you should be.&lt;/p&gt;
&lt;p&gt;So, this is how it should work. Carriers, pay attention.&lt;/p&gt;
&lt;h2&gt;Step 0: The Carriers&lt;/h2&gt;
&lt;p&gt;All the carriers get together and create one service where people can pay for things on their mobile bill by just visiting a web page. This is the bit that has not happened; this stuff is theoretically possible (&lt;span class="caps"&gt;GSMA&lt;/span&gt; were doing tech demos of this sort of thing, conceptually, two years ago when I was at &lt;span class="caps"&gt;MWC&lt;/span&gt;). Imagine they now have all done so, and this service is live at OneTrueMobilePayments.com.&lt;/p&gt;
&lt;h2&gt;Step 1: The Developer&lt;/h2&gt;
&lt;p&gt;I, an app developer, make a mobile web app. I go to OneTrueMobilePayments.com and sign up, completely automatedly, fill in my bank details/paypal account/whatever, and get an &lt;span class="caps"&gt;API&lt;/span&gt; key. Note that there was no requirement there to fill in a form and have a human review it, nor to sign a secret &lt;span class="caps"&gt;NDA&lt;/span&gt;, nor to agree to a partnership deal with one specific carrier. Signing up for this should be like signing up for Google Adsense or Stripe or something. No secret deals. No signatures on bits of paper.&lt;/p&gt;
&lt;h2&gt;Step 2: The User&lt;/h2&gt;
&lt;p&gt;A user comes to my website. I want to sell them some digital thing; a new avatar, let’s say. I construct the &lt;span class="caps"&gt;URL&lt;/span&gt; &lt;code&gt;http://onetruemobilepayments.com/buy?item=NewAvatar&amp;amp;price=1GBP&amp;amp;apikey=ABCDEFG&lt;/code&gt; and direct the user’s browser to it. The user goes there, and that website recognises which carrier they’re on (because they’re on the carrier’s network and the carrier’s network knows that they’re connected to the onetruemobilepayments server, which is magic&lt;sup id="sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-1-back"&gt;&lt;a title="this requires carrier cleverness, but it’s already doable; EE, here in the UK, will show me my current data usage just by visiting a URL, and I didn’t have to log in at all" href="#sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;) and gives them a big button which says “buy this thing for &lt;span class="caps"&gt;1GBP&lt;/span&gt;”. Clicking that button redirects back to the web app with some sort of ?paid=yes thing; my web app then records that the payment was made, just like buying from paypal.&lt;/p&gt;
&lt;p&gt;Obviously there would need to be a bunch of cryptography and stuff in here to avoid forged requests, replay attacks, etc, but that’s all known science (paypal does it, oauth does it, etc). There is also the problem of “what if they’re on wifi”, which is indeed a problem for this plan but probably not insurmountable.&lt;sup id="sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-2-back"&gt;&lt;a title="You say “sorry, disconnect from wifi and then hit refresh”, or you send them an SMS to the number they entered and they reply with “yes, pay it”, or something. There is complexity here, but if we can land a man on the moon, we can sort this out, for god’s sake." href="#sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; Maybe onetruemobilepayments.com is &lt;em&gt;actually&lt;/em&gt; a different server for every carrier and each carrier sets it differently in their &lt;span class="caps"&gt;DNS&lt;/span&gt;. Dunno. There are plenty of smart tech people who can work out the best way to provide the slick user experience I describe.&lt;/p&gt;
&lt;p&gt;Importantly, there are two things missing from the above, and it’s really important that they &lt;em&gt;stay&lt;/em&gt; missing.&lt;/p&gt;
&lt;p&gt;The first is: the developer did not know anything about carriers. They signed up for the one service, and that all works. The developer did not have to sign separate deals with every carrier in every country; they did not have to register their bank account with every carrier in every country; they signed up for one api key from the service and that’s it. Now, sure, there are a whole bunch of financial and tax and whatnot implications here, but developers &lt;strong&gt;don’t care&lt;/strong&gt;. Solve that problem. Don’t outsource it to every developer in the world. Make this be an &lt;em&gt;easier way&lt;/em&gt; to get money for developers than the iTunes App Store is, and people will jump on it like wolves. Getting paid for stuff is currently irritating. Make it be not irritating. Make it be as simple as Stripe for your developers, and &lt;em&gt;way simpler than Stripe&lt;/em&gt; for the millions and millions of users. And then take 5% off each payment or whatever. &lt;/p&gt;
&lt;p&gt;The second is: the user did not have to log in. They did not have to register a username and a password; they did not have to remember that password. My carrier knows which web pages I’m visiting. Use that information. My carrier knows how my phone is connected to the network. A web server operated by the carrier and plumbed into the carrier’s network can know who I am without having to ask. Use that. The user already has a financial relationship with their carrier; you don’t need to ask them for accounts and payment details. Use that. That makes the purchase experience totally slick. No passwords to remember. No initial hurdle of setting up a username. One click. Paid for. Done. That’s how you beat Google Wallet and Paypal, by taking advantage of the fact that you run the network and they don’t. They want carriers to be just dumb pipes — avoid that by being a &lt;em&gt;smart&lt;/em&gt; pipe which can deliver things that they cannot.&lt;/p&gt;
&lt;h2&gt;The frustration, it burns&lt;/h2&gt;
&lt;p&gt;I am not the first person to say all of this. This is all known concept in the carrier world. The &lt;span class="caps"&gt;GSMA&lt;/span&gt; is a sort of steering-group-cum-industry-organisation who are there to help make this sort of cooperation happen. But their OneAPI project has closed; &lt;span class="caps"&gt;WAC&lt;/span&gt; never really got off the ground and got binned. Operators basically refuse to change any of their systems to do anything interoperable at all. And they don’t think that developer APIs are worth it, because every time an operator creates a set of developer APIs, nobody uses them. Because they insist that a developer sign up and sign an &lt;span class="caps"&gt;NDA&lt;/span&gt; before being able to read the documentation; that that developer then has to register with each carrier individually; that making a developer sign an agreement &lt;em&gt;specifically with you&lt;/em&gt; is more important than them actually getting stuff done, and every carrier would rather lose the business than cooperate with their competition. No developers will do all this. You, Mrs Operator, are not an important part of their business, not when they have to sign up with your 99 competitors as well. Nobody is going to set up a system where users get a slick experience &lt;em&gt;but only if they’re on T-Mobile&lt;/em&gt;. This is not competitive advantage for you. Stop thinking that it can be. But if you all get together then it is competitive advantage for operators as a whole over non-operators as a whole. It honestly feels like the “priority ordering” for operators is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Do something which makes us, our specific operator, win and every other operator lose, so that one day every mobile phone in the world uses us!&lt;sup id="sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-3-back"&gt;&lt;a title="insert maniacal laughter here" href="#sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-3" class="simple-footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Lose and have Google and Apple and Stripe and Paypal get all the money&lt;/li&gt;
&lt;li&gt;Do something which makes us and other operators all win big and Paypal lose&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;…that is, it is more important that your competition loses than that you win. This is stupid on a scale difficult to express in words. It is the Mount Everest of moronic business thoughts. Pack it in.&lt;/p&gt;
&lt;p&gt;Please build this. Please stop me having to type my credit card number in, or teach that credit card number to my browser, or sign up for a Paypal account. Carriers, &lt;em&gt;you could do this&lt;/em&gt;. All it needs is that you be prepared to cooperate, and that you work in the open and not only in secret back-room handshake partnership deals. Yes, this is a radical change to the way you do business. But in a world in which everyone’s on mobile, it means you get 3% of every transaction anyone makes anywhere, and it is a slick delightful experience to a degree that your non-carrier competition &lt;em&gt;cannot match&lt;/em&gt;. Do it. Make everyone love you. It’s much nicer than being hated, I promise.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-1"&gt;this requires carrier cleverness, but it’s already doable; &lt;span class="caps"&gt;EE&lt;/span&gt;, here in the &lt;span class="caps"&gt;UK&lt;/span&gt;, will show me my current data usage just by visiting a &lt;span class="caps"&gt;URL&lt;/span&gt;, and I didn’t have to log in at all &lt;a href="#sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-2"&gt;You say “sorry, disconnect from wifi and then hit refresh”, or you send them an &lt;span class="caps"&gt;SMS&lt;/span&gt; to the number they entered and they reply with “yes, pay it”, or something. There is complexity here, but if we can land a man on the moon, we can sort this out, for god’s sake. &lt;a href="#sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-3"&gt;insert maniacal laughter here &lt;a href="#sf-i-wish-i-could-pay-for-things-on-my-mobile-bill-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 05 May 2015 09:59:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-05:2015/05/05/i-wish-i-could-pay-for-things-on-my-mobile-bill/</guid></item><item><title>Why I Play The Lottery</title><link>http://www.kryogenix.org/days/2015/04/19/why-i-play-the-lottery/</link><description>&lt;p&gt;There is a persistent meme that lotteries are a tax on people who can’t do maths and are stupid. I don’t think I’m stupid&lt;sup id="sf-why-i-play-the-lottery-1-back"&gt;&lt;a title="not all the time, anyway" href="#sf-why-i-play-the-lottery-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; and I’m &lt;span class="caps"&gt;OK&lt;/span&gt;&lt;sup id="sf-why-i-play-the-lottery-2-back"&gt;&lt;a title="ish" href="#sf-why-i-play-the-lottery-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; at maths, and I play the lottery. This is why.&lt;/p&gt;
&lt;p&gt;Basically, my desire for money is not linear, because I’m not &lt;em&gt;homo economicus&lt;/em&gt;.&lt;sup id="sf-why-i-play-the-lottery-3-back"&gt;&lt;a title="People aren’t identical and spherical, either" href="#sf-why-i-play-the-lottery-3" class="simple-footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; My laws of desire for money are more Einsteinian than Newtonian: linear desire for money works at &lt;em&gt;small&lt;/em&gt; amounts, but as they get higher it gets weird. I might desire £4 twice as much as £2, true enough; small amounts, Newton’s sensible laws. But I don’t desire £2 million twice as much as £1 million, because having a million would be enough and what would I do with the second million? I desire a million quite a lot more than a hundred times as much as £10,000, because a million quid is amazing and ten grand is a new car. The lottery gives me, for a negligible outlay, an outside chance of having a million quid, which would be radically life-changing (because I’d never have to work again). &lt;/p&gt;
&lt;p&gt;There’s no other way I’ll get a million pounds. Sure, my chances of winning the lottery are at pretty adverse odds (roughly, 1 in 14 million chance of winning; when I win I get somewhere in between 2 and 6 million pounds). But having a million quid is a goal I’d like to hit. I can attempt that with almost no work.&lt;/p&gt;
&lt;p&gt;Imagine that I wanted a million, and I started with a pound. Perhaps I should play roulette instead, which has a &lt;em&gt;much&lt;/em&gt; more favourable edge than the lottery (although it’s still unfavourable; 5 &lt;sup&gt;5&lt;/sup&gt;/&lt;sub&gt;19&lt;/sub&gt;% for the bank and against me). So I stick my quid on black 17, and it comes up; a chance of 1/38, and I get £36 back for a total of £37. I let that £37 ride, and black 17 comes up again, so I now have £1369. Ride again&lt;sup id="sf-why-i-play-the-lottery-4-back"&gt;&lt;a title="ignore table limits here" href="#sf-why-i-play-the-lottery-4" class="simple-footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; for £50653, and again for £1.8 million, which is retirement money and so I stop. The chances of that happening; 1 in 2 million or so. So playing roulette is very roughly equivalent to playing the lottery (chances of getting a million quid: one in some millions). And the lottery is a &lt;em&gt;lot&lt;/em&gt; easier to do; you don’t have to put on a dinner jacket and walk to the casino, and you &lt;em&gt;can&lt;/em&gt; play for a pound.&lt;sup id="sf-why-i-play-the-lottery-5-back"&gt;&lt;a title="there are casinos which will let you put a quid on a roulette wheel spin, but good luck finding a table which allows wagering a quid and allows wagering fifty grand" href="#sf-why-i-play-the-lottery-5" class="simple-footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;This is the point. I won’t miss the money, it’s very easy to do, and it &lt;em&gt;might&lt;/em&gt; end up changing my life, so why not do it? If I were &lt;em&gt;actually&lt;/em&gt; good at maths, maybe I’d plot a graph of some sort of quotient made up of “amount spent” vs “effort required” vs “amount won”. I bet the lottery looks quite a lot better than “working for a living”, on that graph.&lt;/p&gt;
&lt;p&gt;I should note here that the second part of the meme which is often quoted alongside it is that lotteries are a tax on the poor; that is, people who &lt;em&gt;will&lt;/em&gt; miss that hundred pounds a year. This is completely correct. I would not notice the half-a-pint a week that the lottery costs me; this is not the case for others, and lotteries being a tax on the poor is entirely correct.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-why-i-play-the-lottery-1"&gt;not all the time, anyway &lt;a href="#sf-why-i-play-the-lottery-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-why-i-play-the-lottery-2"&gt;ish &lt;a href="#sf-why-i-play-the-lottery-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-why-i-play-the-lottery-3"&gt;People aren’t identical and spherical, either &lt;a href="#sf-why-i-play-the-lottery-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-why-i-play-the-lottery-4"&gt;ignore table limits here &lt;a href="#sf-why-i-play-the-lottery-4-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-why-i-play-the-lottery-5"&gt;there are casinos which will let you put a quid on a roulette wheel spin, but good luck finding a table which allows wagering a quid &lt;em&gt;and&lt;/em&gt; allows wagering fifty grand &lt;a href="#sf-why-i-play-the-lottery-5-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 19 Apr 2015 11:54:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-04-19:2015/04/19/why-i-play-the-lottery/</guid></item><item><title>A music thing for my parents</title><link>http://www.kryogenix.org/days/2015/04/06/a-music-thing-for-my-parents/</link><description>&lt;p&gt;A while back my parents said: we’ve got a telly in the dining room now. Could we play music through it so we can put songs on while we’re doing things around the house?&lt;/p&gt;
&lt;p&gt;Sure, I said.&lt;/p&gt;
&lt;h2&gt;Dad Music &lt;span class="caps"&gt;TV&lt;/span&gt;&lt;/h2&gt;
&lt;p style="text-align: center"&gt;&lt;img alt="For parents everywhere" src="http://www.kryogenix.org/images/dadmusictv-startup.png" style="max-width:100%"&gt;&lt;/p&gt;

&lt;p&gt;So, we have a set of constraints. We need to find or build a thing which can play music through a telly, and which they can put new music on without my help. I’m sure there are devices out there which can do this, but I thought it might be fun to build something. And I set the biggest constraint of all on the device, which is this: it is not connected to the network. Wifi is annoying to configure, and on the Raspberry Pi it basically requires a powered hub.&lt;sup id="sf-a-music-thing-for-my-parents-1-back"&gt;&lt;a title="you will say, no it doesn’t. and I will not believe you. and I’ve tried. A wifi dongle plugged into a powered hub which is then plugged into the Pi works always. A dongle plugged directly into the Pi works sometimes. At best. No network." href="#sf-a-music-thing-for-my-parents-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; No ethernet network connection while it’s running. Non-negotiable requirement.&lt;/p&gt;
&lt;p&gt;Therefore, there are two complexities here: how do you get music onto this thing? And how do you control it?&lt;/p&gt;
&lt;p&gt;My thought was: we’ll base this on a Raspberry Pi, because they’re nice and standard and you can buy nice looking cases for them. That way, it needs only two wires: power, and &lt;span class="caps"&gt;HDMI&lt;/span&gt; into the telly, and that’s it. How you put music on it is: you unplug it, put the &lt;span class="caps"&gt;SD&lt;/span&gt; card into a computer, copy music onto the &lt;span class="caps"&gt;SD&lt;/span&gt; card, then put the card back in the Pi and turn it on. Ta daaah; easy.&lt;sup id="sf-a-music-thing-for-my-parents-2-back"&gt;&lt;a title="actually, that’s probably easier than faffing about copying it over the network, to be honest; no passwords, no hassle, no dodgy wifi" href="#sf-a-music-thing-for-my-parents-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; This requires something on the Pi which knows how to play music, and knows how to look at a folder of mp3s and index them. Sounds like a job for &lt;a href="http://www.musicpd.org/"&gt;mpd&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;And indeed that works. We create a folder named &lt;code&gt;MUSIC&lt;/code&gt; at the root of the Pi’s &lt;span class="caps"&gt;SD&lt;/span&gt; card&lt;sup id="sf-a-music-thing-for-my-parents-3-back"&gt;&lt;a title="it’s running Raspbian, obviously; there is now a build of proper Ubuntu (not snappy) for the Pi 2, but Raspbian is fine here and at this level Ubuntu and Debian are pretty much identical" href="#sf-a-music-thing-for-my-parents-3" class="simple-footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;, and stick &lt;a href="http://askubuntu.com/questions/143315/how-to-hide-files-and-folders-in-nautilus"&gt;a file named &lt;code&gt;.hidden&lt;/code&gt; in the root&lt;/a&gt; to ensure that only the &lt;code&gt;MUSIC&lt;/code&gt; folder shows up. Now, when my dad puts the &lt;span class="caps"&gt;SD&lt;/span&gt; card into his machine, it’ll pop up a file browser window which only shows the &lt;code&gt;MUSIC&lt;/code&gt; folder. Winner. Configure &lt;code&gt;mpd&lt;/code&gt; on the Pi to treat &lt;code&gt;/MUSIC&lt;/code&gt; as its music root directory, and that all works; whenever the Pi starts up, &lt;code&gt;mpd&lt;/code&gt; reindexes all the music in the folder, and you can’t add music without taking out the &lt;span class="caps"&gt;SD&lt;/span&gt; card which means that you have to restart the Pi. Now we can put music on the device and there’s a daemon which knows how to play it. Step 1: done.&lt;/p&gt;
&lt;p&gt;It should really show something on the screen while it’s playing, though, shouldn’t it? So, a trivial little Python script which (a) uses &lt;span class="caps"&gt;SDL&lt;/span&gt; to (b) display things on the framebuffer while (c) being an mpd client, so when mpd does anything, the screen display changes. This is pretty easy stuff, thanks to &lt;a href="https://learn.adafruit.com/pi-video-output-using-pygame/pointing-pygame-to-the-framebuffer"&gt;an Adafruit writeup about using the framebuffer on the Pi&lt;/a&gt;.&lt;/p&gt;
&lt;p style="text-align: center"&gt;&lt;img title="Santana. Yes." alt="The main screen" src="http://www.kryogenix.org/images/dadmusictv-running.png" style="max-width:100%"&gt;&lt;/p&gt;

&lt;p&gt;Now, how do we control it? It has no network. There is a thing named &lt;a href="http://en.wikipedia.org/wiki/HDMI#CEC"&gt;&lt;span class="caps"&gt;HDMI&lt;/span&gt;-&lt;span class="caps"&gt;CEC&lt;/span&gt;&lt;/a&gt; which allows a &lt;span class="caps"&gt;TV&lt;/span&gt; to pass commands down an &lt;span class="caps"&gt;HDMI&lt;/span&gt; cable to a connected device. This would be the obvious way to do it, and &lt;a href="http://www.instructables.com/id/Raspberry-Pi-Remote-For-Free/"&gt;the Pi supports it&lt;/a&gt;; just have the &lt;span class="caps"&gt;TV&lt;/span&gt;’s remote control buttons for left/right/up/down/whatever get sent to the Pi, which then reacts to them appropriately.&lt;/p&gt;
&lt;p&gt;Sadly, their telly doesn’t do &lt;span class="caps"&gt;CEC&lt;/span&gt;. So that’s that idea kiboshed. Shame; this would have been a good way to do it.&lt;/p&gt;
&lt;p&gt;So, next step. Bluetooth it is! For that, we need a bluetooth &lt;span class="caps"&gt;USB&lt;/span&gt; dongle for the Pi. I have two, but one of them I couldn’t get to work. The one that does work names itself in lsusb as &lt;code&gt;0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)&lt;/code&gt;. So now what we need is some way to control &lt;code&gt;mpd&lt;/code&gt; on the Pi over Bluetooth. Well… Bluetooth supports what it calls “&lt;span class="caps"&gt;RFCOMM&lt;/span&gt;” connections, which basically are a socket, like telnet, but which goes over Bluetooth. So what if we make a little “proxy” server which listens on a Bluetooth socket and connects to &lt;code&gt;mpd&lt;/code&gt;&lt;span class="quo"&gt;‘&lt;/span&gt;s socket &lt;span class="caps"&gt;API&lt;/span&gt;? So when someone connects over Bluetooth to it, they can act just like they’re connected to &lt;code&gt;mpd&lt;/code&gt; normally because they send an &lt;code&gt;mpd&lt;/code&gt; command to the Bluetooth socket, the little proxy sends it on to &lt;code&gt;mpd&lt;/code&gt;, &lt;code&gt;mpd&lt;/code&gt; responds, and the proxy sends the output back? That way, all you need is an &lt;code&gt;mpd&lt;/code&gt; client where you can switch out its “use a socket to connect” code with “use a Bluetooth socket to connect” code and Robert’s your mother’s brother. And indeed, that works; another relatively trivial bit of Python code to just open the two sockets and shuffle data between them.&lt;/p&gt;
&lt;p&gt;Now we need an mpd client which can connect over Bluetooth. Both my parents have Android phones, so that’s the obvious place to have the client. I don’t like Java, so taking an existing open source Android mpd client and altering it is sadly not on the cards. One way to do this would be something like Cordova/PhoneGap, but nobody seems to have written a Cordova mpd app which makes socket connections itself, sadly.&lt;sup id="sf-a-music-thing-for-my-parents-4-back"&gt;&lt;a title="there are a million billion mpd clients where the “client” running on the web is actually talking to a server which then in turn connects to mpd, but we can’t do that here because there’s nowhere to run the server, and making a webview use a bluetooth socket rather than a tcp socket sounds really low-level and difficult" href="#sf-a-music-thing-for-my-parents-4" class="simple-footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; So, time to write a relatively noddy mpd client for Android. The ideal here is &lt;a href="http://kivy.org"&gt;Kivy&lt;/a&gt;; it’s Python, it does all the &lt;span class="caps"&gt;GUI&lt;/span&gt; stuff, and they have both &lt;a href="http://kivy.org/docs/guide/packaging-android.html"&gt;good documentation and the “buildozer” utility for packaging a Kivy app for Android&lt;/a&gt;. This also has the advantage that, because it’s in Python and I understand it, I can write the client with a switchable socket back-end, so on Android it uses Bluetooth, and on my desktop it uses an ordinary socket to connect over the network, so I can test the client in a nice convenient environment. I can also have the client connect to &lt;code&gt;mpd&lt;/code&gt; running on my actual computer, so I can use other mpd clients to confirm that it does what it’s trying to do, that the screen display thing changes when it’s supposed to, and so on: this makes testing really, really easy because I don’t have to push any of it to the Pi or the Android phone while I’m working on it or to test it out. Having a test environment like this makes life much nicer.&lt;/p&gt;
&lt;p style="text-align: center"&gt;&lt;img title="The Beastie Boys!" alt="The Android client" src="http://www.kryogenix.org/images/dadmusictv-client.png" style="max-width:100%"&gt;&lt;/p&gt;

&lt;p&gt;And, indeed, all of this works! It’s not quite finished yet, but all of this stuff hangs together. I’m quietly pleased with the amount of different stuff that had to come together for this project; Raspbian on a Raspberry Pi, mpd and its pretty-good &lt;span class="caps"&gt;API&lt;/span&gt;, creating Bluetooth server sockets with PyBluez on the Pi, proxying between two sockets, rendering a screen with &lt;span class="caps"&gt;SDL&lt;/span&gt; to the framebuffer, supervisord to ensure that all the server-side stuff gets run and keeps running and reports errors, building apps with Kivy, Android packaging for Kivy, using PyJnius from Python to use the underlying Android Java &lt;span class="caps"&gt;API&lt;/span&gt;, Bluetooth clients… I knew &lt;em&gt;about&lt;/em&gt; all of this stuff at a high level, but there’s something satisfying about pulling it all together into a working product. &lt;/p&gt;
&lt;p&gt;Code is at &lt;a href="https://github.com/stuartlangridge/dadmusictv"&gt;github.com/stuartlangridge/dadmusictv&lt;/a&gt; for both the Pi server and the Android client if you’re very keen to look at it. I’ve written down instructions, but they’re really for me as reference if I’m honest; setting this up yourself will require some jiggery-pokery, I don’t doubt. Nonetheless, this was a fun project to do. Easter hacking time 2015: 10 marks out of 10.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-a-music-thing-for-my-parents-1"&gt;you will say, no it doesn’t. and I will not believe you. and I’ve tried. A wifi dongle plugged into a powered hub which is then plugged into the Pi works always. A dongle plugged directly into the Pi works sometimes. At best. No network. &lt;a href="#sf-a-music-thing-for-my-parents-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-a-music-thing-for-my-parents-2"&gt;actually, that’s probably easier than faffing about copying it over the network, to be honest; no passwords, no hassle, no dodgy wifi &lt;a href="#sf-a-music-thing-for-my-parents-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-a-music-thing-for-my-parents-3"&gt;it’s running Raspbian, obviously; there is now a build of proper Ubuntu (not snappy) for the Pi 2, but Raspbian is fine here and at this level Ubuntu and Debian are pretty much identical &lt;a href="#sf-a-music-thing-for-my-parents-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-a-music-thing-for-my-parents-4"&gt;there are a million billion mpd clients where the “client” running on the web is actually talking to a server which then in turn connects to mpd, but we can’t do that here because there’s nowhere to run the server, and making a webview use a bluetooth socket rather than a tcp socket sounds really low-level and difficult &lt;a href="#sf-a-music-thing-for-my-parents-4-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 06 Apr 2015 14:03:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-04-06:2015/04/06/a-music-thing-for-my-parents/</guid></item><item><title>Send a URL to your Ubuntu phone with Caxton</title><link>http://www.kryogenix.org/days/2015/04/03/send-a-url-to-your-ubuntu-phone-with-caxton/</link><description>&lt;p&gt;I fairly often need to send a &lt;span class="caps"&gt;URL&lt;/span&gt; from my desktop to my phone; there has been a product called Chrome2phone (and Fox2phone) for Android for this for years, and there&amp;#8217;s Ansible for iPhones. But not for an Ubuntu phone. At least until&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://caxton.herokuapp.com"&gt;Caxton&lt;/a&gt; does precisely that; you install the Caxton app on your Ubuntu phone and add the Caxton extension to Chrome or Firefox and then you can just click the button to send the &lt;span class="caps"&gt;URL&lt;/span&gt; you&amp;#8217;re looking at in your desktop browser to your Ubuntu phone.&amp;nbsp;Hooray!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://caxton.herokuapp.com/caxton-chrome-desktop.png" style="max-width: 80%; margin: auto"&gt;&lt;/p&gt;
&lt;h3&gt;but that&amp;#8217;s not&amp;nbsp;all&lt;/h3&gt;
&lt;p&gt;Caxton is quite a lot more general than that. You can use it to send any &lt;span class="caps"&gt;URL&lt;/span&gt; from anywhere to any app on your Ubuntu phone. For example, Caxton works with &lt;a href="http://ifttt.com"&gt;&lt;span class="caps"&gt;IFTTT&lt;/span&gt;&lt;/a&gt;. Do you want to get a notification on your phone when your package ships? Use &lt;span class="caps"&gt;IFTTT&lt;/span&gt; and make a recipe which gets alerts from your courier and sends a note to your phone. Need immediate alerts if your scripts fail? Add a line to your script which sends a message to the Caxton &lt;span class="caps"&gt;API&lt;/span&gt; on failure and you&amp;#8217;ll never miss an alert again. And you don&amp;#8217;t have to just send web URLs. If you&amp;#8217;re an app developer on Ubuntu and you want your users to be able to send things from other devices or computers to your app, then you can have your app register for a custom &lt;span class="caps"&gt;URL&lt;/span&gt; and then have your users install Caxton; Caxton then handles all the push notifications stuff for you and your users get all the benefits of instant push while saving you the need to run a&amp;nbsp;server.&lt;/p&gt;
&lt;h3&gt;cheers&lt;/h3&gt;
&lt;p&gt;I shall say thank you here to Alan Pope and Mike Sheldon for early testing, Marc Deslauriers for security and privacy advice, and Sam Hewitt for icon design. Speaking of privacy advice, Caxton is very careful to not explicitly store details of what you send through it, and it doesn&amp;#8217;t know who you are; it also doesn&amp;#8217;t keep a record of your&amp;nbsp;tokens.&lt;/p&gt;
&lt;h3&gt;so let me&amp;nbsp;know&lt;/h3&gt;
&lt;p&gt;If you find Caxton useful (or if you find it broken) do let me know on &lt;a href="http://twitter.com/sil"&gt;twitter&lt;/a&gt; or &lt;a href="http://kryogenix.org/+"&gt;google+&lt;/a&gt;; I&amp;#8217;d love to see people easily sending web pages over to their phone, and using the &lt;span class="caps"&gt;API&lt;/span&gt; to do cool things that I haven&amp;#8217;t thought&amp;nbsp;of!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 03 Apr 2015 18:33:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-04-03:2015/04/03/send-a-url-to-your-ubuntu-phone-with-caxton/</guid></item><item><title>Chrome improves Add To Home Screen. Sorta</title><link>http://www.kryogenix.org/days/2015/03/16/chrome-improves-add-to-home-screen-sorta/</link><description>&lt;p&gt;So, Chrome &lt;a href="http://updates.html5rocks.com/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android"&gt;improve their add to home screen&lt;/a&gt; feature. Yay! Finally! This is great!&lt;/p&gt;
&lt;p&gt;Well. It’s &lt;em&gt;sorta&lt;/em&gt; great. &lt;/p&gt;
&lt;p&gt;There are two ways of viewing the point of “add to home screen”. The first is as a sort of super-powered bookmark. It’s a favourite which you can get at really easily, without having to open the browser and go fishing around in your bookmarks menu. The second way is that it’s essentially “install this app”, but for web apps rather than native apps. And nobody’s very sure what it’s supposed to mean.&lt;/p&gt;
&lt;p&gt;This causes tension. &lt;/p&gt;
&lt;p&gt;Native apps get to say “install our app” without providing a link, a &lt;span class="caps"&gt;QR&lt;/span&gt; code, whatever: people &lt;em&gt;know&lt;/em&gt; how to do that. You can write it on posters or &lt;span class="caps"&gt;TV&lt;/span&gt; adverts: “StuartApp is the greatest new thing! Install from the App Store or Google Play”. And everyone knows what that means: open up the App Store or Google Play app and search for StuartApp, and touch Install. How do you install my web app? Well, the poster could say “install our web app: StuartApp.com”, and I think people would get that they type that into the browser. No problem there. But then installation is a problem, because it’s browser-specific and it’s a pain in the arse. It’s quite difficult to install a web app (by which I mean “bookmark it to the home screen”&lt;sup id="sf-chrome-improves-add-to-home-screen-sorta-1-back"&gt;&lt;a title="although Matteo Spinelli’s brilliant add to home screen iOS Safari library makes it easier" href="#sf-chrome-improves-add-to-home-screen-sorta-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;) in iOS Safari&lt;sup id="sf-chrome-improves-add-to-home-screen-sorta-2-back"&gt;&lt;a title="other iOS browsers can’t do it at all; it’s a secret Safari-only feature" href="#sf-chrome-improves-add-to-home-screen-sorta-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;, and it’s &lt;em&gt;really&lt;/em&gt; difficult in Android Chrome. what Chrome have done now supposedly makes it easier. If your web app is prepared to be installed (it’s got an icon, a manifest, and so forth), Chrome will offer your users the chance to install it when they use it. This is great. &lt;/p&gt;
&lt;p&gt;Well. It’s &lt;em&gt;sorta&lt;/em&gt; great.&lt;/p&gt;
&lt;p&gt;You see, the Chrome team don’t want to hassle users to install apps when they don’t want to. So the automatic “install this” prompt won’t appear until the second day you’re using that web app. This is good from the point of view of not hassling people, and not hassling people is important. But it is no improvement at all for people who want to deliver an app (which is what people have been conditioned to want) but do it on the web (which is the best way to do it, if you can). Before this release, I couldn’t say “install our app: StuartApp.com” (because doing so was too hard), and now I &lt;em&gt;still&lt;/em&gt; can’t say it, because you have to come back twice over two days. &lt;/p&gt;
&lt;p&gt;How popular would Clash of Clans be if you couldn’t install it until the second day you played it, I wonder?&lt;/p&gt;
&lt;p&gt;I get that there are constraints here. What the Chrome team are trying to avoid is having every site you visit say “install me as an app! Install me! &lt;span class="caps"&gt;DO&lt;/span&gt; &lt;span class="caps"&gt;IT&lt;/span&gt;! &lt;span class="caps"&gt;INSTAAAAAAAALL&lt;/span&gt;!” every time you go there, and they are wholly right with this concern. But from a practical perspective, “install my app” when I want to deliver it on the web is no better now than it was a month ago. Which is not forward progress. &lt;/p&gt;
&lt;p&gt;There are a couple of pernicious ideas here which should be nipped in the bud. The first is that I’ve seen it suggested that perhaps if you prove to be a &lt;em&gt;good&lt;/em&gt; app developer who doesn’t hassle people, maybe those restrictions will be relaxed. But who decides whether you’ve been bad or good? The Google Chrome team. I do not want them to be gatekeepers. I really don’t. The web is a better way at least partially &lt;em&gt;because&lt;/em&gt; we’re not praying that a big corporation will let us play in their sandbox. Bringing the iOS/Android approval model to the web defeats the point. If it’s possible to build a web app which provides a better-than-native install experience but only if Google permit it? Not useful. (And Apple are hardly going to implement that.)&lt;/p&gt;
&lt;p&gt;The second pernicious thing is people who believe that “bookmark to home screen” means “grant extra privileges”. Specifically, there’s a whole bunch of “aha! They added this to the home screen! That means they &lt;em&gt;trust&lt;/em&gt; it! So now we don’t have to do geolocation permission popups!” thinking. This is wrong thinking. Android, which demands all possible permissions up front, is the most eloquent demonstration imaginable of why this is a dreadful idea. And the sausage machine works in reverse here too: if you start with the idea that web apps on the home screen are privileged, then you will instinctively want to make adding to home screen be &lt;em&gt;hard&lt;/em&gt;, because it’s an implicit grant of privilege. And so someone who wants &lt;em&gt;discoverability&lt;/em&gt; and doesn’t care about free access to the address book gets screwed. &lt;/p&gt;
&lt;p&gt;Adding to home screen is not a declaration of trust. It’s a declaration of interest. I want this thing in my life more. I don’t want more of my life in it. &lt;/p&gt;
&lt;p&gt;Apple have this right: ask for permissions when you need them, not when the user first uses the app. &lt;/p&gt;
&lt;p&gt;So. It is, at least in theory, a good idea to change and incrementally improve the add-to-home-screen experience, and it’s great that the Chrome team are working on this. But I think that as an attempt to make the web install experience easier than the native one, which it really could be… this hasn’t made as much forward progress as we might hope. &lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-chrome-improves-add-to-home-screen-sorta-1"&gt;although Matteo Spinelli’s brilliant &lt;a href="http://cubiq.org/add-to-home-screen"&gt;add to home screen iOS Safari library&lt;/a&gt; makes it easier &lt;a href="#sf-chrome-improves-add-to-home-screen-sorta-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-chrome-improves-add-to-home-screen-sorta-2"&gt;other iOS browsers can’t do it at all; it’s a secret Safari-only feature &lt;a href="#sf-chrome-improves-add-to-home-screen-sorta-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 16 Mar 2015 22:38:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-03-16:2015/03/16/chrome-improves-add-to-home-screen-sorta/</guid></item><item><title>Bad Voltage Live 2015</title><link>http://www.kryogenix.org/days/2015/02/25/bad-voltage-live-2015/</link><description>&lt;p&gt;&lt;img src="http://kryogenix.org/images/IMG_5909.jpg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;This week we did the first &lt;a href="http://badvoltage.org"&gt;Bad Voltage&lt;/a&gt; live 
show, at the SCaLE conference in Los Angeles. It was the first time that
Bryan, Jono, Jeremy, and I had actually all been in the same place.
And it was a really good&amp;nbsp;laugh.&lt;/p&gt;
&lt;p&gt;We&amp;#8217;d been planning this for some time, as you can imagine. The show
normally has discussions about technical things, reviews, and amusing
things, and the live show had that in spades. It also had hundreds of
glowsticks, fifty rubber ducks, Bryan Lunduke dressed in a towel,
Jeremy giving us all insects to eat (which we all did, apart from Jono
who has still not eaten an insect because he is a little child),
a very very young child saying that Jono and I are bobbins,
a chap on a video calling Jono something &lt;em&gt;considerably&lt;/em&gt; more offensive
which we were forced to bleep out, a shower made from a tent,
shots of Fireball rum, some Creme Eggs, a trivia quiz run by Jorge
Castro, and competitions where audience members won a System76 Galago
UltraPro laptop, a PogoLinux server, and a BananaPi from Owncloud. And
lots of people liked&amp;nbsp;it. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.badvoltage.org/wp-content/uploads/2015/02/IMG_5851-960x600.jpg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;I rather enjoyed the discussions. We had two. The first was about the
idea of having a &amp;#8220;developer mode&amp;#8221; for Linux desktops. This was actually
a result of an idea &lt;a href="https://plus.google.com/u/0/+SamHewitt/posts/AiMipv62yLg"&gt;posted to G+ by Sam Hewitt&lt;/a&gt;
where he&amp;nbsp;said&lt;/p&gt;
&lt;blockquote&gt;How controversial would a &amp;#8220;developer mode&amp;#8221; be for a Linux 
desktop environment? For instance it would hide things like the
terminal, debug tools, etc. from an application overview/menu/launcher.&lt;/blockquote&gt;

&lt;p&gt;﻿&lt;/p&gt;
&lt;p&gt;Now, I happen to think that this is a good idea. Bryan (and the SCaLE audience
generally) do not. I have some reservations, and you can read about those
on the G+ post and watch the discussion in the show video, but it&amp;#8217;s a
really interesting topic; it shows up how people think about their desktop,
what assumptions we make about it, and how the mainstream think perhaps
differently from some existing Ubuntu&amp;nbsp;users.&lt;/p&gt;
&lt;p&gt;We also discussed the recently-released Ubuntu phone. My detailed review
is still being written, but this was a good chance to talk about the
phone and whether it&amp;#8217;s brilliant or&amp;nbsp;bollocks.&lt;/p&gt;
&lt;p&gt;So, watch the show! It&amp;#8217;s available on YouTube at &lt;a href="https://www.youtube.com/watch?v=k02EeD0rXYo"&gt;https://www.youtube.com/watch?v=k02EeD0rXYo&lt;/a&gt;
and you should watch it; you&amp;#8217;ll like it. Tell us about what you thought
of the show on our forum at &lt;a href="http://community.badvoltage.org"&gt;community.badvoltage.org&lt;/a&gt;.
And next year, come to SCaLE. It&amp;#8217;s a really great conference, and I for one
would like to say a really big thank you to Ilan and Gareth, who were
super-duper helpful and then were prepared to dress up in clown outfits
for the show. Nice one, chaps. Couldn&amp;#8217;t have done it without&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;d also like to personally thank Melissa Sealy, who is the most helpful
member of hotel staff I have ever met. We were putting up &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/EkSeRdNmiJU"&gt;posters that Jono designed&lt;/a&gt;
around the hotel and she showed up (she&amp;#8217;s some sort of all-powerful floor
manager or something) and we expected the Mother Of All Bollockings for
sticking the posters on the walls. And indeed, she said: don&amp;#8217;t stick
posters on my walls, you horrible reprobates. And then she said: but you
can stick them on boards and put the boards on easels, no problem. And then
found us eight easels. And then later on when we were sorting out the beer
for the live event she sorted everything out. &lt;em&gt;And&lt;/em&gt; she knew about the
secret after-hours party in one of the conference rooms and found it amusing.
Nice one, Melissa. Your bosses at the Hilton &lt;span class="caps"&gt;LAX&lt;/span&gt; ought to give you a pay 
rise or a big bunch of flowers or&amp;nbsp;something.&lt;/p&gt;
&lt;p&gt;Come to Bad Voltage Live when we do another one. And watch this one&amp;nbsp;here!&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/k02EeD0rXYo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 25 Feb 2015 21:39:00 +0000</pubDate><guid>tag:www.kryogenix.org/days,2015-02-25:2015/02/25/bad-voltage-live-2015/</guid></item></channel></rss>