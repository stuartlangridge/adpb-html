<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>as days pass by</title><link>//www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><atom:link href="//www.kryogenix.org/days/feed" rel="self"></atom:link><lastBuildDate>Mon, 30 Jan 2017 23:20:00 +0000</lastBuildDate><item><title>Niobium</title><link>//www.kryogenix.org/days/2017/01/30/niobium/</link><description>&lt;blockquote&gt;[41 is] the smallest integer whose reciprocal has a 5-digit repetend. That is a consequence of the fact that 41 is a factor of 99999. &amp;mdash; &lt;cite&gt;Wikipedia&lt;/cite&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&amp;#8217;t understand a lot of things, these days. I don&amp;#8217;t understand what a 5-digit repetend is, or why 41 being a factor of 99999 has to do with anything. I don&amp;#8217;t understand &lt;a href="http://www.kryogenix.org/days/2016/01/31/what-i-did-on-my-holidays/"&gt;how&lt;/a&gt; &lt;a href="http://www.kryogenix.org/days/2015/01/30/temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit/"&gt;much&lt;/a&gt; &lt;a href="http://www.kryogenix.org/days/2014/01/30/but-these-posts-go-to-eleven/"&gt;all&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2013/01/30/thirty-seven-for-gods-sake-how-did-that-happen/"&gt;this&lt;/a&gt;-&lt;a href="http://kryogenix.org/days/2012/01/30/a-year-goes-past/"&gt;has&lt;/a&gt;-&lt;a href="http://kryogenix.org/days/2011/01/31/brave-new-age/"&gt;changed&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2009/01/30/mini-hippo-returns/"&gt;in&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2008/01/30/another-year-passes/"&gt;the&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2007/01/30/my-week/"&gt;last&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2006/01/30/turning-thirty/"&gt;thirteen&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2005/01/30/staring/"&gt;years&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2004/01/31/birthdays/"&gt;of&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2003/01/30/revolution/"&gt;posts&lt;/a&gt;. I don&amp;#8217;t understand when building web stuff got hard. I don&amp;#8217;t understand why I can&amp;#8217;t find anyone who sells wall lights that look nice without charging a hundred notes for each one, which is a bit steep when you need six. I don&amp;#8217;t understand why I can&amp;#8217;t get thinner and still eat as many sandwiches as I want. I don&amp;#8217;t understand an awful lot of why the world suddenly became a terrible, frightening, mean-spirited, mocking, vitriolic place. And most of what I do understand about that, I&amp;nbsp;hate.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.kryogenix.org/days/2017/01/26/we-all-sorta-thought/"&gt;We all sorta thought&lt;/a&gt; that we were moving forward; there was less hatred of the Other, fewer knives out, not as much fear and spite as there used to be. And it turns out that it wasn&amp;#8217;t gone; it was just suppressed, building up and up underneath the volcano cap until the bad guys realised that there&amp;#8217;s nothing actually &lt;em&gt;stopping&lt;/em&gt; them doing terrible things and there&amp;#8217;s nothing anyone can do about it. So the Tories moved from daring to talk about shutting down the &lt;span class="caps"&gt;NHS&lt;/span&gt; to actually doing it and nobody said anything. Or, more accurately, a bunch of people said things and it didn&amp;#8217;t make any difference. Trump starts restricting immigration and targeting Muslims directly and puts a Nazi adviser on the National Security Council and nobody said anything. Or, more accurately, a bunch of people said things and it didn&amp;#8217;t make any difference. I don&amp;#8217;t want to give in to hatred &amp;#8212; it leads to the Dark Side &amp;#8212; and so I don&amp;#8217;t want to hate them for doing this. But I do hate that I have to fight to avoid it. I hate that I feel so helpless. I hate that the only way I know to fight back is to actually fight &amp;#8212; to become &lt;em&gt;them&lt;/em&gt;. I hate that they turn everyone into malign, terrible copies of themselves. I hate that they don&amp;#8217;t understand. I hate that I don&amp;#8217;t understand. I hate that I just hate all the time&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m forty-one. Apparently, according to Wikipedia, the &lt;span class="caps"&gt;US&lt;/span&gt; Navy Fleet Ballistic Missile nuclear submarines from the George Washington, Ethan Allen, Lafayette, James Madison, and Benjamin Franklin classes were nicknamed &amp;#8220;&lt;a href="https://en.wikipedia.org/wiki/41_for_Freedom"&gt;41 for Freedom&lt;/a&gt;&amp;#8220;. 41 for freedom. Maybe that&amp;#8217;s not a bad motto for me, being 41. Do more for freedom. My freedom, my family&amp;#8217;s freedom, my friends&amp;#8217; freedom, my city&amp;#8217;s freedom, people I&amp;#8217;ve never met and never will&amp;#8217;s freedom. &lt;a href="http://www.kryogenix.org/days/2016/11/19/none-of-us-are-free/"&gt;None of us are free if one of us is chained&lt;/a&gt;, and if you don’t say it’s wrong then that says it&amp;nbsp;right.&lt;/p&gt;
&lt;p&gt;Two photos from&amp;nbsp;today.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.kryogenix.org/images/love-you-lots-daddy.jpg" alt="Niamh and a message board saying that she loves me lots" style="max-width: 100%"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.kryogenix.org/images/trump-protest.jpg" alt="Anti-Trump protest in Victoria Square, 30th January 2017" style="max-width: 100%"&gt;&lt;/p&gt;
&lt;p&gt;One is of Niamh, and her present to me for my birthday: a light box like the ones you get outside cinemas and churches and fast food places and we can put messages for one another on it. I&amp;#8217;m hugely pleased with it. The other is of &lt;a href="http://www.birminghammail.co.uk/news/midlands-news/what-happened-donald-trump-protest-12530307"&gt;today&amp;#8217;s anti-Trump demo in Victoria Square&lt;/a&gt;, at which Reverend David Butterworth, of the Methodist Church, said: &amp;#8220;Whatever we can do to make this a more peaceful city and a more inclusive city, and to stand up and be counted, we must and should do it together. The only way that Donald Trump will win is if the good people of Birmingham, and of other cities that we’re twinned with like Chicago, stay silent.&amp;#8221; People standing up, and a demonstration of what they&amp;#8217;re standing up for. Not a bad way to start making me being 41 for freedom,&amp;nbsp;perhaps.&lt;/p&gt;
&lt;p&gt;Happy birthday to me. And for those of you less lucky than me today: I hope we can&amp;nbsp;help.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 30 Jan 2017 23:20:00 +0000</pubDate><guid>tag://www.kryogenix.org/days,2017-01-30:2017/01/30/niobium/</guid></item><item><title>We all sorta thought</title><link>//www.kryogenix.org/days/2017/01/26/we-all-sorta-thought/</link><description>&lt;p&gt;A thing I wrote today, about Trump and Brexit and &amp;#8220;post-truth&amp;#8221; and &amp;#8220;alternative facts&amp;#8221; and helplessness, because I&amp;#8217;ve had this conversation separately three times&amp;nbsp;today.&lt;/p&gt;
&lt;blockquote&gt;this is the thing. We all sorta thought (and by &amp;#8220;we&amp;#8221; I mean everyone from us here right back to, I dunno, Newton and Boyle) that if we provided inductive or deductive proof of a thing, that everyone else would say &amp;#8220;oh yeah, I&amp;#8217;m convinced now!&amp;#8221; and that&amp;#8217;d be it. But people who don&amp;#8217;t want that to happen have learned that attacking the evidence doesn&amp;#8217;t work &amp;#8212; it took them a few hundred years to learn that, but they did &amp;#8212; but dismissing the whole idea as illegitimate does work. And we don&amp;#8217;t know how to argue against that. I say two and two are four; you disagree; I say &amp;#8220;no look here&amp;#8217;s the proof&amp;#8221;; you say &amp;#8220;your methods of proof are wrong and biased&amp;#8221;; and then I&amp;#8217;m all, er, I don&amp;#8217;t know what to say now, you were meant to be convinced by the proof.&lt;br&gt;&lt;br&gt;

more importantly: a third party, looking at that conversation, goes away thinking &amp;#8220;well, is 2+2 equal to 4? Don&amp;#8217;t know; there seem to be two sides to that argument&amp;#8221;, or worse, &amp;#8220;man, I just don&amp;#8217;t care what 2+2 is because every time I try to find out there&amp;#8217;s just loads of shouting, so I&amp;#8217;ll stop asking&amp;#8221;.&lt;br&gt;&lt;br&gt;

and thus, modern politics. Gaslighting and obfuscation, designed to make people believe that facts are disputable and that engagement is confusing and annoying.&lt;br&gt;&lt;br&gt;

(Of course, part of the problem here is that our side have a habit of declaring things to be an actual fact when they&amp;#8217;re really &amp;#8220;what we want to believe&amp;#8221;, and once one&amp;#8217;s cried wolf that way a few times, one&amp;#8217;s credibility is gone and it&amp;#8217;s really hard to get back. It&amp;#8217;s not all the other side&amp;#8217;s fault.)&lt;/blockquote&gt;

&lt;p&gt;Normally I wouldn&amp;#8217;t re-post such a thing, but of course this conversation happened on Slack, which means that six months from now I won&amp;#8217;t be able to link to this because it&amp;#8217;ll be over 10,000 messages ago and Slack will be holding it to ransom until we pay money, and five years from now I won&amp;#8217;t be able to link to it because Slack will have gone bust or have been sold to someone and shut&amp;nbsp;down.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 26 Jan 2017 00:08:00 +0000</pubDate><guid>tag://www.kryogenix.org/days,2017-01-26:2017/01/26/we-all-sorta-thought/</guid></item><item><title>None Of Us Are Free</title><link>//www.kryogenix.org/days/2016/11/19/none-of-us-are-free/</link><description>&lt;iframe width="560" height="315" style="max-width: 100%" src="https://www.youtube.com/embed/eFkmRp_G2uo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;em&gt;
Well you better listen my sisters and brothers,&lt;br&gt;
&amp;#8216;Cause if you do you can hear&lt;br&gt;
There are voices still calling across the years.&lt;br&gt;
And they&amp;#8217;re all crying across the ocean,&lt;br&gt;
And they&amp;#8217;re cryin&amp;#8217; across the land,&lt;br&gt;
And they will till we all come to understand.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;None of us are free&lt;br&gt;
None of us are free&lt;br&gt;
None of us are free, if one of us is chained&lt;br&gt;
None of us are free&lt;br&gt;&lt;/p&gt;
&lt;p&gt;And there are people still in darkness,&lt;br&gt;
And they just can&amp;#8217;t see the light.&lt;br&gt;
&lt;strong&gt;If you don&amp;#8217;t say it&amp;#8217;s wrong then that says it right.&lt;/strong&gt;&lt;br&gt;
We got try to feel for each other, let our brothers know that we care.&lt;br&gt;
Got to get the message, send it out loud and clear&lt;br&gt;&lt;/p&gt;
&lt;p&gt;None of us are free&lt;br&gt;
None of us are free&lt;br&gt;
None of us are free, if one of us is chained&lt;br&gt;
None of us are free&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Now I swear your salvation isn&amp;#8217;t too hard too find,&lt;br&gt;
None of us can find it on our own&lt;br&gt;
&lt;strong&gt;We&amp;#8217;ve got to join together in spirit, heart and mind&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;So that every soul who&amp;#8217;s suffering will know that they&amp;#8217;re not alone&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;None of us are free&lt;br&gt;
None of us are free&lt;br&gt;
None of us are free, if one of us is chained&lt;br&gt;
None of us are free&lt;br&gt;&lt;/p&gt;
&lt;p&gt;If you just look around you,&lt;br&gt;
You&amp;#8217;re gonna see what I say.&lt;br&gt;
&amp;#8216;Cause the world is getting smaller each passing day&lt;br&gt;
Now it&amp;#8217;s time to start making changes,&lt;br&gt;
And it&amp;#8217;s time for us all to realize,&lt;br&gt;
That the truth is shining real bright right before our eyes&lt;br&gt;&lt;/p&gt;
&lt;p&gt;None of us are free&lt;br&gt;
None of us are free&lt;br&gt;
&lt;strong&gt;None of us are free, if one of us is chained&lt;/strong&gt;&lt;br&gt;
None of us are free.&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Application of this to the year 2016, how you should deal with everything that&amp;#8217;s happened this year, and how you should stand with your friends and the people around you&amp;#8230; is left as an exercise for the&amp;nbsp;reader.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sat, 19 Nov 2016 03:28:00 +0000</pubDate><guid>tag://www.kryogenix.org/days,2016-11-19:2016/11/19/none-of-us-are-free/</guid></item><item><title>OnePlus are great at customer service</title><link>//www.kryogenix.org/days/2016/11/04/oneplus-are-great-at-customer-service/</link><description>&lt;p&gt;Around a year ago, I bought a &lt;a href="https://oneplus.net/x"&gt;OnePlus X&lt;/a&gt; phone. I was given a &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/MWmnte6LsiD?sfc=true"&gt;whole bunch of warnings&lt;/a&gt; by a whole bunch of people that their customer support was terrible and if the phone broke, I stood no chance of getting it&amp;nbsp;repaired.&lt;/p&gt;
&lt;p&gt;Well, it broke. Specifically, it stopped charging. I had to wiggle the connector, charge it by holding the lead at different angles, the works. That was really annoying. So I thought: they should fix this. Here&amp;#8217;s what&amp;nbsp;happened.&lt;/p&gt;
&lt;p&gt;Tuesday evening, at eleven pm, I used the &amp;#8220;Live Chat&amp;#8221; thing on OnePlus&amp;#8217;s website, and was put in touch with a service engineer named &amp;#8220;Irish&amp;#8221;. I explained the problem. Irish said: &lt;span class="caps"&gt;OK&lt;/span&gt;, we&amp;#8217;ll fix that; if it turns out you broke it you&amp;#8217;ll be charged, if not we&amp;#8217;ll fix it. A pleasant conversation, in which he talked me through setting up an &lt;span class="caps"&gt;RMA&lt;/span&gt; request on their support site. Shortly thereafter, I received by email a &lt;span class="caps"&gt;DHL&lt;/span&gt; dispatch note, which I printed out and glued on the outside of a jiffy bag with my phone in it. &lt;span class="caps"&gt;DHL&lt;/span&gt; rang me up the next morning to arrange pickup; I arranged that for this Monday. A chap arrived and picked up the phone. Today, four days later, I&amp;#8217;ve just got the phone back, delivered back to me by &lt;span class="caps"&gt;DHL&lt;/span&gt; again, and it&amp;nbsp;works.&lt;/p&gt;
&lt;p&gt;It is hard to imagine how customer service could be any better than this. My thing broke, they picked it up from my flat, repaired it, and delivered it back to my flat at their expense, with no complaints, in four days. This is excellent. Thank you OnePlus, thank you Regenersis the OnePlus service centre, thank you Irish. Maybe I&amp;#8217;m unusual; maybe OnePlus have upped their game in the last year; maybe this is just luck. But this is a sterling example of how interaction with a company &lt;em&gt;should&lt;/em&gt; go. OnePlus: exemplars of customer service. I am&amp;nbsp;impressed.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 04 Nov 2016 11:06:00 +0000</pubDate><guid>tag://www.kryogenix.org/days,2016-11-04:2016/11/04/oneplus-are-great-at-customer-service/</guid></item><item><title>My nominations for the Silicon Canal Tech Awards 2016</title><link>//www.kryogenix.org/days/2016/10/16/my-nominations-for-the-silicon-canal-tech-awards-2016/</link><description>&lt;p&gt;The &lt;a href="http://www.silicon-canal-tech-awards.com/categories"&gt;Silicon Canal tech awards&lt;/a&gt; are coming up here in Birmingham, so I thought I’d write down who I’ve nominated and why! Along with a few categories where I had difficulty deciding, in which an honourable mention or two may be awarded, although such things do not get submitted to the actual award ceremony :-)&lt;/p&gt;
&lt;h1&gt;Best Tech Start-Up&lt;/h1&gt;
&lt;h2&gt;&lt;a href="https://birmingham.impacthub.net/"&gt;ImpactHub Birmingham&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As ImpactHub say, “We want to empower a collective movement to bring about change in our city, embracing a diverse range of people and organisations with a whole host of experiences and skills.” ImpactHub is a place enabling the tech scene in Birmingham, which is the most important part of it all; that’s what makes Birmingham great and more than just some half-baked clone of London or San Francisco. Bringing tech companies together with the rest of the city also hugely increases the number of connections made and opportunities created right here in Birmingham itself, and helps tech entrepreneurs meet other communities and unify everyone’s goals.&lt;/p&gt;
&lt;h1&gt;Most Influential Female in Technology&lt;/h1&gt;
&lt;h2&gt;&lt;a href="http://jessica.tech/"&gt;Jessica Rose&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Jess tirelessly advocates technology and Birmingham, both inside and outside the city. She’s great at connecting dots, showing people who they can work with to get things done, and advising on how best to grow a community or a company into areas you might not have otherwise pursued. And she’s helpful and engaging and good to work with, and knows basically everyone. That’s influence, and she’s using it to better the Brum tech scene as a whole, and that deserves reward.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Runner up:&lt;/strong&gt; &lt;a href="https://twitter.com/immykaur"&gt;Immy Kaur&lt;/a&gt; for setting up ImpactHub :-)&lt;/p&gt;
&lt;h1&gt;Small Tech Company of the Year&lt;/h1&gt;
&lt;h2&gt;&lt;a href="http://technicalteamsolutions.co.uk/"&gt;Technical Team Solutions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;TTS&lt;/span&gt; are heavily invested in the tech life of Birmingham itself. They sponsor events, they’ve partnered with Silicon Canal as exclusive recruitment agents, and most importantly they’re behind Fusion, a regular and vibrant quarterly tech conference drawn from the city and supporting both local tech and local street food vendors. This isn’t like some other conferences which basically are in Birmingham by coincidence; Fusion is intimately involved with the Brum tech scene, as are &lt;span class="caps"&gt;TTS&lt;/span&gt; themselves, and that should be massively encouraged.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Runner up:&lt;/strong&gt; &lt;a href="http://www.jump24.co.uk/"&gt;Jump 24&lt;/a&gt;, web design and development studio getting good stuff done and run by a very smart and very short Welshman&lt;sup id="sf-my-nominations-for-the-silicon-canal-tech-awards-2016-1-back"&gt;&lt;a title="sorry, Dan; Fusion just tips it for TTS, but maybe you should run a conference as well to lobby for the vote :)" class="simple-footnote" href="#sf-my-nominations-for-the-silicon-canal-tech-awards-2016-1"&gt;1&lt;/a&gt;&lt;/sup&gt; :-)&lt;/p&gt;
&lt;h1&gt;Large Tech Company of the Year (revenue over £10 million)&lt;/h1&gt;
&lt;h2&gt;&lt;a href="https://talis.com/"&gt;Talis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Talis are strong supporters of the Birmingham tech scene, a successful large scaleup here in the city, and willing to work openly with others in pursuit of those goals. They regularly sponsor tech events with money or by providing space to host meetups, hold hack days and write about them afterwards, donate time and money to helping others in the city including events for entrepreneurs as well as developers, and run their own events (such as Codelicious) to add more to the growing vibrancy of Brum. It’s great to see a company of this size be cognisant of the city and their life within it, and this certainly deserves to be recognised.&lt;/p&gt;
&lt;h1&gt;Most Influential Male in Technology&lt;/h1&gt;
&lt;h2&gt;&lt;a href="https://twitter.com/roymeredith"&gt;Roy Meredith&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A jolly good way to make connections in the city is through Roy, who is connected to all sorts of people via being responsible for the tech sectors in Marketing Birmingham. I’m not sure the government marketing agency are always perfect, but I am sure that Roy is a person to know. He’s an engaging public speaker, he’s got a background in industry (with a list of &lt;span class="caps"&gt;AAA&lt;/span&gt; games he’s worked on that’d blow your mind), and he’s approachable and smart and everyone listens to him. If that’s not influence, I don’t know what is.&lt;/p&gt;
&lt;h1&gt;Outstanding Technology Individual of the Year&lt;/h1&gt;
&lt;h2&gt;Mary Matthews from &lt;a href="http://memricaprompt.com/"&gt;Memrica&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mary describes herself as “passionate about using technology to make a difference to people’s lives” and, unlike quite a few people who might say that, I think she actually means it. It was marvellous to see Memrica get recognised as part of the UberPITCH consultancy earlier this year, and her trip out to meet Travis Kalanick not only will have helped her continue her long history of doing good tech things but also helped elevate Birmingham’s profile as a place for internationally recognised startups. That’s pretty outstanding, in my opinion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Runner up:&lt;/strong&gt; &lt;a href="https://twitter.com/jesslynrose"&gt;Jess Rose&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Others&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Best Angel or Seed Investor of the Year:&lt;/strong&gt; no nomination here because I have no idea! I know a couple, but haven’t worked with them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Graduate Developer of the Year:&lt;/strong&gt; no nomination here because I don’t know enough graduates. I’d have nominated &lt;a href="https://twitter.com/jackweirdy"&gt;@jackweirdy&lt;/a&gt; if he hadn’t left us :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Developer of the Year:&lt;/strong&gt; no nomination here because, well, too contentious. I don’t know who I’d pick as the &lt;em&gt;best&lt;/em&gt;, and I do know that everyone I don’t pick will never buy me a pint again, so I’m not sure who to say here. Maybe I should have just picked myself :-)&lt;/p&gt;
&lt;h1&gt;Now, your turn&lt;/h1&gt;
&lt;p&gt;Maybe you agree, maybe you don’t. That’s what I think. You will notice that I primarily care about the tech life of the city; if you do a bunch of good stuff here in Birmingham and you’re proud of that, I like what you do. If you do interesting things but never talk about them here in the city, I’m less interested in your things. Perhaps you have different criteria: you should now go and say what &lt;em&gt;you&lt;/em&gt; think. &lt;a href="http://www.silicon-canal-tech-awards.com/categories"&gt;Go and add your nominations&lt;/a&gt;, Birmingham people; let’s get everyone’s voices heard.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-my-nominations-for-the-silicon-canal-tech-awards-2016-1"&gt;sorry, Dan; Fusion just tips it for &lt;span class="caps"&gt;TTS&lt;/span&gt;, but maybe you should run a conference as well to lobby for the vote :) &lt;a class="simple-footnote-back" href="#sf-my-nominations-for-the-silicon-canal-tech-awards-2016-1-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 16 Oct 2016 19:02:00 +0100</pubDate><guid>tag://www.kryogenix.org/days,2016-10-16:2016/10/16/my-nominations-for-the-silicon-canal-tech-awards-2016/</guid></item><item><title>Feeling old, depending on how old you are</title><link>//www.kryogenix.org/days/2016/08/11/feeling-old/</link><description>&lt;p&gt;I recently discovered &lt;a href="http://mewo2.com/"&gt;Martin O’Leary&lt;/a&gt;‘s &lt;a href="https://twitter.com/feelingoldbot"&gt;Feeling Old twitter bot&lt;/a&gt;,&lt;sup id="sf-feeling-old-1-back"&gt;&lt;a title="because I was reading his excellent work on how to create accurate looking fantasy maps" class="simple-footnote" href="#sf-feeling-old-1"&gt;1&lt;/a&gt;&lt;/sup&gt; which has a big list of “things that have happened” and then constructs comparisons such as “&lt;span class="caps"&gt;Y2K&lt;/span&gt; was as close to the release of Return of the Jedi as to now”, to make you do that weird “wow, I am old!” double-take. As Martin says, it occasionally throws out a gem. But, looking through the list, I think that they’re probably all gems, but whether they hit home for you depends on how old you are.&lt;/p&gt;
&lt;p&gt;Basically, the form of the sentence is: &lt;code&gt;thing&lt;/code&gt; is closer to &lt;code&gt;old thing&lt;/code&gt; than to today. Ideally, you want &lt;code&gt;thing&lt;/code&gt; to be something that &lt;em&gt;you&lt;/em&gt; think is recent, and &lt;code&gt;old thing&lt;/code&gt; to be something that you think is ancient, and therefore you’ll be surprised that &lt;code&gt;thing&lt;/code&gt; really isn’t actually recent and that’s because you’re a decrepit old codger.&lt;/p&gt;
&lt;p&gt;My theory is this: &lt;code&gt;old thing&lt;/code&gt; ought to be before you were born. By definition, anything that happens before you were born feels like a long time ago to you. And the gap between &lt;code&gt;thing&lt;/code&gt; and &lt;code&gt;old thing&lt;/code&gt; is the same as the gap between &lt;code&gt;thing&lt;/code&gt; and &lt;code&gt;now&lt;/code&gt; (because that’s what constructs the sentences). So &lt;code&gt;thing&lt;/code&gt; has to happen in the first half of your life. Stuff that happens while you’re a &lt;em&gt;young&lt;/em&gt; child also feels like a long time ago — you were a kid when it happened! — so we want something that happened once you started to feel like &lt;em&gt;you&lt;/em&gt; in your head. Say, around 12 or so years of age. Thus, we take a big list of pop culture things, find an event which happened between the ages of 12 and half your current age, find a corresponding old event, display them to you, and have you be surprised and displeased. It’s a living.&lt;/p&gt;
&lt;p&gt;Give it a try.&lt;/p&gt;
&lt;div style="border: 4px solid rgba(50,50,50,0.3); padding: 1em"&gt;
&lt;h2&gt;I was born&lt;/h2&gt;
&lt;div id="oldness-buttons"&gt;
&lt;button data-year="1962"&gt;before 1965&lt;/button&gt;
&lt;button data-year="1967"&gt;in the late 60s&lt;/button&gt;
&lt;button data-year="1972"&gt;in the early 70s&lt;/button&gt;
&lt;button data-year="1977"&gt;in the late 70s&lt;/button&gt;
&lt;button data-year="1982"&gt;in the early 80s&lt;/button&gt;
&lt;button data-year="1987"&gt;in the late 80s&lt;/button&gt;
&lt;button data-year="1992"&gt;in the early 90s&lt;/button&gt;
&lt;button data-year="1997"&gt;in the late 90s&lt;/button&gt;
&lt;button data-year="2003"&gt;in the 21st century&lt;/button&gt;
&lt;/div&gt;
&lt;p style="display: none; font-size: 130%" id="oldness"&gt;&lt;span id="oldness-thing"&gt;&lt;/span&gt; happened closer to &lt;span id="oldness-old-thing"&gt;&lt;/span&gt; than to today.&lt;/p&gt;
&lt;/div&gt;

&lt;script src="https://kryogenix.org/random/oldness.js"&gt;&lt;/script&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-feeling-old-1"&gt;because I was reading his &lt;em&gt;excellent&lt;/em&gt; work on &lt;a href="http://mewo2.com/notes/terrain/"&gt;how to create accurate looking fantasy maps&lt;/a&gt; &lt;a class="simple-footnote-back" href="#sf-feeling-old-1-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 11 Aug 2016 14:14:00 +0100</pubDate><guid>tag://www.kryogenix.org/days,2016-08-11:2016/08/11/feeling-old/</guid></item><item><title>Making a better Ubuntu app scope (not very successfully)</title><link>//www.kryogenix.org/days/2016/07/05/making-a-better-ubuntu-app-scope-not-very-successfully/</link><description>&lt;p&gt;I was rather excited to discover the idea that one could change the icons used on an Android phone&amp;#8217;s home screen. (As Sam Hewitt &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/A1XypgwkMyU"&gt;put it&lt;/a&gt;, I have &amp;#8220;become a themer&amp;#8221;.) I didn&amp;#8217;t know this was doable, and I went from not knowing this to having it done in the space of about half an hour. It is rare that something just works this nicely; I&amp;#8217;ve been living my life a long time and I know how it works. So far, the other shoe hasn&amp;#8217;t dropped, which is&amp;nbsp;encouraging.&lt;/p&gt;
&lt;h3&gt;At first, there was&amp;nbsp;Android&lt;/h3&gt;

&lt;p&gt;Anyway, my Android home screen now looks like&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.kryogenix.org/random/android-minimal.jpg"&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m pretty pleased with that. (The lock screen is even more minimal and pretty, but we&amp;#8217;re not talking about lock screens today: see &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/A1XypgwkMyU"&gt;the G+ post&lt;/a&gt; for what that looks&amp;nbsp;like.)&lt;/p&gt;
&lt;p&gt;There is a &lt;span class="caps"&gt;UI&lt;/span&gt; concern here &amp;#8212; in general, I don&amp;#8217;t like using icons without text to indicate a thing, because it means you&amp;#8217;re spending cognitive time remembering &lt;em&gt;what an icon stands for&lt;/em&gt; rather than &lt;em&gt;what it&amp;#8217;s similar to&lt;/em&gt;. That is: icons are quite good for, say, files where you want to see that all of these are &lt;code&gt;.txt&lt;/code&gt; files, but they&amp;#8217;re not good for actions where you have to remember what a &amp;#8220;heart&amp;#8221; or some obscure little symbol means. I&amp;#8217;ve lost count of the number of times when I&amp;#8217;ve used a new app which only has icons and not text labels on its buttons and I have &lt;em&gt;no idea&lt;/em&gt; what half the icons &lt;em&gt;do&lt;/em&gt;; a few things are enshrined by everyone using them (a Share icon, a Save icon, an Open icon, etc) but most of the time using an icon alone to indicate an action or an app is a bad idea. However, this is an exception to that rule. I am very familiar with my home screen; the set of apps on it do not change very much at all. So there&amp;#8217;s minimal cognitive load in remembering that &lt;em&gt;this&lt;/em&gt; icon is for Twitter and &lt;em&gt;that&lt;/em&gt; one is for Moon Reader. I do a reasonable proportion of that by spatial arrangement; the icons don&amp;#8217;t move around, and I am familiar and trained in where they are. You wouldn&amp;#8217;t want to ship a phone which looks like this to a new user, but it&amp;#8217;s a perfectly good experience for me, with my own personal home screen that I know&amp;nbsp;well.&lt;/p&gt;
&lt;p&gt;How is this beautiful miracle achieved? Well. The default Android home screen doesn&amp;#8217;t let you change the icons used for apps. So when I discovered the (free!) &lt;a href="https://play.google.com/store/apps/details?id=com.natewren.linesfree&amp;amp;hl=en"&gt;Lines icon set&lt;/a&gt; in the Play store my immediate thought was, cor, how does that work? And the answer is: use a different home screen app (in Android parlance, they&amp;#8217;re called &lt;em&gt;launchers&lt;/em&gt;). So I installed &lt;a href="https://play.google.com/store/apps/details?id=com.teslacoilsw.launcher&amp;amp;hl=en"&gt;Nova Launcher&lt;/a&gt;. (This also had the rather nice benefit of allowing me to remove the hated Google search bar; I never, ever, ever used that because it shows results in some Google app rather than the web, meaning that you can&amp;#8217;t long-press on images to save them or on links to open in a new tab. Pack it in, Google. Open in the browser. It&amp;#8217;s good at that.) A little bit of setup with Nova Launcher and Lines and, lo, I had the nice minimal icons and pretty dark wallpaper (which came with Lines). Nova Launcher doesn&amp;#8217;t let you resize the icons, and by default they&amp;#8217;re a bit small, but you can buy the &lt;a href="https://play.google.com/store/apps/details?id=com.teslacoilsw.launcher.prime&amp;amp;hl=en"&gt;Nova Launcher Prime&lt;/a&gt; add-on to enable that, and it was fifty pence so that&amp;#8217;s a no-brainer. The Lines icon set is both worryingly comprehensive (they claim to have over two thousand icons!) and equally worryingly incomplete (with a million apps in the Play store they&amp;#8217;re never going to carry them all, but not having Telegram? Seriously?) and so I added two more similar-looking icon sets (&lt;a href="https://play.google.com/store/apps/details?id=com.ryanmkelly.me.min&amp;amp;hl=en"&gt;Min&lt;/a&gt; and &lt;a href="https://play.google.com/store/apps/details?id=jimonen.glyphsyiconpack&amp;amp;hl=en"&gt;Glyphsy&lt;/a&gt;) to give me a wider choice. A bunch of tweaking of icon sizes, icon choices, margin sizes, and so on later and I have the screen above, and every time I look at it I like it a little more. Ultra-happy with&amp;nbsp;it.&lt;/p&gt;
&lt;h3&gt;And then there was&amp;nbsp;Ubuntu&lt;/h3&gt;

&lt;p&gt;I thought to myself, hang on, it ought to be possible to do the same thing with Ubuntu phone, right? One can write a custom scope which looks like that and shows all one&amp;#8217;s apps, and add it to the Dash as the only scope, and then you&amp;#8217;ve got a cool-looking app-launcher home screen. Sweet. That&amp;#8217;s what I want. And it&amp;#8217;ll give me an excuse to play with all the new scopes stuff and learn something about&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Not so fast,&amp;nbsp;grasshopper.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s my basic idea. The existing apps scope is annoyingly slow; I&amp;#8217;m sure it does a whole bunch of stuff and that&amp;#8217;s why, but it&amp;#8217;s slow to load, slow to scroll, and slow to react to things changing. This is obviously being worked on by the Canonical team and I&amp;#8217;m sure it&amp;#8217;ll get better, but currently it&amp;#8217;s pretty frustrating. So I thought: what I&amp;#8217;ll do is this. I&amp;#8217;ll add a &lt;a href="http://click.readthedocs.io/en/latest/hooks.html"&gt;click hook&lt;/a&gt; so when apps get installed and removed I can update a sqlite database, and then my scope will just hit that database rather than inspecting the filesystem and loading loads of files. That database can also hold the locations of icons in my custom &amp;#8220;wireframe&amp;#8221; icon theme, and it&amp;#8217;ll use those icons for the apps. So it&amp;#8217;ll be fast and have custom icons, and tapping an icon will launch that app via &lt;a href="https://developer.ubuntu.com/en/phone/platform/guides/url-dispatcher-guide/"&gt;an &lt;code&gt;application:///&lt;/code&gt; url&lt;/a&gt;. Job&amp;#8217;s a good&amp;#8217;un, etc. Off down the&amp;nbsp;pub.&lt;/p&gt;
&lt;p&gt;It was not as easy as I had&amp;nbsp;hoped.&lt;/p&gt;
&lt;p&gt;There are a few things that made the task difficult and which are basically my fault and for which no blame attaches to the Ubuntu team. Firstly, I&amp;#8217;m still running Ubuntu 14.04. This is because it&amp;#8217;s an long-term-support release, and LTSes don&amp;#8217;t offer to upgrade to the next &lt;span class="caps"&gt;LTS&lt;/span&gt; release (16.04, which came out in April) until the first point release (16.04.1, which isn&amp;#8217;t out at time of writing). This is so the new &lt;span class="caps"&gt;LTS&lt;/span&gt; gets a bit of testing before it hits all the people who desire stability, and is a good idea, and I am entirely happy with it. Secondly, I wanted to write the scope in JavaScript; one can write Unity 8 scopes in C++ (which I can&amp;#8217;t do), Go (which I can&amp;#8217;t do), and &lt;span class="caps"&gt;JS&lt;/span&gt; via node (which I am completely comfortable with). But the &lt;span class="caps"&gt;JS&lt;/span&gt; scopes stuff is new, and so doesn&amp;#8217;t exist in 14.04. This meant that I had to do a great deal of faffing around in lxc containers to get a working version of a &lt;span class="caps"&gt;JS&lt;/span&gt; scope. However, that faffery did actually work out in the end, and it&amp;#8217;s hard to see the need for it as due to anything more than my own desire to not upgrade away from the latest stable release &lt;span class="caps"&gt;LTS&lt;/span&gt;. So, no blame there, as mentioned. After a bit of poking, I managed to get a JavaScript scope, and some discussions with Brian Douglass and one tiny bash deploy script later (which basically does &lt;code&gt;click build .&lt;/code&gt; and then &lt;code&gt;adb push&lt;/code&gt;es the &lt;code&gt;.click&lt;/code&gt; file to my Bq E4.5 and &lt;code&gt;pkcon install-local&lt;/code&gt;s it), I had a scope that I&amp;#8217;d written running on the phone. Hooray! Now to make that scope actually do and look as I want it&amp;nbsp;to.&lt;/p&gt;
&lt;p&gt;This is where we run into problems. The JavaScript scopes stuff is, admittedly, new, but it had two major issues that caused me a great deal of grief. The first is that making async &lt;code&gt;fs.readdir&lt;/code&gt; calls early in a scope &lt;code&gt;search()&lt;/code&gt; handler were making my scope crash, and sometimes crashing all of Unity. (&lt;a href="https://bugs.launchpad.net/unity-js-scopes/+bug/1598967"&gt;&lt;span class="caps"&gt;LP&lt;/span&gt;#1598967&lt;/a&gt;) Oops. That took some time debugging before I eventually went for the synchronous &lt;code&gt;fs.readdirSync&lt;/code&gt;, cursing all the while. Worse, though, is the &lt;code&gt;activate&lt;/code&gt; problem. You see, a scope, by default, when a thing is tapped shows you the &lt;em&gt;preview page&lt;/em&gt; for that thing. However, you can change things so that a tap on a thing does something directly; in this case, of course, I wanted a tap on one of my app icons to launch that app via the &lt;span class="caps"&gt;URL&lt;/span&gt; dispatcher. To do that, you call &lt;code&gt;set_intercept_activation()&lt;/code&gt; on a &lt;a href="https://developer.ubuntu.com/api/scopes/js/sdk-15.04.4/ScopeJS.CategorisedResult/"&gt;scope icon&lt;/a&gt; when you create it, and then Unity will call your scope&amp;#8217;s &lt;code&gt;runtime_config.activate()&lt;/code&gt; method with the details when that icon is tapped; you can then handle it in whatever way you want, or return an &lt;code&gt;ActivationNotHandled&lt;/code&gt; type of &lt;code&gt;ActivationResponse&lt;/code&gt; to let Unity handle it for you, which in this case means &amp;#8220;open the app with the url you provided&amp;#8221;. (You can see a good example of how this works in Go in &lt;a href="https://github.com/bhdouglass/falcon/blob/master/src/falcon.go#L98"&gt;Brian Douglass&amp;#8217;s Falcon alternative app scope&lt;/a&gt;.) However! If you do that in JavaScript, your scope ignores the tap and throws an error about how you &lt;code&gt;returned nullptr from activate()&lt;/code&gt;. (&lt;a href="https://bugs.launchpad.net/unity-js-scopes/+bug/1598969"&gt;&lt;span class="caps"&gt;LP&lt;/span&gt;#1598969&lt;/a&gt;.) As the bug says, &amp;#8220;this, in practice, means it&amp;#8217;s impossible to write a &lt;span class="caps"&gt;JS&lt;/span&gt; scope which allows tapping on a result item to do anything other than show the preview (for example, launching an&amp;nbsp;app).&amp;#8221;&lt;/p&gt;
&lt;p&gt;(The observant will notice that the &lt;a href="https://developer.ubuntu.com/api/scopes/js/sdk-15.04.5/ScopeJS/"&gt;&lt;span class="caps"&gt;JS&lt;/span&gt; scopes documentation&lt;/a&gt; doesn&amp;#8217;t actually &lt;em&gt;mention&lt;/em&gt; &lt;code&gt;ActivationResponse&lt;/code&gt; or even that &lt;code&gt;activate()&lt;/code&gt; handlers are possible in &lt;a href="https://developer.ubuntu.com/api/scopes/js/sdk-15.04.5/ScopeJS.Scope/"&gt;&lt;code&gt;scope.initialize()&lt;/code&gt;&lt;/a&gt;, which will hopefully get better as the docs get&amp;nbsp;written.)&lt;/p&gt;
&lt;p&gt;Now, that&amp;#8217;s just a bug, and I&amp;#8217;m sure it&amp;#8217;ll get fixed (I&amp;#8217;m sure they&amp;#8217;ll all be fixed). It is frustrating (has nobody writing the &lt;span class="caps"&gt;JS&lt;/span&gt; scopes stuff ever &lt;em&gt;tried&lt;/em&gt; &lt;code&gt;set_intercept_activation()&lt;/code&gt;? Isn&amp;#8217;t there lots of &lt;span class="caps"&gt;QA&lt;/span&gt; built into the Ubuntu process now?) But it&amp;#8217;s a temporary thing, I&amp;#8217;m sure, and in the same class of &amp;#8220;frustrating and show-stopping but will be fixed eventually&amp;#8221; things as how &lt;code&gt;unity-js-scopes-tool&lt;/code&gt; doesn&amp;#8217;t build &lt;code&gt;node-pre-gyp&lt;/code&gt; packages (&lt;a href="https://bugs.launchpad.net/unity-js-scopes/+bug/1598971"&gt;&lt;span class="caps"&gt;LP&lt;/span&gt;#1598971&lt;/a&gt;) or that &lt;code&gt;unity-js-scopes-tool&lt;/code&gt; seems to actually &lt;em&gt;be&lt;/em&gt; the &lt;code&gt;node&lt;/code&gt; binary itself but that&amp;#8217;s carefully kept secret for some reason, or that you have to remove and reinstall an app if you change the apparmor stuff otherwise the changes aren&amp;#8217;t picked up (&lt;a href="https://bugs.launchpad.net/ubuntu/+source/click/+bug/1549369"&gt;&lt;span class="caps"&gt;LP&lt;/span&gt;#1549369&lt;/a&gt;) which cost me an hour of banging my head against the desk (thanks mzanetti for helping). They&amp;#8217;ll get fixed. Move&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;The things which actually stopped me building the scope I wanted weren&amp;#8217;t these sorts of incidental bugs; they&amp;#8217;re design decisions saying that what I want should not be possible. I&amp;#8217;m hoping that the detail I&amp;#8217;m going into here helps to explain &lt;em&gt;why&lt;/em&gt; I want these things, and perhaps makes its way back to the team deciding on this stuff and helps to inform their&amp;nbsp;decisions.&lt;/p&gt;
&lt;p&gt;For example. You see how my Android screen above has four columns of app icons? Like the Ubuntu apps scope has? Well&amp;#8230; my replacement scope can&amp;#8217;t. Scopes are only allowed three columns of icons. The apps scope has been magically &lt;a href="https://bugs.launchpad.net/ubuntu/+source/unity8/+bug/1490388"&gt;hardcoded into Unity&lt;/a&gt; to be allowed four columns; nobody else can do that. That&amp;#8217;s pretty&amp;nbsp;annoying.&lt;/p&gt;
&lt;p&gt;Similarly, customisation of the look of a scope is superficially good but actually rather limited. A scope &lt;em&gt;header&lt;/em&gt; can have a custom background image, but a scope itself can&amp;#8217;t; you can pick a colour, but you can&amp;#8217;t set an image as the background for your scope. (&lt;a href="https://bugs.launchpad.net/ubuntu/+source/unity-scopes-api/+bug/1598973"&gt;&lt;span class="caps"&gt;LP&lt;/span&gt;#1598973&lt;/a&gt;) Scopes put the &amp;#8220;Ubuntu shape&amp;#8221; around all your scope icons, but you can turn that off by settings &lt;code&gt;ShapeImages=false&lt;/code&gt; in your scope ini file. Except&amp;#8230; that doesn&amp;#8217;t work; it&amp;#8217;s ignored, and you always get the Ubuntu shape border on every image, whether you want it or not. (&lt;a href="https://bugs.launchpad.net/ubuntu/+source/unity-scopes-api/+bug/1598933"&gt;&lt;span class="caps"&gt;LP&lt;/span&gt;#1598933&lt;/a&gt;) I understand the idea behind shaping imagery, but it looks heart-stoppingly ugly when done to icons with transparent backgrounds, such as all the &amp;#8220;wireframe&amp;#8221; icons I planned to use in this project. You can have settings for your scope, but they can&amp;#8217;t change the &lt;em&gt;appearance&lt;/em&gt;, because that stuff&amp;#8217;s not programmatic; it&amp;#8217;s in the &lt;code&gt;scope.ini&lt;/code&gt; file and can&amp;#8217;t be changed by code. So I can&amp;#8217;t allow people to have a dark scope with white icons (as above) or choose a light scope with black icons. Also, making a replacement apps scope is essentially fruitless because the default apps scope cannot be removed. You can&amp;#8217;t turn it off; it &lt;em&gt;must&lt;/em&gt; be present in your Dash. This to me seems strange; I&amp;#8217;m fine with you not being able to &lt;em&gt;delete&lt;/em&gt; it, but it will always be present in the bottom-edge menu. Fine, maybe making replacement apps scopes is an edge case, but it&amp;#8217;s hard to get the feeling that my phone is mine when I&amp;#8217;m obliged to keep the default apps scope around even if I&amp;#8217;ve got a&amp;nbsp;replacement.&lt;/p&gt;
&lt;p&gt;Oh, and the idea of making the scope fast by populating a database? You can&amp;#8217;t have that, either. Yes, there are click hooks. But you can&amp;#8217;t install one. They must be stored in &lt;code&gt;/usr/share/click/hooks&lt;/code&gt;, and that&amp;#8217;s part of the system image, which is read-only. What this means is that there&amp;#8217;s no way that a third-party app will ever be able to be informed of app installs and removals, sadly. I can put an app which requires extra permissions into the &lt;a href="https://open.uappexplorer.com/"&gt;Open Store&lt;/a&gt;, but even such an app can&amp;#8217;t install a click hook; I&amp;#8217;d have to make it a deb, and even then a deb won&amp;#8217;t install either unless you mark your image as read-write, which requires plugging it into a computer. Talking someone through that process is close to impossible unless they&amp;#8217;re the hardest of the hardcore Ubuntu touch hackers. Perhaps click might look in some other folder as well, which &lt;em&gt;is&lt;/em&gt; accessible to apps, and have a new apparmor permission protect that folder? Then it would be possible for an application to request that permission and keep a database of installed and removed apps up to date, which would allow us to compete on making a better app launching&amp;nbsp;experience.&lt;/p&gt;
&lt;p&gt;So all this means that the best I can do on Ubuntu is this. Ubuntu shapes around the transparent icons, no background imagery, three columns. And that&amp;#8217;s just not pretty, I&amp;#8217;m sad to&amp;nbsp;say.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.kryogenix.org/random/appease.png"&gt;&lt;/p&gt;

&lt;p&gt;(I freely admit that some of this is down to the icons, which I drew quickly, and some more is down to the E4.5 having much worse screen resolution than my OnePlus X. But those aren&amp;#8217;t the only&amp;nbsp;things.)&lt;/p&gt;
&lt;p&gt;Anyway. I still have my beautiful Android home screen. But I&amp;#8217;ve reluctantly decided that I just can&amp;#8217;t do that on Ubuntu. Maybe it&amp;#8217;ll be possible later; maybe these bugs will be fixed and the design decisions revisited. I hope the above explains why I think that&amp;#8217;s important and what app developers could maybe do if those restrictions are slightly relaxed. Fingers&amp;nbsp;crossed.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 05 Jul 2016 00:27:00 +0100</pubDate><guid>tag://www.kryogenix.org/days,2016-07-05:2016/07/05/making-a-better-ubuntu-app-scope-not-very-successfully/</guid></item><item><title>Programmatic Progressiveness</title><link>//www.kryogenix.org/days/2016/06/02/programmatic-progressiveness/</link><description>&lt;p&gt;The Chrome team have put together a thing called &lt;a href="https://github.com/GoogleChrome/lighthouse"&gt;Lighthouse&lt;/a&gt;, a programmatic checker for whether a website is a progressive web app. It&amp;#8217;s a nice structure; it goes through a big list of checks on whether you&amp;#8217;ve got a manifest, whether performance is good, if the site&amp;#8217;s &lt;span class="caps"&gt;HTTPS&lt;/span&gt;, if you&amp;#8217;ve got icons defined, so on and so forth, and it&amp;#8217;s possible to add more (many more!) checks to the list. You can think of it as the list of criteria that a browser should use to tell whether it should put up the &amp;#8220;add to home screen&amp;#8221;&amp;nbsp;button.&lt;/p&gt;
&lt;p&gt;However, as has been &lt;a href="http://www.kryogenix.org/days/2016/05/24/the-importance-of-urls/"&gt;previously mentioned&lt;/a&gt; by me and &lt;a href="https://www.christianheilmann.com/2016/05/31/progressive-web-apps-and-our-regressive-approach/"&gt;others&lt;/a&gt;, there is a bit of a worry that we&amp;#8217;re missing out on the Progressive part of Progressive Web Apps; that in the rush to check that you support exciting new features such as manifests and service workers, we&amp;#8217;re not also checking that your web site provides content to everyone, that it progressively uses those new features where they&amp;#8217;re available rather than &lt;em&gt;requiring&lt;/em&gt; them to be present, that you&amp;#8217;re &lt;a href="http://www.kryogenix.org/days/2015/06/28/availability/"&gt;available&lt;/a&gt; to everyone and not just to the&amp;nbsp;hippest.&lt;/p&gt;
&lt;p&gt;A brief diversion, here: I have occasionally probably strayed over the line from &amp;#8220;why aren&amp;#8217;t we doing better at this&amp;#8221; (which I do think) into &amp;#8220;why don&amp;#8217;t the Chrome team care about this&amp;#8221;, and that&amp;#8217;s not fair. Sorry, Chrome people. Accusation not&amp;nbsp;justified.&lt;/p&gt;
&lt;p&gt;Anyway, what I&amp;#8217;d like to see is Lighthouse actually checking that your app is progressive as well as featureful. This is harder than it looks; progressive enhancement, like accessibility, is difficult to check programmatically. It&amp;#8217;s easy for a human to confirm that this site can still perform its basic actions if its scripts are blocked; it&amp;#8217;s a lot more difficult for a computer to do so. I don&amp;#8217;t think we&amp;#8217;ll ever be able to say &amp;#8220;yes, you have definitely done everything right&amp;#8221;, here, much like we can&amp;#8217;t with accessibility. But we &lt;em&gt;can&lt;/em&gt; flag that you&amp;#8217;ve done things&amp;nbsp;wrong.&lt;/p&gt;
&lt;p&gt;So, I&amp;#8217;ve now got some code in Lighthouse which is a place we can build programmatic checks for progressiveness. At the moment it literally only checks whether there is any content at all if your &lt;a href="http://kryogenix.org/code/browser/everyonehasjs.html"&gt;scripts don&amp;#8217;t load&lt;/a&gt;, and complains if you do not. That will catch sites which just serve &lt;code&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/code&gt; and create their whole entire &lt;span class="caps"&gt;UI&lt;/span&gt; in JavaScript; such sites are (thankfully) rare now, after a spate of them existing a few years ago. But we can do better than this. Yes, it&amp;#8217;s difficult to adequately create such tests, but if we can land a man on the moon we can come up with checks here, too. So, I&amp;#8217;d like to start a discussion around how we can programmatically check for signs that a website &lt;em&gt;isn&amp;#8217;t&lt;/em&gt; doing progressive enhancement. What should we look for to show you&amp;#8217;re doing it right; what should we look for to show you&amp;#8217;re doing it wrong? If you have ideas, a good place to discuss them may be by &lt;a href="https://github.com/GoogleChrome/lighthouse/issues"&gt;filing issues against Lighthouse&lt;/a&gt;; there, we can hash out details of whether a check makes sense, whether it&amp;#8217;s a good idea, how it can be made better. And then someone can build that check; if you&amp;#8217;re a developer, you can add an &lt;a href="https://github.com/GoogleChrome/lighthouse/tree/master/src/audits/javascript"&gt;&amp;#8220;audit&amp;#8221;&lt;/a&gt; to Lighthouse which has access to the page text and &lt;span class="caps"&gt;HTML&lt;/span&gt; and checks for warning signs or good signs and adds them to the report that Lighthouse creates. This is our chance to help stamp out sites that don&amp;#8217;t do things right, and help define that a progressive web app should actually be progressive. I&amp;#8217;d love you to&amp;nbsp;help.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 02 Jun 2016 13:34:00 +0100</pubDate><guid>tag://www.kryogenix.org/days,2016-06-02:2016/06/02/programmatic-progressiveness/</guid></item><item><title>The importance of URLs</title><link>//www.kryogenix.org/days/2016/05/24/the-importance-of-urls/</link><description>&lt;blockquote&gt;“You don’t control Xykon! He controls you!”&lt;br&gt;“Like I said: subtle.”&lt;br&gt;&lt;br&gt;Redcloak, &lt;a href="http://www.giantitp.com/comics/oots0830.html"&gt;The Order of the Stick&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Lots of discussion about &lt;a href="https://infrequently.org/2015/06/progressive-apps-escaping-tabs-without-losing-our-soul/"&gt;progressive web apps&lt;/a&gt; recently, with a general consensus among forward-thinking web people that this is the way we should be building things for the web from now on. Websites that work offline, that deal well with lie-fi&lt;sup id="sf-the-importance-of-urls-1-back"&gt;&lt;a title="Jake Archibald eloquently names lie-fi as that situation where your phone claims to have a connection but actually it doesn’t, the lying sack of dingo’s entrails that it is, and just spins forever when you tell it to connect to a website. If you’ve ever toggled a device into airplane mode and back out again, you know what we’re talking about" class="simple-footnote" href="#sf-the-importance-of-urls-1"&gt;1&lt;/a&gt;&lt;/sup&gt;, that are responsive, that are progressive, that work everywhere but are better on devices that can cope with the glory. &lt;a href="https://twitter.com/slightlylate"&gt;Alex Russell&lt;/a&gt;, who originally coined the term, talks about PWAs being responsive, connectivity independent, fresh, safe, discoverable, re-engageable, installable, linkable, and having app-like interactions.&lt;/p&gt;
&lt;p&gt;We could discuss every part of that description, every word in that definition, for hours and hours, and if someone wants to nominate a pub with decent beer then I’m more than happy to have that discussion and a pint while doing it. But today, we’re talking about the word &lt;em&gt;linkable&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Linkability&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://adactio.com"&gt;Jeremy&lt;/a&gt; tweeted:&lt;/p&gt;
&lt;blockquote&gt;&lt;a href="https://twitter.com/adactio/status/734873072042422273"&gt;Strongly disagree with Lighthouse wanting “Manifest’s display property set to standalone/fullscreen to allow launching without address bar.”&lt;/a&gt;&lt;br&gt;&lt;br&gt;Jeremy Keith&lt;/blockquote&gt;

&lt;h3&gt;A little background&lt;/h3&gt;
&lt;p&gt;First, a little background. Google Chrome attempts to detect whether the website you’re looking at “qualifies” as a Progressive Web App, because if it &lt;em&gt;does&lt;/em&gt; then they will show an “install to home screen” banner on your second visit. This is a major improvement over the previous state of a user having to manually install a site they like to their home screen by fishing through the menus&lt;sup id="sf-the-importance-of-urls-2-back"&gt;&lt;a title="although the Chrome approach is not without its problems" class="simple-footnote" href="#sf-the-importance-of-urls-2"&gt;2&lt;/a&gt;&lt;/sup&gt; or using the “add to home screen” button in iOS Safari&lt;sup id="sf-the-importance-of-urls-3-back"&gt;&lt;a title="which is obscure enough that Matteo Spinelli made a library to show a pointer to the add-to-home-screen button; the library is wonderful, don’t get me wrong, but it ought to not need to exist" class="simple-footnote" href="#sf-the-importance-of-urls-3"&gt;3&lt;/a&gt;&lt;/sup&gt;. The Chrome team have then created &lt;a href="https://github.com/GoogleChrome/lighthouse"&gt;Lighthouse&lt;/a&gt;, a tool which invokes a Chrome browser, checks whether a site passes their checks for “this looks like a &lt;span class="caps"&gt;PWA&lt;/span&gt;”, and returns a result.&lt;/p&gt;
&lt;p&gt;So Jeremy’s point is this: Lighthouse is declaring that to be a valid &lt;span class="caps"&gt;PWA&lt;/span&gt;, you have to insist that when you’re added to the home screen, you stop showing the &lt;span class="caps"&gt;URL&lt;/span&gt; bar. And he doesn’t agree, because&lt;/p&gt;
&lt;blockquote&gt;&lt;a href="https://twitter.com/adactio/status/734875747169501185"&gt;I want people to be able to copy URLs. I want people to be able to hack URLs. I’m not ashamed of my URLs …I’m downright proud.&lt;/a&gt;&lt;br&gt;&lt;br&gt;Jeremy Keith&lt;/blockquote&gt;

&lt;p&gt;This is inspirational stuff, and it’s true. URLs are important. Individual addressability of parts on the web is important.&lt;/p&gt;
&lt;p&gt;However. (You knew there was a “however” coming.) Whether your web app shows a &lt;span class="caps"&gt;URL&lt;/span&gt; bar is not actually a thing about that web app.&lt;/p&gt;
&lt;h3&gt;A little more background&lt;/h3&gt;
&lt;p&gt;A bit more background. In order to qualify as a progressive web app, you have to provide a manifest.&lt;sup id="sf-the-importance-of-urls-4-back"&gt;&lt;a title="If you don’t know how to create one, see the manifest generator that Bruce and I created" class="simple-footnote" href="#sf-the-importance-of-urls-4"&gt;4&lt;/a&gt;&lt;/sup&gt; That manifest lists various properties about this web app which are useful to operating systems: what its human-readable name is, what a human-readable &lt;em&gt;short&lt;/em&gt; name for it is, what its icon should be, a theme colour for it, &lt;a href="https://dev.opera.com/articles/installable-web-apps/"&gt;and so on&lt;/a&gt;. This is all good.&lt;/p&gt;
&lt;p&gt;But the manifest also lists a &lt;a href="http://manifest.sysapps.org/#display-modes"&gt;&lt;code&gt;display_mode&lt;/code&gt;&lt;/a&gt;, defined in the spec as “how the web application is being presented within the context of an &lt;span class="caps"&gt;OS&lt;/span&gt; (e.g., in fullscreen, etc.)” Essentially, the options for the display mode are &lt;code&gt;fullscreen&lt;/code&gt; (the app will take all the screen; hardware keys and the status bar will not be shown), &lt;code&gt;standalone&lt;/code&gt; (no browser &lt;span class="caps"&gt;UI&lt;/span&gt; is shown, but the hardware keys and status bar will be displayed), and &lt;code&gt;browser&lt;/code&gt; (the app will be shown with normal browser &lt;span class="caps"&gt;UI&lt;/span&gt;, ie. as a normal website).&lt;/p&gt;
&lt;p&gt;Now we see Jeremy’s point. Chrome propose that you only qualify as a “real” &lt;span class="caps"&gt;PWA&lt;/span&gt; if you request “fullscreen” or “standalone” mode: that is, that you hide the &lt;span class="caps"&gt;URL&lt;/span&gt; bar. Jeremy says that URLs are important; they’re not a thing to hide away or to pretend that don’t exist. And he has a point. The hackability of URLs is surprisingly important, and unsurprisingly dismissed by app developers who want to lock down the user experience.&lt;/p&gt;
&lt;p&gt;But, and this is the important point, &lt;em&gt;whether a web app shows its URLs is not a property of that app. It’s a property of how that app’s developer &lt;strong&gt;thinks&lt;/strong&gt; about the web.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Property versus preference&lt;/h2&gt;
&lt;p&gt;If Jeremy and I were both to work on a website, and then discuss what should be in the manifest, we’d agree on what the app’s name was, what a shortened name was, what the icon is. But we might disagree on whether the app should show a &lt;span class="caps"&gt;URL&lt;/span&gt; bar when launched. That disagreement isn’t about the app itself; it’s about whether you, the developer, think it’s &lt;span class="caps"&gt;OK&lt;/span&gt; to hide that an app is actually on the web, or whether you should proudly &lt;em&gt;declare&lt;/em&gt; that it’s on the web. That doesn’t differ from app to app; it differs from developer to developer. The app manifest declares properties of the app, but the &lt;code&gt;display&lt;/code&gt; property isn’t about the app; it’s about how the app’s developer wants it to be shown. Do they want to proudly declare that this app is on the web and of the web? Then they’ll add the &lt;span class="caps"&gt;URL&lt;/span&gt; bar. Do they want to conceal that this is actually a web app in order to look more like “native” apps? Then they’ll hide the &lt;span class="caps"&gt;URL&lt;/span&gt; bar. The &lt;code&gt;display&lt;/code&gt; property feels rather less like it’s actually tied to the app, and rather more like it should be chosen at “add-to-home-screen” time by the user; do you, the bookmarking user, prefer to think of this as a web thing? Include the &lt;span class="caps"&gt;URL&lt;/span&gt; bar. Do you want to think of it as an app which doesn’t involve the web? Hide the &lt;span class="caps"&gt;URL&lt;/span&gt; bar. It’s a preference. It’s not a property.&lt;/p&gt;
&lt;h2&gt;On the desktop&lt;/h2&gt;
&lt;p&gt;The above argument stands alone. But there are additional issues with having a &lt;span class="caps"&gt;URL&lt;/span&gt; bar showing on an added-to-home-screen web app. We should discuss these separately, but here I have them in the same essay because it’s all relevant.&lt;/p&gt;
&lt;p&gt;The additional issue is, essentially, this. On my desktop — &lt;em&gt;not&lt;/em&gt; my phone — I add an app to my “home screen”. This might add it to my desktop as a shortcut icon, or to my Start Menu, or in the Applications list, or all of the above, depending on which &lt;span class="caps"&gt;OS&lt;/span&gt; I’m on.&lt;sup id="sf-the-importance-of-urls-5-back"&gt;&lt;a title="and it should be noted that basically nobody actually handles PWAs properly on desktop yet; it’s all about mobile. But desktop is coming, and we’ll need to solve this." class="simple-footnote" href="#sf-the-importance-of-urls-5"&gt;5&lt;/a&gt;&lt;/sup&gt; If that &lt;span class="caps"&gt;PWA&lt;/span&gt; declares itself as being &lt;code&gt;standalone&lt;/code&gt; then how to handle it is obvious: open it in a new window, with no &lt;span class="caps"&gt;URL&lt;/span&gt; bar showing. Similarly, &lt;code&gt;fullscreen&lt;/code&gt; web apps launched from an icon should be full screen. But what do we do when launching a &lt;code&gt;browser&lt;/code&gt; display-mode web app on a desktop?&lt;/p&gt;
&lt;p&gt;Since we’re launching something indistinguishable from just another browser tab, it should launch a browser tab, right? I mean, we’re opening something which is essentially a bookmark. But… wouldn’t it feel strange to you to pick something from your app menu or an icon from your desktop and have it just open a browser tab? It would for me, at least. So maybe we should launch a new browser window, with &lt;span class="caps"&gt;URL&lt;/span&gt; bar intact, as though you’d clicked “open in new window” on a link. But then I’d have a whole new browser window for something which doesn’t really &lt;em&gt;deserve&lt;/em&gt; a whole new window; it’s just one more web page, so why does it get a window by itself? I manage my browser windows according to project; window A has tabs relevant to project A, window B has tabs relevant to project B, and so on. I don’t want a whole new window, and indeed I have extensions installed so that links which think they deserve a new window actually get a new &lt;em&gt;tab&lt;/em&gt; instead.&lt;/p&gt;
&lt;p&gt;It’s not very clear what should happen here. The whole idea of launching a website from an &lt;span class="caps"&gt;OS&lt;/span&gt;-level icon doesn’t actually mesh very well at all with the idea of tabbed browser windows. It &lt;em&gt;does&lt;/em&gt; mesh well with the 2002-era idea of a-new-browser-window-for-every-&lt;span class="caps"&gt;URL&lt;/span&gt;, but that idea has gone away. We have tabbed browsing, and people like it.&lt;sup id="sf-the-importance-of-urls-6-back"&gt;&lt;a title="Whether tabbed browsing actually makes conceptual sense is not up for discussion, here; we’ve collectively decided to use it, much as we’ve collectively decided that one-file-manager-window-per-folder isn’t the way we want to go either." class="simple-footnote" href="#sf-the-importance-of-urls-6"&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The Chrome team’s idea, that basically you can’t add an “&lt;span class="caps"&gt;OS&lt;/span&gt;-level bookmark” for a website which wants to be treated &lt;em&gt;as&lt;/em&gt; a website, avoids these problems.&lt;/p&gt;
&lt;p&gt;Jeremy’s got a point, though. Hiding away URLs, pretending that this thing you’re looking at is a “native” app, does indeed sacrifice one of the key strengths of the web — that everything’s individually addressable. You can’t bookmark the “account” page in Steam, or the “settings” window in Keynote or Word or LibreOffice. With the web, you &lt;em&gt;can&lt;/em&gt;. That’s a good thing. We shouldn’t give it up lightly. But you already can’t do that for apps which use web technologies but pretend to be native. If Word or iTunes used a WebView to render its preferences dialog, would it be good if you could link directly to it with a &lt;span class="caps"&gt;URL&lt;/span&gt; like &lt;code&gt;itunes://settings&lt;/code&gt;? Yes it would. Would it be good if the iTunes user interface had a &lt;span class="caps"&gt;URL&lt;/span&gt; bar at the top &lt;em&gt;showing&lt;/em&gt; that &lt;span class="caps"&gt;URL&lt;/span&gt; all the time? Not really, no.&lt;/p&gt;
&lt;p&gt;There is a paternalism discussion, here. URLs are a good thing about the web; the addressability of parts is a good thing about the web. People don’t necessarily appreciate that. How much effort should we put into making this stuff available &lt;em&gt;even though people don’t want it&lt;/em&gt;, because they’re &lt;em&gt;wrong&lt;/em&gt; to not want it? Do we actually know better than they do? I think: yes we do.&lt;sup id="sf-the-importance-of-urls-7-back"&gt;&lt;a title="Hubris is a great idea. The Greeks taught us that." class="simple-footnote" href="#sf-the-importance-of-urls-7"&gt;7&lt;/a&gt;&lt;/sup&gt; But I don’t know how important that is, when we can also win people over to the web by pretending that it’s native apps, which is what people wrongly want.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;On balance, therefore, I approve of the Lighthouse team’s idea that you don’t qualify as an add-to-home-screen-able app if you want a &lt;span class="caps"&gt;URL&lt;/span&gt; bar. I can see the argument against this, and I do agree that we’re giving up something important, something fundamental to the web by hiding away URLs. But I think that wanting to see the &lt;span class="caps"&gt;URL&lt;/span&gt; is not a property of an app; it’s a property of &lt;em&gt;how &lt;strong&gt;you personally&lt;/strong&gt; want to deal with apps&lt;/em&gt;. So browsers should, when adding things to the home screen, pretend that &lt;code&gt;display:browser&lt;/code&gt; actually said &lt;code&gt;display:standalone&lt;/code&gt;, but give people who care the ability to override that if they want. And if we want more people to care, then that’s what evangelism is for; having individual app developers decide how they want &lt;em&gt;their&lt;/em&gt; app to be displayed just leads to fragmentation. Let’s educate people on why URLs are important, and then they can flip a switch and see the URLs for everything they use… but until we’ve convinced them, let’s not force them to see the URLs when what they want is a native-like experience.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-the-importance-of-urls-1"&gt;Jake Archibald eloquently names lie-fi as that situation where your phone claims to have a connection but actually it doesn’t, the lying sack of dingo’s entrails that it is, and just spins forever when you tell it to connect to a website. If you’ve ever toggled a device into airplane mode and back out again, you know what we’re talking about &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-1-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-the-importance-of-urls-2"&gt;although the Chrome approach is &lt;a href="http://www.kryogenix.org/days/2015/03/16/chrome-improves-add-to-home-screen-sorta/"&gt;not without its problems&lt;/a&gt; &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-2-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-the-importance-of-urls-3"&gt;which is obscure enough that Matteo Spinelli made a &lt;a href="http://cubiq.org/add-to-home-screen"&gt;library to show a pointer to the add-to-home-screen button&lt;/a&gt;; the library is wonderful, don’t get me wrong, but it ought to not need to exist &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-3-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-the-importance-of-urls-4"&gt;If you don’t know how to create one, see the &lt;a href="http://brucelawson.github.io/manifest/"&gt;manifest generator&lt;/a&gt; that &lt;a href="http://brucelawson.co.uk"&gt;Bruce&lt;/a&gt; and I created &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-4-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-the-importance-of-urls-5"&gt;and it should be noted that basically nobody actually handles PWAs properly on desktop yet; it’s all about mobile. But desktop is coming, and we’ll need to solve this. &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-5-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-the-importance-of-urls-6"&gt;Whether tabbed browsing actually makes conceptual sense is not up for discussion, here; we’ve collectively decided to use it, much as we’ve collectively decided that one-file-manager-window-per-folder isn’t the way we want to go either. &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-6-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-the-importance-of-urls-7"&gt;Hubris is a great idea. The Greeks taught us that. &lt;a class="simple-footnote-back" href="#sf-the-importance-of-urls-7-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 24 May 2016 00:22:00 +0100</pubDate><guid>tag://www.kryogenix.org/days,2016-05-24:2016/05/24/the-importance-of-urls/</guid></item><item><title>CSS colour words in hex</title><link>//www.kryogenix.org/days/2016/05/06/css-colour-words-in-hex/</link><description>&lt;style&gt;
ul.colour-word-box {
    margin: 1.5em 0;
    padding: 0;
    overflow: auto;
}
ul.colour-word-box li {
    width: 18%;
    margin: 1%;
    padding: 1em;
    box-sizing: border-box;
    float: left;
    position: relative;
    list-style: none;
    border: 1px solid black;
}
ul.colour-word-box li:after {
    content: "";
    display: block;
    padding-bottom: 100%;
}
ul.colour-word-box li span {
    text-transform: uppercase;
    bottom: 0.5em;
    right: 0.5em;
    position: absolute;
    color: black;
}
ul.colour-word-box li.dark span {
    color: white;
}
@media all and (max-width: 799px) {
    ul.colour-word-box li span {
        font-size: 11px;
        bottom: 5px;
        right: 0px;
        left: 0;
        text-align: center;
    }
}
&lt;/style&gt;

&lt;p&gt;One of the nice little fillips about writing &lt;span class="caps"&gt;CSS&lt;/span&gt; is that occasionally you use a colour code which turns out to be a word; the most famous here is probably &lt;code&gt;#DECADE&lt;/code&gt;. I ran across &lt;a href="http://bada55.io/"&gt;bada55.io&lt;/a&gt; which has made a whole site from this and was quite pleased, but the terrible old grammarian in me just can&amp;#8217;t deal with the l33tsp34k nature of most of the suggestions. You&amp;#8217;re obviously allowed &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;F&lt;/code&gt;, and I&amp;#8217;m prepared to allow &lt;code&gt;0&lt;/code&gt; as O and &lt;code&gt;1&lt;/code&gt; as I, but using &lt;code&gt;5&lt;/code&gt; as an S or &lt;code&gt;3&lt;/code&gt; as E is dubious, using &lt;code&gt;1&lt;/code&gt; as an L is &lt;em&gt;exceptionally&lt;/em&gt; dubious (especially when it&amp;#8217;s already being an I in the same word!), and &lt;code&gt;7&lt;/code&gt; for T or &lt;code&gt;4&lt;/code&gt; for A or &lt;code&gt;6&lt;/code&gt;/G or (incomprehensibly) &lt;code&gt;9&lt;/code&gt;/P are right out. The fun nature of the game goes away when you have to puzzle out the meaning of the word like it&amp;#8217;s a crossword clue or one of those horrid personalised number&amp;nbsp;plates.&lt;/p&gt;
&lt;p&gt;So, if we excise these crimes against spelling, all the colours that make what I consider to be proper words are below. There are obviously rather a lot of pastel shades, since each of the red, green, and blue channels will almost certainly be &lt;code&gt;A0&lt;/code&gt; or larger, but that&amp;#8217;s not necessarily a problem (and there are a couple of decent highly-saturated colours in there too; I&amp;#8217;m particularly fond of &lt;code&gt;#AC1D1C&lt;/code&gt; and plan to use it more often). If we admit white and black into the palette, it&amp;#8217;d almost certainly be possible to build a site while drawing solely from this list for your colour choices. Something to bear in mind for a future project,&amp;nbsp;maybe.&lt;/p&gt;
&lt;ul class="colour-word-box"&gt;
    &lt;li class="dark" style="background: #ab1ded"&gt;&lt;span&gt;abided&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #acac1a"&gt;&lt;span&gt;acacia&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #accede"&gt;&lt;span&gt;accede&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #ac1d1c"&gt;&lt;span&gt;acidic&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #bab1ed"&gt;&lt;span&gt;babied&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #ba0bab"&gt;&lt;span&gt;baobab&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #beaded"&gt;&lt;span&gt;beaded&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #bedded"&gt;&lt;span&gt;bedded&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #beefed"&gt;&lt;span&gt;beefed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #b0bbed"&gt;&lt;span&gt;bobbed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #b0d1ce"&gt;&lt;span&gt;bodice&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #b00bed"&gt;&lt;span&gt;boobed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #cabbed"&gt;&lt;span&gt;cabbed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #cabb1e"&gt;&lt;span&gt;cabbie&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #cadd1e"&gt;&lt;span&gt;caddie&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #c1cada"&gt;&lt;span&gt;cicada&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #c0dded"&gt;&lt;span&gt;codded&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #c0ffee"&gt;&lt;span&gt;coffee&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #c01fed"&gt;&lt;span&gt;coifed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #dabbed"&gt;&lt;span&gt;dabbed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #decade"&gt;&lt;span&gt;decade&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #dec1de"&gt;&lt;span&gt;decide&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #dec0de"&gt;&lt;span&gt;decode&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #deeded"&gt;&lt;span&gt;deeded&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #deface"&gt;&lt;span&gt;deface&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #def1ed"&gt;&lt;span&gt;defied&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #de1ced"&gt;&lt;span&gt;deiced&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #d0ffed"&gt;&lt;span&gt;doffed&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #d00dad"&gt;&lt;span&gt;doodad&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #edd1ed"&gt;&lt;span&gt;eddied&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #efface"&gt;&lt;span&gt;efface&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #facade"&gt;&lt;span&gt;facade&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #f1bbed"&gt;&lt;span&gt;fibbed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #f0bbed"&gt;&lt;span&gt;fobbed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #0ff1ce"&gt;&lt;span&gt;office&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Addendum: I forgot about three-character hex colour codes! Of which there are also quite a few, and we do a lot better at the saturated ones this time because a whole channel is quite often &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;. Although it&amp;#8217;s less lexicographically elegant to use a three-character&amp;nbsp;word.&lt;/p&gt;
&lt;ul class="colour-word-box"&gt;
    &lt;li style="background: #ace"&gt;&lt;span&gt;ace&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #add"&gt;&lt;span&gt;add&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #ad0"&gt;&lt;span&gt;ado&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #a1d"&gt;&lt;span&gt;aid&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #baa"&gt;&lt;span&gt;baa&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #bad"&gt;&lt;span&gt;bad&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #bed"&gt;&lt;span&gt;bed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #bee"&gt;&lt;span&gt;bee&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #b1b"&gt;&lt;span&gt;bib&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #b1d"&gt;&lt;span&gt;bid&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #b0a"&gt;&lt;span&gt;boa&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #b0b"&gt;&lt;span&gt;bob&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #b00"&gt;&lt;span&gt;boo&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #cab"&gt;&lt;span&gt;cab&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #cad"&gt;&lt;span&gt;cad&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #c0b"&gt;&lt;span&gt;cob&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #c0d"&gt;&lt;span&gt;cod&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #c00"&gt;&lt;span&gt;coo&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #dab"&gt;&lt;span&gt;dab&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #dad"&gt;&lt;span&gt;dad&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #deb"&gt;&lt;span&gt;deb&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #d1d"&gt;&lt;span&gt;did&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #d1e"&gt;&lt;span&gt;die&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #d0c"&gt;&lt;span&gt;doc&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #d0e"&gt;&lt;span&gt;doe&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #ebb"&gt;&lt;span&gt;ebb&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #fad"&gt;&lt;span&gt;fad&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #fed"&gt;&lt;span&gt;fed&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #fee"&gt;&lt;span&gt;fee&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #f1b"&gt;&lt;span&gt;fib&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #f1e"&gt;&lt;span&gt;fie&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #f0b"&gt;&lt;span&gt;fob&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #f0e"&gt;&lt;span&gt;foe&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #1ce"&gt;&lt;span&gt;ice&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #0af"&gt;&lt;span&gt;oaf&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #0dd"&gt;&lt;span&gt;odd&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #0de"&gt;&lt;span&gt;ode&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #00f"&gt;&lt;span&gt;oof&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #0ff"&gt;&lt;span&gt;off&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Addendum addendum: &lt;a href="https://twitter.com/dracos"&gt;Matthew Somerville&lt;/a&gt; points out a few more words, of varying acceptability in formal conversation :) I can only plead that &lt;code&gt;/usr/share/dict/words&lt;/code&gt; didn&amp;#8217;t contain the better ones in here (&lt;span class="caps"&gt;IODIDE&lt;/span&gt; and &lt;span class="caps"&gt;BODIED&lt;/span&gt;), and reiterate that I&amp;#8217;m not including &lt;span class="caps"&gt;BAE&lt;/span&gt; anywhere and I don&amp;#8217;t care if you think it&amp;#8217;s a word. Also, the &lt;a href="https://drafts.csswg.org/css-color-4/"&gt;&lt;span class="caps"&gt;CSS&lt;/span&gt; Colour Module Level 4 spec&lt;/a&gt; dangles the tantalising possibility of eight-hex-digit codes which can include an alpha channel (&lt;code&gt;#rrggbbaa&lt;/code&gt;) which would bring the excellent &lt;span class="caps"&gt;CODIFIED&lt;/span&gt; and &lt;span class="caps"&gt;ACIDIFIC&lt;/span&gt; into the list, as well as the increasingly Latinate &lt;span class="caps"&gt;FABACEAE&lt;/span&gt;, &lt;span class="caps"&gt;IBIDIDAE&lt;/span&gt;, and &lt;span class="caps"&gt;COCCIDAE&lt;/span&gt;.&lt;/p&gt;
&lt;ul class="colour-word-box"&gt;
    &lt;li style="background: #BABB1E"&gt;&lt;span&gt;&lt;span class="caps"&gt;BABBIE&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #B0D1ED"&gt;&lt;span&gt;&lt;span class="caps"&gt;BODIED&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #D0BBED"&gt;&lt;span&gt;&lt;span class="caps"&gt;DOBBED&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #1DEAED"&gt;&lt;span&gt;&lt;span class="caps"&gt;IDEAED&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #10D1DE"&gt;&lt;span&gt;&lt;span class="caps"&gt;IODIDE&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li style="background: #FAB"&gt;&lt;span&gt;&lt;span class="caps"&gt;FAB&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #D1B"&gt;&lt;span&gt;&lt;span class="caps"&gt;DIB&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
    &lt;li class="dark" style="background: #B0D"&gt;&lt;span&gt;&lt;span class="caps"&gt;BOD&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 06 May 2016 21:15:00 +0100</pubDate><guid>tag://www.kryogenix.org/days,2016-05-06:2016/05/06/css-colour-words-in-hex/</guid></item></channel></rss>