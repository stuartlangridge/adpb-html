<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>as days pass by</title><link>http://www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><atom:link href="http://www.kryogenix.org/days/feed" rel="self"></atom:link><lastBuildDate>Wed, 23 Sep 2015 00:39:00 +0100</lastBuildDate><item><title>The platform is just another library</title><link>http://www.kryogenix.org/days/2015/09/23/the-platform-is-just-another-library/</link><description>&lt;p&gt;I&amp;#8217;ve been listening to &lt;a href="https://jakearchibald.com/"&gt;Jake&lt;/a&gt; and &lt;a href="https://aerotwist.com/"&gt;Paul&lt;/a&gt;&amp;#8216;s new &lt;a href="http://feeds.feedburner.com/Http203Podcast"&gt;&lt;span class="caps"&gt;HTTP203&lt;/span&gt; audio&amp;nbsp;podcast&lt;/a&gt; &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 23 Sep 2015 00:39:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-09-23:2015/09/23/the-platform-is-just-another-library/</guid></item><item><title>Using the content hub on Ubuntu</title><link>http://www.kryogenix.org/days/2015/08/20/using-the-content-hub-on-ubuntu/</link><description>&lt;p&gt;On an Ubuntu phone, apps are&lt;sup id="sf-using-the-content-hub-on-ubuntu-1-back"&gt;&lt;a title="correctly" href="#sf-using-the-content-hub-on-ubuntu-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; isolated from one another; each app has its own little folder where &lt;em&gt;its&lt;/em&gt; files go, and no other app can intrude. This, obviously, requires some way to exchange files between apps, because frankly there are times when my epub ebook is in my file downloader app and I need it in my ebook reader app. And so on.&lt;/p&gt;
&lt;p&gt;To deal with this, Ubuntu provides the Content Hub: a way for an app to say “I need a photo” and all the other apps on your phone which have photos to say “I have photos! Ask me! Me!”.&lt;/p&gt;
&lt;p&gt;This is, at a high level, the right thing to do. If my app wants to use a picture of you as an avatar, it should not be able to snarf your whole photo gallery and do what it wants with it. More troubling yet, adding some new social network app should not give it access to your whole address book so that it can hassle your friends to join, or worse just snaffle that information and store it away on its own server for future reference. So when some new app needs a photo of you to be an avatar, it asks the content hub; you, the punter, choose an app to provide that photo, and then a photo from within that app, and our avatar demander gets that photo, and none of the pictures of your kids or your holiday or whatever you take photos of. This is, big picture&lt;sup id="sf-using-the-content-hub-on-ubuntu-2-back"&gt;&lt;a title="ha!" href="#sf-using-the-content-hub-on-ubuntu-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; a good idea.&lt;/p&gt;
&lt;p&gt;Sadly, the content hub is spectacularly under-documented, so actually &lt;em&gt;using&lt;/em&gt; it in your Ubuntu apps is jolly hard work. However, with an assist&lt;sup id="sf-using-the-content-hub-on-ubuntu-3-back"&gt;&lt;a title="a bit more than that, if I’m honest" href="#sf-using-the-content-hub-on-ubuntu-3" class="simple-footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; from Michael Zanetti, I now understand how to offer files you have to others via the content hub. So I come to explain this to you.&lt;/p&gt;
&lt;p&gt;First, you need permission to access the content hub at all. So, in your &lt;code&gt;appname.apparmor&lt;/code&gt; file&lt;sup id="sf-using-the-content-hub-on-ubuntu-4-back"&gt;&lt;a title="or whatever you called it; hooks.$APPNAME.apparmor in manifest.json" href="#sf-using-the-content-hub-on-ubuntu-4" class="simple-footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;, add &lt;code&gt;content_exchange_source&lt;/code&gt;.&lt;sup id="sf-using-the-content-hub-on-ubuntu-5-back"&gt;&lt;a title="This is more confusing than it should be. If you’re using Ubuntu SDK as your editor, then clicking the big “+” button will load a list of possible apparmor permissions. Don’t double-click a permission; this will just show you what it means in code terms, rather irrelevantly. Instead, choose your permission (content_exchange_source in this case) and then say Add" href="#sf-using-the-content-hub-on-ubuntu-5" class="simple-footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; This tells Ubuntu that you’re prepared to provide files for others (you are a “source” of data). You then need to, also in &lt;code&gt;manifest.json&lt;/code&gt;, configure what you’re allowed to do with the content hub; add a &lt;code&gt;hooks.content-hub&lt;/code&gt; key which names a file (&lt;code&gt;myappname.content-hub&lt;/code&gt; or whatever you prefer). That file that you just named needs to also be json, and looks something like &lt;code&gt;{"source": ["all"]}&lt;/code&gt;, which dictates which sorts of files you want to be a source &lt;em&gt;for&lt;/em&gt;.&lt;sup id="sf-using-the-content-hub-on-ubuntu-6-back"&gt;&lt;a title="you can also do `{“source”:[“pictures”]}. There may be other things you can write in there instead of “all” or “pictures”, but the documentation is surlily silent on such things." href="#sf-using-the-content-hub-on-ubuntu-6" class="simple-footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; Once you’ve done all this, you’re allowed to use the content hub. So now we explore how.&lt;/p&gt;
&lt;p&gt;In your &lt;span class="caps"&gt;QML&lt;/span&gt; app, you need to add a &lt;code&gt;ContentPeerPicker&lt;/code&gt;. This is a normal &lt;span class="caps"&gt;QML&lt;/span&gt; Item; specifically, showing it to the user is &lt;em&gt;your&lt;/em&gt; responsibility. So you might want to drop it in a Dialog, or a Page, or you might just put it at top level with &lt;code&gt;visible:hidden&lt;/code&gt; and then show it when appropriate (such as when your user taps a file or image or whatever that they want to open in another app).&lt;/p&gt;
&lt;p&gt;Your &lt;code&gt;ContentPeerPicker&lt;/code&gt; should look, at minimum, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ContentPeerPicker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;handler:&lt;/span&gt; &lt;span class="n"&gt;ContentHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Destination&lt;/span&gt;
    &lt;span class="nl"&gt;contentType:&lt;/span&gt; &lt;span class="n"&gt;ContentType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;All&lt;/span&gt;
    &lt;span class="nl"&gt;onPeerSelected:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;transfer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;peer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;exportItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cm"&gt;/* whatever the URL of the file you want to share is */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exportItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;transfer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;transfer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ContentTransfer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Charged&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nl"&gt;onCancelPressed:&lt;/span&gt; &lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The important parts here are &lt;code&gt;handler: ContentHandler.Destination&lt;/code&gt; (which means “I am a source for files which need to be opened in some other app”), and &lt;code&gt;contentType: ContentType.All&lt;/code&gt; (which means “I am a source for all types of file”).&lt;sup id="sf-using-the-content-hub-on-ubuntu-7-back"&gt;&lt;a title="You can see all the possible content types in the Ubuntu SDK ContentType documentation (https://developer.ubuntu.com/api/apps/qml/sdk-15.04/Ubuntu.Content.ContentType/), with misleading typos and all" href="#sf-using-the-content-hub-on-ubuntu-7" class="simple-footnote"&gt;7&lt;/a&gt;&lt;/sup&gt; After that&lt;sup id="sf-using-the-content-hub-on-ubuntu-8-back"&gt;&lt;a title="as mzanetti excellently described it" href="#sf-using-the-content-hub-on-ubuntu-8" class="simple-footnote"&gt;8&lt;/a&gt;&lt;/sup&gt; show it to the user somehow and connect to its &lt;code&gt;onPeerSelected&lt;/code&gt; method. When the user picks some other app to export to from this new Item, &lt;code&gt;onPeerSelected&lt;/code&gt; will be called; when the callback &lt;code&gt;onPeerSelected&lt;/code&gt; is called, the &lt;code&gt;peer&lt;/code&gt; property is valid. Get a transfer object to this peer: &lt;code&gt;var transfer = peer.request();&lt;/code&gt;, and then you need to fill in &lt;code&gt;transfer.items&lt;/code&gt;. This is a JavaScript list of &lt;code&gt;ContentItem&lt;/code&gt;s; specifically, define &lt;code&gt;ContentItem { id: exportItem }&lt;/code&gt; in your app, and then make a “list” of one item with &lt;code&gt;var items = new Array(); exportItem.url = PATH_TO_FILE_YOU_ARE_EXPORTING; items.push(exportItem); transfer.items = items;&lt;/code&gt;.&lt;sup id="sf-using-the-content-hub-on-ubuntu-9-back"&gt;&lt;a title="You can transfer more than one item, here." href="#sf-using-the-content-hub-on-ubuntu-9" class="simple-footnote"&gt;9&lt;/a&gt;&lt;/sup&gt; After that, set &lt;code&gt;transfer.state = ContentTransfer.Charged&lt;/code&gt; and your transfer begins; you can hide the &lt;code&gt;ContentPeerPicker&lt;/code&gt; by setting &lt;code&gt;cpp.visible=false&lt;/code&gt; at this point.&lt;/p&gt;
&lt;p&gt;And that’s how to export files over the Content Hub so that your app can make files available to others. There’s a second half of this (other apps export the files; your app wants to retrieve them, so let’s say they’re an app which needs a photo, and you’re an app with photos), which I’ll come to in a future blog post.&lt;/p&gt;
&lt;p&gt;As you can see from the large number of footnotes&lt;sup id="sf-using-the-content-hub-on-ubuntu-10-back"&gt;&lt;a title="not this one, though" href="#sf-using-the-content-hub-on-ubuntu-10" class="simple-footnote"&gt;10&lt;/a&gt;&lt;/sup&gt; there are a number of caveats with this whole process, in particular that a bunch of it isn’t documented. It will, I’m sure, over time, get better. Meanwhile, the above gives you the basics. Have fun.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-1"&gt;correctly &lt;a href="#sf-using-the-content-hub-on-ubuntu-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-2"&gt;ha! &lt;a href="#sf-using-the-content-hub-on-ubuntu-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-3"&gt;a bit more than that, if I’m honest &lt;a href="#sf-using-the-content-hub-on-ubuntu-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-4"&gt;or whatever you called it; &lt;code&gt;hooks.$APPNAME.apparmor&lt;/code&gt; in &lt;code&gt;manifest.json&lt;/code&gt; &lt;a href="#sf-using-the-content-hub-on-ubuntu-4-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-5"&gt;This is more confusing than it should be. If you’re using Ubuntu &lt;span class="caps"&gt;SDK&lt;/span&gt; as your editor, then clicking the big “+” button will load a list of possible apparmor permissions. Don’t double-click a permission; this will just show you what it means in code terms, rather irrelevantly. Instead, choose your permission (&lt;code&gt;content_exchange_source&lt;/code&gt; in this case) and then say Add &lt;a href="#sf-using-the-content-hub-on-ubuntu-5-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-6"&gt;you can also do `{“source”:[“pictures”]}. There may be other things you can write in there instead of “all” or “pictures”, but the documentation is surlily silent on such things. &lt;a href="#sf-using-the-content-hub-on-ubuntu-6-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-7"&gt;You can see all the possible content types in the Ubuntu &lt;span class="caps"&gt;SDK&lt;/span&gt; ContentType documentation (https://developer.ubuntu.com/api/apps/qml/sdk-15.04/Ubuntu.Content.ContentType/), with misleading typos and all &lt;a href="#sf-using-the-content-hub-on-ubuntu-7-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-8"&gt;as mzanetti excellently described it &lt;a href="#sf-using-the-content-hub-on-ubuntu-8-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-9"&gt;You can transfer more than one item, here. &lt;a href="#sf-using-the-content-hub-on-ubuntu-9-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-using-the-content-hub-on-ubuntu-10"&gt;not this one, though &lt;a href="#sf-using-the-content-hub-on-ubuntu-10-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 20 Aug 2015 02:19:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-08-20:2015/08/20/using-the-content-hub-on-ubuntu/</guid></item><item><title>Fooling the natives</title><link>http://www.kryogenix.org/days/2015/08/14/fooling-the-natives/</link><description>&lt;blockquote&gt;&lt;span class="dquo"&gt;“&lt;/span&gt;It’s not death if you refuse it.” — &lt;em&gt;The 
Crow&lt;/em&gt;&lt;/blockquote&gt;

&lt;p&gt;Over the last two weeks I have, inadvertently, 
conducted a very enlightening experiment on myself. I don’t think 
it’s repeatable or replicable — like gods interfering with free 
will or The Truman Show, the experiment doesn’t work if you know 
you’re inside it — but it’s rather illustrative. &lt;/p&gt;
&lt;p&gt;I’m a Google+ user&lt;sup id="sf-fooling-the-natives-1-back"&gt;&lt;a title="until they shut it down, which I hope they don’t do" href="#sf-fooling-the-natives-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. 
And the Android G+ app has been doing this annoying thing 
recently&lt;sup id="sf-fooling-the-natives-2-back"&gt;&lt;a title="since I switched phones from my old Nexus 4 with dodgy  wifi to the newer Nexus 4 which used to be my daughter’s" href="#sf-fooling-the-natives-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; where 
if I pull down to get new posts, sometimes it doesn’t work. Opening 
the side menu and closing it again always fixed it, so I put it down 
to some sort of bug in the G+ app and waited for it to be fixed. 
&lt;a href="https://plus.google.com/+StuartLangridge/posts/eZZxGkUj94L"&gt;Not very patiently.&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Other people reportedly didn’t have the problem, so I just put it 
down to weirdness and carried on. Well. I’ve just, this moment, 
realised why. When I first factory reset this phone and then started 
it up for the first time, I didn’t use the G+ app. I used the G+ 
website and bookmarked it to my home screen. And then, it seems, I 
forgot that I’d done it. &lt;/p&gt;
&lt;p&gt;The actual app doesn’t have the problem. &lt;/p&gt;
&lt;p&gt;This is interesting in two ways. &lt;/p&gt;
&lt;p&gt;The first and most obvious conclusion is that the web app isn’t quite as good as the native 
app. Obvious conclusion to draw, and also obviously correct; it had 
a bug that the native app didn’t, and one could reasonably make the 
case that it had that bug &lt;em&gt;because&lt;/em&gt; it’s a web app and not native. &lt;/p&gt;
&lt;p&gt;But. I used the thing constantly for a couple of weeks without 
realising it &lt;em&gt;was&lt;/em&gt; a web app. At no point other than this bug did it 
betray that it was anything other than the G+ app. Now I compare the 
two side by side, there are differences, but I didn’t notice them as 
being worse, or even different; I just used the app and it never 
occurred to me to question it. More importantly, at no point did the 
bug make me think that it was because I was using a web app, or 
question the nature of the app. Plenty of people will say that 
they’ve used web apps and found bugs and therefore web apps are bad. 
But I wonder how much that would get said if those people hadn’t 
&lt;em&gt;known&lt;/em&gt; they were using a web app? I just put it down to an app bug; 
it never occurred to me that it might be because it’s in JavaScript 
rather than Java, and at no other point and in no other way did the 
G+ web app give me cause to suspect or even question that it was 
anything other than the native app. &lt;/p&gt;
&lt;p&gt;Now, this is not always the 
case, by any stretch of the imagination. The Google team put a 
&lt;em&gt;lot&lt;/em&gt; of effort into their web stuff. Most “web apps” betray their 
true nature constantly. But this shows it’s basically &lt;em&gt;possible&lt;/em&gt;. If 
you don’t have the easy, lazy fallback of blaming any issues on a 
thing being of the web, then you don’t necessarily think of that as 
being a problem itself. &lt;/p&gt;
&lt;p&gt;This is encouraging.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-fooling-the-natives-1"&gt;until they shut it down, which I hope they don’t do &lt;a href="#sf-fooling-the-natives-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-fooling-the-natives-2"&gt;since I switched phones from my old Nexus 4 with dodgy 
wifi to the newer Nexus 4 which used to be my daughter’s &lt;a href="#sf-fooling-the-natives-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 14 Aug 2015 23:33:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-08-14:2015/08/14/fooling-the-natives/</guid></item><item><title>Availability</title><link>http://www.kryogenix.org/days/2015/06/28/availability/</link><description>&lt;p&gt;Some very interesting discussions happened at &lt;a href="https://www.edgeconf.com/2015-london"&gt;Edgeconf 5&lt;/a&gt;, including a detailed breakout session on making your web apps work for everyone which was well run by &lt;a href="https://twitter.com/lyzadanger"&gt;Lyza Danger Gardner&lt;/a&gt;. We talked about performance, and how if your page contains &lt;span class="caps"&gt;HTML&lt;/span&gt; then your users see your interface sooner. About fallbacks, and how if you&amp;#8217;re on a train with a dodgy 3g connection the site should work and that&amp;#8217;s a competitive advantage for you, because your competitors&amp;#8217; sites probably don&amp;#8217;t. About isomorphic JavaScript and how the promise of it is that your Angular website won&amp;#8217;t have to wait until it&amp;#8217;s all downloaded before showing anything. About Opera Mini&amp;#8217;s 250 million users. It&amp;#8217;s about whether the stuff you build is available to the most people. About your reach, and you being able to reach more than the&amp;nbsp;others. &lt;/p&gt;
&lt;p&gt;In the past, we&amp;#8217;ve called this &amp;#8220;progressive enhancement&amp;#8221;, but people don&amp;#8217;t like that word. Because it sounds hard. It sounds like you&amp;#8217;re not allowed to use modern tools in case one user has &lt;span class="caps"&gt;IE4&lt;/span&gt;. Like you have to choose between slick design and theoretical users in&amp;nbsp;Burma. &lt;/p&gt;
&lt;p&gt;Much rhetorical use has been made of the &lt;a href="https://gds.blog.gov.uk/2013/10/21/how-many-people-are-missing-out-on-javascript-enhancement/"&gt;gov.&lt;span class="caps"&gt;UK&lt;/span&gt; team&amp;#8217;s results of people not getting the script on their pages&lt;/a&gt;. The important part of that result was that 0.9% of visits didn&amp;#8217;t run the client side scripting even though they should have done. It&amp;#8217;s not people with JavaScript turned off, it&amp;#8217;s people with browsers that for some reason didn&amp;#8217;t run it at all. Did you open a hundred web pages yesterday? I probably did. So for every hundred web pages opened by someone, one of them didn&amp;#8217;t work. Maybe they were in a tunnel and the 3g cut out. Maybe they were on hotel WiFi. Maybe the &lt;span class="caps"&gt;CDN&lt;/span&gt; went down for ten seconds. Maybe the assets server crashed. But, for whatever reason, some of your site didn&amp;#8217;t work. Did that make your site &lt;em&gt;unavailable&lt;/em&gt; to them? Not if it was written right, written to be&amp;nbsp;available. &lt;/p&gt;
&lt;p&gt;And &amp;#8220;written right&amp;#8221; does not mean that you have double the work to build a version of your WebGL photo editor that works in Lynx. If you do this by having isomorphic &lt;span class="caps"&gt;JS&lt;/span&gt;, so your node server provides &lt;span class="caps"&gt;HTML&lt;/span&gt; which makes your pages load before your &lt;span class="caps"&gt;2MB&lt;/span&gt; of bower &lt;span class="caps"&gt;JS&lt;/span&gt; arrives, that&amp;#8217;s fine. Because you&amp;#8217;re available to everybody; a Macbook user in a cafe, a finance director on her Windows desktop, a phone-using tween in a field with no coverage, and yes even Opera Mini users in&amp;nbsp;Burma.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s not about giving up your frameworks to cater for fictional example users with scripting disabled. It is true that &lt;a href="http://kryogenix.org/code/browser/everyonehasjs.html"&gt;not everyone has &lt;span class="caps"&gt;JS&lt;/span&gt;&lt;/a&gt; and that sometimes that&amp;#8217;s you, so let&amp;#8217;s work out how to do this without regressing to&amp;nbsp;1998.&lt;/p&gt;
&lt;p&gt;So I&amp;#8217;m not going to be talking about progressive enhancement any more. I&amp;#8217;m going to be talking about availability. About reach. About my web apps being for everyone even when the universe tries to get in the&amp;nbsp;way. &lt;/p&gt;
&lt;p&gt;(Also, more on &lt;a href="http://www.kryogenix.org/code/browser/why-availability/"&gt;why availability matters&lt;/a&gt;, with smiling&amp;nbsp;diagrams!)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 28 Jun 2015 15:20:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-06-28:2015/06/28/availability/</guid></item><item><title>A review of Neal Stephenson’s Seveneves</title><link>http://www.kryogenix.org/days/2015/06/14/a-review-of-neal-stephensons-seveneves/</link><description>&lt;p&gt;On &lt;a href="http://www.badvoltage.org"&gt;Bad Voltage&lt;/a&gt; we review things: normally technology products, but occasionally other stuff that we like. In &lt;a href="http://www.badvoltage.org/1x44"&gt;the most recent show&lt;/a&gt; I reviewed Neal Stephenson&amp;#8217;s recently-released book &lt;em&gt;Seveneves&lt;/em&gt;, and I thought I&amp;#8217;d excerpt the review for here to give it a more permanent home for people who want to read&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;.oOo.&lt;/p&gt;
&lt;p&gt;Neal Stephenson isn&amp;#8217;t good at endings. Anyone who&amp;#8217;s read any of his stuff knows this. He is good at ideas, and they&amp;#8217;re what his books are about. The Diamond Age wasn&amp;#8217;t about its plot, it was about nanotechnology. Anathem was about Platonic epistemology. And Seveneves is about orbital&amp;nbsp;mechanics.&lt;/p&gt;
&lt;p&gt;Basically, the moon blows up. Nobody&amp;#8217;s very sure why. Because this is sci-fi rather than a Michael Bay film, the moon isn&amp;#8217;t instantly vapourised into nothingness; all the rock is still there, so instead of a moon you&amp;#8217;ve got a cloud of boulders the size of the moon, drifting around where the moon was. Then a popular scientist bloke on Earth, who is called Dubois Harris but really ought to be called Duneil DeGrasse Tyson, points out that all those rocks that make up the moon are going to come out of orbit and land on the earth. Specifically, earth is going to spend five thousand years being bombarded by rocks from the sky, which will cause some problems. Specifically specifically, it will destroy everything. Everybody&amp;#8217;s dead, everybody is dead, everybody&amp;#8217;s dead,&amp;nbsp;Dave.&lt;/p&gt;
&lt;p&gt;So the plan is set to stick a few thousand chosen people on the international space station so they survive and humanity continues to exist, in the two years before rocks fall and everyone dies. That&amp;#8217;s the first third of the book. There are some quite emotional scenes of people singing in St. Paul&amp;#8217;s Cathedral as the bombardment starts; Stephenson glosses over but makes you aware of the unbelieveable Niagara of politics which is going on back on Earth to decide who gets to live and who doesn&amp;#8217;t. The second third of the book is the story of these last remaining humans up in space, and this is where the orbital mechanics comes in; loving, pages-deep detail is devoted to how the international space station rotates its angle of perigee and moves to a higher plane of rotation or something. I have no idea whether this is true or not, but I assume it is. In American Psycho (the book, that is), Bret Easton Ellis went into huge stupid detail about the cravats and suits and pocket squares that the characters all wear, but secretly if anyone had actually worn the things he described they&amp;#8217;d have looked stupid&amp;#8230; because Ellis knew that everyone reading would just gloss over the actual brand names and have a picture in their heads of a bunch of jumped-up 80s yuppies. It is possible that what Stephenson describes is actually the space station doing insane loop-the-loops, as some sort of extremely erudite joke on the reader destined only for the astronauts among us. This is not helped by how the International Space Station gets re-christened&amp;nbsp;&amp;#8220;Izzy&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Anyway, those of you who are imagining that this becomes some sort of peace-and-flowers Star Trek world where everyone comes together would probably be better off reading something else. It&amp;#8217;s basically Lord of the Flies but in space. Now why didn&amp;#8217;t I see that coming? Oh, wait, I did. It&amp;#8217;s all quite believeably told, mind you, even if I just couldn&amp;#8217;t bear to actually read a chapter or two in the middle where a venial ex-President incites a schism. And we end up with there being only seven woman left from the cast of thousands, and everybody else is dead.&amp;nbsp;Dave.&lt;/p&gt;
&lt;p&gt;The third part of the book is&amp;#8230; five thousand years later. Humanity has recovered and built cities in space and is returning to the earth&amp;#8230; and is divided into seven separate tribes, based on which of the seven Eves they descended from. It&amp;#8217;s all rather Brave New World in feel, assuming that Huxley had stopped every two pages to lovingly describe how a space elevator works. And then it ends. Anathem had a proper ending, so Stephenson is getting better at this stuff, but Seveneves backslides a&amp;nbsp;bit.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s all rather 60s sci-fi in approach. Back when the star of the story was some cool new idea you had about space, like solar sails or geosynchronous satellites or whatever, and the ridiculous lantern-jawed spacer hero was really only there to stand around and explain the cool physics. Seveneves is like that. If you like that sort of thing, you&amp;#8217;ll like this. If you like Stephenson, you&amp;#8217;ll like this. If you like space engineering, you&amp;#8217;ll like&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;The Bad Voltage verdict? If you like things like this, you&amp;#8217;ll like this thing. Especially if you already know what a perihelion&amp;nbsp;is.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 14 Jun 2015 11:48:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-06-14:2015/06/14/a-review-of-neal-stephensons-seveneves/</guid></item><item><title>It also checks its JavaScript</title><link>http://www.kryogenix.org/days/2015/06/01/it-also-checks-its-javascript/</link><description>&lt;blockquote&gt;
&lt;p&gt;This site does make (fairly heavy) use of JavaScript. It attempts to do it in a transparent and generally nice way, so as to not impede the progress of non-JavaScript aware browsers, or people who don&amp;#8217;t like client-side scripting. You should also not be seriously inconvenienced when viewing this site without JavaScript, since the features that it adds are merely aids to navigation (or pointless chrome, depending on who you talk to :-)
With regards to colour schemes, the images and colours should degrade sufficiently down to 256 colours without a problem at all. I&amp;#8217;m not sure what they will look like in 16 colours; possibly horrible. If they do, I apologise.
This site uses (as far as I know) no browser specific tags. It also checks its JavaScript; it should work fine in &lt;span class="caps"&gt;IE3&lt;/span&gt; and Netscape 2 as well as higher versions by degrading its JavaScript calls through different versions, and, as mentioned above, JavaScript is not required for anything on the site.
I did, at one point, consider having differing versions of this site; one for JavaScript aware browsers, and one not. However, that means mirroring information, unless you deprive the low-bandwidth people of some of the information that is available in the other site, and that defeats the object entirely. So, this site, as mentioned above, degrades well (I believe).
If there&amp;#8217;s one thing I really dislike, it&amp;#8217;s seeing the phrase &amp;#8220;This site best viewed with&amp;#8221; or &amp;#8220;is required to view this site&amp;#8221; somewhere on a web page. Now, I&amp;#8217;m the first to admit that there may be problems with this site about which I do not know; I&amp;#8217;m not being deliberately hypocritical. (If you find that there&amp;#8217;s a problem with displaying some aspect of this site, I&amp;#8217;d appreciate it if you could email me and tell me about it; the address is on the personal page.) But optimising your site with &lt;span class="caps"&gt;IE&lt;/span&gt; or Netscape specific features, like (say) floating frames, or JavaScript 1.3, is a poor showing indeed. I have no objections to people who want to only make a feature available to (say) Netscape users, but please, please use JavaScript, or an Active Server Page, or a &lt;span class="caps"&gt;CGI&lt;/span&gt; script, to check your viewer&amp;#8217;s browser and transparently offer it to them. Don&amp;#8217;t tell me that I&amp;#8217;m missing features, just because I haven&amp;#8217;t got the latest version of the latest browser; just show me everything I need to see. And don&amp;#8217;t, especially don&amp;#8217;t, make navigation or use of your site depend on these &amp;#8216;optional&amp;#8217;&amp;nbsp;features!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Written by me. &lt;a href="https://web.archive.org/web/19991104155540/http://www.kryogenix.albatross.co.uk/website/index.shtml"&gt;In 1997&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;still&lt;/em&gt; don&amp;#8217;t think that use of your site should depend on&amp;nbsp;JavaScript.&lt;/p&gt;
&lt;p&gt;You probably don&amp;#8217;t have to use &lt;span class="caps"&gt;ASP&lt;/span&gt; any more,&amp;nbsp;though.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 01 Jun 2015 08:31:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-06-01:2015/06/01/it-also-checks-its-javascript/</guid></item><item><title>Disputing a BS YouTube copyright claim</title><link>http://www.kryogenix.org/days/2015/05/30/disputing-a-bs-youtube-copyright-claim/</link><description>&lt;p&gt;This morning I woke up to an email from YouTube saying that some music company had claimed I used their music without a licence in one of my videos, and so I would no longer be able to monetise that video.&lt;sup id="sf-disputing-a-bs-youtube-copyright-claim-1-back"&gt;&lt;a title="The ads still run, it’s just that they get the money now." href="#sf-disputing-a-bs-youtube-copyright-claim-1" class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hi Stuart Langridge, Due to a copyright claim, you are no longer monetising the following YouTube video. It is still playable on YouTube, but the copyright owner could choose to show ads on it. Video title: Potton in 2012: a video drive around. Copyrighted song: Can't Get Away. Claimed by: [Merlin] Awal UK Limited. Why this can happen: Your video might contain copyrighted content. A copyright claim on a video can prevent you from monetising it. The YouTube Team" src="http://www.kryogenix.org/images/ytcopyrightbs/ytcbs-2652.png" class="centre-shadow"&gt;&lt;/p&gt;
&lt;p&gt;Hang on, thought I. That’s &lt;a href="http://kryogenix.org/days/2012/04/09/potton-in-2012-a-video-drivearound/"&gt;the video where Dad and I drove up every street in Potton&lt;/a&gt;. Didn’t I use Creative Commons music for that?&lt;/p&gt;
&lt;p&gt;Yes. Yes I did. It was &lt;a href="http://soundcloud.com/austingraver/background-elevator-music-loop"&gt;“Background Elevator Music (Loop-able) by Austin Graver&lt;/a&gt;,&lt;sup id="sf-disputing-a-bs-youtube-copyright-claim-2-back"&gt;&lt;a title="not the most inspiring piece of music, but that was the idea" href="#sf-disputing-a-bs-youtube-copyright-claim-2" class="simple-footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; used under a Creative Commons Attribution licence, and that’s explicitly called out both in the YouTube description of the video and in the credits in the video itself.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://www.kryogenix.org/images/ytcopyrightbs/ytcbs-2941.png" class="centre-shadow"&gt;&lt;/p&gt;
&lt;p&gt;So, I follow the “View Claim Details” link and get told that “your video may include music that is owned by a third party”, which it does not, and I assume that some sort of automatic Shazam-like robot downloaded the video, incorrectly matched it against its list of owned music, and mechanically filed the claim.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://www.kryogenix.org/images/ytcopyrightbs/ytcbs-3022.png" class="centre-shadow"&gt;&lt;/p&gt;
&lt;p&gt;Fortunately, I then get a link to &lt;strong&gt;file a dispute&lt;/strong&gt;. Which gets a bit confusing: I’m then asked &lt;em&gt;why&lt;/em&gt; I’m filing a dispute, and presented with a little menu of options.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://www.kryogenix.org/images/ytcopyrightbs/ytcbs-3126.png" class="centre-shadow"&gt;&lt;/p&gt;
&lt;p&gt;Some of them are hilarious: “I believe that this copyright claim is not valid, because &lt;em&gt;I own the &lt;span class="caps"&gt;CD&lt;/span&gt;/&lt;span class="caps"&gt;DVD&lt;/span&gt; or bought the song online&lt;/em&gt;“, and “because… &lt;em&gt;I gave credit in the video&lt;/em&gt;“. I’m assuming that these are some YouTube lawyer’s equivalent of the pit trap in &lt;em&gt;Raiders of the Lost Ark&lt;/em&gt; where you inadvertently click “because… &lt;em&gt;I’m not selling the video&lt;/em&gt;” and then they strap you into a chair and spend thirty minutes lecturing you about how Copyright Does Not Work That Way, you filthy music thief. Anyway, I deftly avoid these obvious routes to death: what I want is an option which says “the music you say is in here is &lt;em&gt;not&lt;/em&gt; in here, you stupid robot”. That ought to be enough; as it happens, I can prove that I have the right to use the music that I &lt;em&gt;did&lt;/em&gt; use, but that’s not in question; they’ve accused me of using their copyrighted music, and I didn’t. There is no option for that. There’s nothing on the list of choices for why I’m disputing the claim which indicates that the claim is irrelevant rather than disputable. Pander to the licence holders much, YouTube? Anyway, from the list, “I have a licence or written permission from the proper rights holder to use this material” seems like the right one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reason for dispute: This video uses the copyrighted material at issue, but with the appropriate licence or written permission from the copyright owner." src="http://www.kryogenix.org/images/ytcopyrightbs/ytcbs-3415.png" class="centre-shadow"&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;BZZT&lt;/span&gt;. No! You see there where it says “This video uses the copyrighted material at issue”? My video does not. This dispute reason means “yep, I am using your music, but I’m allowed”. I’m not using their music at all. So this is not the right path. Other options from the menu of choices are “My use of the content meets the legal requirements for fair use or fair dealing under applicable copyright laws” and “The content is in the public domain or is not eligible for copyright protection”, both of which &lt;em&gt;also&lt;/em&gt; start from a proviso of “yep, I used your music”, which is not the case.&lt;/p&gt;
&lt;p&gt;So the only one remaining is “The video is my original content and I own all of the rights to it.” Which is not true either! It’s not my original content; the music is Austin Graver’s original content, which he allowed me to use. What it isn’t, Awal &lt;span class="caps"&gt;UK&lt;/span&gt; Limited, is &lt;em&gt;your&lt;/em&gt; music. YouTube don’t even seem to acknowledge anywhere that a copyright claim might be made erroneously, that I might look at a video of ducks on a river and say “hey! that video contains Sympathy For The Devil! Give me money!” when it absolutely does not. I should not have to prove that the music in the video is allowed — if it’s not, then that’s for the rightful copyright holder to dispute. If you claim my video contains your music and my video does not, then I should be able to say “my video does not contain the thing you’re complaining about” and that’s it. Come on, Google, sort it out.&lt;/p&gt;
&lt;p&gt;However, as ever, I don’t want to get my Google account suspended or something while I fight this out. So I wrote a reason for dispute which not only said “this is not your music” but explained why I was allowed to use the music that I &lt;em&gt;did&lt;/em&gt; use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The music in this video is not the song 'Can't Get Away' as suggested in the copyright claim. The music is the track 'Background Elevator Music (Loop-able)' by Austin Graver, available from (soundcloud link) and published under a Creative Commons Attribution 3.0 licence. This information is explicitly placed in the video description on YouTube, and is also in the credits section at the end of the video itself. I therefore state that the copyright claim against this video is invalid because the video does not contain the material that the claimant suggests it does." src="http://www.kryogenix.org/images/ytcopyrightbs/ytcbs-4613.png" class="centre-shadow"&gt;&lt;/p&gt;
&lt;p&gt;This is very annoying. Surely if I just log into YouTube and incorrectly challenge a bunch of videos for containing my copyrighted music when they don’t, there would be some repercussions? Some sort of punishment for me? Why does this not apply to them? The whole process is designed to make me feel like I have to humbly ask for permission, like Oliver Twist; sure, if I’d stuck a Beatles song on the soundtrack then I &lt;em&gt;would&lt;/em&gt; have to humbly beg permission, but I didn’t, and assuming &lt;em&gt;a priori&lt;/em&gt; that everyone &lt;em&gt;does&lt;/em&gt; seems more oppressive than it ought to be.&lt;/p&gt;
&lt;p&gt;Now we’ll see what happens next.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-disputing-a-bs-youtube-copyright-claim-1"&gt;The ads still &lt;em&gt;run&lt;/em&gt;, it’s just that they get the money now. &lt;a href="#sf-disputing-a-bs-youtube-copyright-claim-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-disputing-a-bs-youtube-copyright-claim-2"&gt;not the most inspiring piece of music, but that was the idea &lt;a href="#sf-disputing-a-bs-youtube-copyright-claim-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sat, 30 May 2015 10:16:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-30:2015/05/30/disputing-a-bs-youtube-copyright-claim/</guid></item><item><title>Unhappy about SPA frameworks</title><link>http://www.kryogenix.org/days/2015/05/24/unhappy-about-spa-frameworks/</link><description>&lt;p&gt;I&amp;#8217;ve been looking at single-page-app frameworks and not keen on any of them. The list at http://todomvc.com/ has a bunch, and I think I&amp;#8217;ve rejected them all &amp;#8212; I concede that some of these reasons are just flat-out prejudice or reasonably baseless bad feelings or seem pretty trivial to whoever&amp;#8217;s reading, so this is your chance to talk me into something you think is good and show me why my bad feelings are unjustified or&amp;nbsp;wrong.&lt;/p&gt;
&lt;p&gt;What I&amp;#8217;d like is two-way data binding, routing, and some notion of making separate isolated components. I don&amp;#8217;t have a pure &lt;span class="caps"&gt;REST&lt;/span&gt; put/delete/get &lt;span class="caps"&gt;API&lt;/span&gt; to back end onto, and I do not want a &amp;#8220;framework&amp;#8221; which has as a selling point that you can switch different routing or template components in and out; if I&amp;#8217;m assembling my own preferences out of bits, then I won&amp;#8217;t use a framework at all; I&amp;#8217;ll stitch them together myself. The point of using a framework is exactly that it does everything, and I&amp;#8217;m &lt;span class="caps"&gt;OK&lt;/span&gt; with using the framework&amp;#8217;s methods to do X, Y, and Z, rather than cursing because I want to use a different routing library. I am a large believer in identifying the approach that a particular tool takes, and not using the tool if what you want to do doesn&amp;#8217;t match that approach, even if it&amp;#8217;s possible to use the tool in ways other than its expected that you will. Every time I&amp;#8217;ve done this in the past I&amp;#8217;ve ended up being burned by it. The thing I want is to identify something which wants to do the things I plan, and then use it; not to find something which doesn&amp;#8217;t want to work that way and then make it work that way&amp;nbsp;instead.&lt;/p&gt;
&lt;p&gt;So, convince me I&amp;#8217;m wrong on your preferred choice from this list, or mention something I don&amp;#8217;t know about. And yes, I could write my own, but I&amp;#8217;m massively resistant to that because that just makes the another-day-another-framework problem even&amp;nbsp;worse.&lt;/p&gt;
&lt;p&gt;There is one non-negotiable rule: JavaScript. No other languages which compile to JavaScript. I don&amp;#8217;t mind things like React&amp;#8217;s &lt;span class="caps"&gt;JSX&lt;/span&gt;, because that&amp;#8217;s being used to write &lt;span class="caps"&gt;HTML&lt;/span&gt; (although I&amp;#8217;m not sure about it), but no Coffeescript libraries,&amp;nbsp;please.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Backbone.js&lt;/em&gt; - also requires underscore and jquery. Some ideal thing for this really ought to be self-contained. Concerned about &amp;#8220;is pre-configured to sync with a RESTful &lt;span class="caps"&gt;API&lt;/span&gt;&amp;#8221; too, and I have to plug in my own choice of templating&amp;nbsp;library.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;AngularJS&lt;/em&gt; - used it in the past for things. It makes me sad. There&amp;#8217;s too much magic; it&amp;#8217;s fine until something doesn&amp;#8217;t work, and then you have to reverse-engineer all the&amp;nbsp;magic.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ember.js&lt;/em&gt; - is massive and confuses the hell out of me. I did a bit of hacking on Discourse, which is Ember, and it took me about a day just to work out how to change the simplest&amp;nbsp;thing.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;KnockoutJS&lt;/em&gt; - seems way, way verbose. &lt;code&gt;function AppViewModel() { this.firstName = ko.observable("Bert"); this.fullName = ko.computed(function() { ... }, this); } ko.applyBindings(new AppViewModel());&lt;/code&gt;, seriously? Gnah. I hate&amp;nbsp;that.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Dojo&lt;/em&gt; - old. I never liked it the first time around, really, and I have the feeling that the zeitgeist has not gone with&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;span class="caps"&gt;YUI&lt;/span&gt;&lt;/em&gt; - old, and pretty much abandoned upstream afaik. Used it at Canonical; &amp;#8220;aspect-oriented programming&amp;#8221; is basically computed &lt;span class="caps"&gt;COME&lt;/span&gt; &lt;span class="caps"&gt;FROM&lt;/span&gt; from Intercal, which puts invisible trapdoors in your code so following the thread of control is hell on&amp;nbsp;legs.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Knockback.js&lt;/em&gt; - builds on Knockout, so see&amp;nbsp;knockout.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;CanJS&lt;/em&gt; - models stuff seems specifically designed to back end to a put/get/delete rest &lt;span class="caps"&gt;API&lt;/span&gt;, which I don&amp;#8217;t&amp;nbsp;have.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Polymer&lt;/em&gt; - seems like it may be ropy on iOS. Also, it has a nice big library of pre-built components, which is great, but they&amp;#8217;re all Material Design components, which is not great at all; I&amp;#8217;m not putting an Android-themed app on other platforms, for the same reason I wouldn&amp;#8217;t put an app which looks like iOS on&amp;nbsp;Android.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;React&lt;/em&gt; - I fear React. It seems to be the popular thing, but it&amp;#8217;s very much a thing where one steps out of the world and into the React World instead. Have spoken to a number of people using it for real projects and I don&amp;#8217;t like the idea of&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Mithril&lt;/em&gt; - I utterly utterly do not understand the &lt;code&gt;m.prop&lt;/code&gt; stuff. I don&amp;#8217;t know whether the docs explain it badly or I&amp;#8217;m just not getting it, but I completely cannot grasp the Zen of Mithril. Shame, because it looks cool, if I could get it, which I&amp;nbsp;can&amp;#8217;t.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ampersand&lt;/em&gt; - I&amp;#8217;m in two minds about the &amp;#8220;it&amp;#8217;s a zillion small libraries&amp;#8221; thing. More to the point, I have no sense of how to structure the overall application; individual bits I can see how to do, but I don&amp;#8217;t have a good sense of how to put it&amp;nbsp;together&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Flight&lt;/em&gt; - I&amp;#8217;m not sure this is the right thing for new apps. For restructuring an existing thing, I think it&amp;#8217;d be good, but I&amp;#8217;m building from&amp;nbsp;scratch.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Vue.js&lt;/em&gt; - doesn&amp;#8217;t do routing or provide large-scale structure; they have some notes saying &amp;#8220;hey, that means you can do it your way&amp;#8221; which I don&amp;#8217;t want to&amp;nbsp;do&lt;/li&gt;
&lt;li&gt;&lt;em&gt;MarionetteJS&lt;/em&gt; - depends on Backbone, so see&amp;nbsp;Backbone.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;TroopJS + RequireJS&lt;/em&gt; - lots of dependencies. I do not get how to actually structure an application with it, and the docs are not helpful at&amp;nbsp;this.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wish I were happy about any of these. To be honest, my secret worry is that all frameworks are either incomplete, so I don&amp;#8217;t want them, or do do everything I want but are consequentially too magical and so I don&amp;#8217;t like them. I hope I&amp;#8217;m wrong and there&amp;#8217;s either something I&amp;#8217;ve missed or a framework I don&amp;#8217;t know about. Speak on, readers: &lt;a href="https://plus.google.com/u/0/+StuartLangridge/posts/a5L9czA7ZfH"&gt;leave comments on Google Plus&lt;/a&gt; or on your own site by&amp;nbsp;webmention.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 24 May 2015 23:38:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-24:2015/05/24/unhappy-about-spa-frameworks/</guid></item><item><title>Burning trees</title><link>http://www.kryogenix.org/days/2015/05/20/burning-trees/</link><description>&lt;p&gt;Today I made a little thing, which I find rather more fascinating than I probably should. You see, &lt;a href="http://omgubuntu.com"&gt;Joey&lt;/a&gt; &lt;a href="https://plus.google.com/u/0/+joeysneddon/posts/4g1pwF51Vfd"&gt;said&lt;/a&gt;, &amp;#8220;I wonder if &lt;a href="http://www.omgubuntu.co.uk/2012/02/the-sands-of-time-linux-desktop"&gt;this&lt;/a&gt; still&amp;nbsp;works?&amp;#8221;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.kryogenix.org/images/sandswall.jpg" alt="'The Sands of Time' Linux Desktop" style="width:100%"&gt;&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s quite cool &amp;#8212; sand dunes in front of a clock &amp;#8212; and it made me remember that years and years ago you used to get these programs where you could click and it would create sand which accumulated at the bottom of the window. The very first one I saw was on the Archimedes. But what came along a little later was one where you could click to produce various different substances &amp;#8212; sand, oil, water, fire &amp;#8212; and oil floated on water, fire set the oil alight, and so on. It was all rather amazing back when the phrase &amp;#8220;particle system&amp;#8221; hadn&amp;#8217;t been invented. Anyway, I thought: hey, what&amp;#8217;d be cool is if the clock in that picture was obscured by actual moving sand, rather than just a static picture of sand dunes. A tiny bit of poking around brought me to &lt;a href="http://dust.awevation.com/"&gt;Dust&lt;/a&gt;, an implementation of precisely the sand/oil/water thing with WebGL in the browser. So I completely forgot about the clock thing and just played with Dust. Which is rather&amp;nbsp;fun.&lt;/p&gt;
&lt;p&gt;After some faffing around I discovered that it had two things I liked: &amp;#8220;lava&amp;#8221;, which is like a static piece of fire in that it ignites things that touch it but is not itself consumed, and &amp;#8220;Life Itself&amp;#8221; which is stuff that grows, like bacteria in a petri dish. But the life stuff is ignited by lava. so if you drop a couple of tiny bits of lava into the world, and then some green fungus life stuff, the fungus grows and takes over the whole window until it touches the lava, and then it gets burned up and vanishes&amp;#8230; but, critically for this, it isn&amp;#8217;t entirely consumed. A few specks remain, and those specks start growing again. Very cool. I spent ages just watching&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;Then I thought, well, this is nice and all, but this Dust thing uses WebGL, which is hassle, and it can&amp;#8217;t actually cope with filling its whole window up with particles because it runs out of memory or space or shaders or something. So I figured I&amp;#8217;d lash together a quick version&amp;nbsp;myself.&lt;/p&gt;
&lt;p&gt;&lt;a class="jsbin-embed" href="http://sil.jsbin.com/zovumo/embed?output"&gt;Burning Trees on jsbin.com&lt;/a&gt;&lt;script src="http://static.jsbin.com/js/embed.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;And lo, it is so: a noddy version in JavaScript. This is superbly inefficient; it regenerates the whole grid and then &lt;code&gt;innerHTML&lt;/code&gt;s it into the page at every clock tick, and it&amp;#8217;s completely character-based, like some sort of &lt;span class="caps"&gt;BBC&lt;/span&gt; Micro program. (At least it&amp;#8217;s using &lt;code&gt;requestAnimationFrame&lt;/code&gt; so it doesn&amp;#8217;t hammer the &lt;span class="caps"&gt;CPU&lt;/span&gt; in a background tab!) But I could still sit there and watch it for ages. I really like it; the sense of watching the green take over and then get burned&amp;nbsp;back.&lt;/p&gt;
&lt;p&gt;I think what I&amp;#8217;d like to do with it is make it considerably more efficient and then try to make it a sort of &amp;#8220;live wallpaper&amp;#8221; for my Ubuntu desktop. For that, I need to read about Life rendering algorithms; &lt;a href="http://pmav.eu/stuff/javascript-game-of-life-v3.1.1/"&gt;this Life implementation at pmav.eu&lt;/a&gt; uses a &lt;span class="caps"&gt;JS&lt;/span&gt; port of &lt;a href="http://dotat.at/prog/life/life.html"&gt;Tony Finch&amp;#8217;s List Life algorithm&lt;/a&gt; to do the calculations. There&amp;#8217;s also &lt;a href="http://golly.sourceforge.net/"&gt;Golly&lt;/a&gt;, the Life simulator, which can do things ridiculously fast, and it&amp;#8217;s possible to program your own ruleset (rather than just follow John Conway&amp;#8217;s original rules), and if I understood how to do this (I do not) then I could probably turn my little Burning Trees thing into something that&amp;#8217;s renderable by Golly at a much bigger size than my inefficient JavaScript can manage. There seems to be a quite large community of people working on Life, still, to my amazement. Where do these people hang out, I wonder? So I can ask them how to write a Golly ruleset. And then see if I can make Golly run fullscreen and render to the root window and have the coolest desktop background imaginable, especially once it&amp;#8217;s graphics rather than block characters, and maybe the green is different colours depending on how old it is, and the fire has a slightly cooler effect, and&amp;#8230; well, you can see, I like this idea, so making it look pretty would be wonderful. Maybe I&amp;#8217;ll even put a clock behind it. But if I did it&amp;#8217;d either be &lt;a href="http://sil.jsbin.com/mexuka"&gt;this one which I pinched from an imgur idea&lt;/a&gt; or my favourite clock that I wrote, which is&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;a class="jsbin-embed" href="http://sil.jsbin.com/qafag/embed?output"&gt;Stuart&amp;#8217;s cool clock on jsbin.com&lt;/a&gt;&lt;script src="http://static.jsbin.com/js/embed.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;Anyway, none of this is what Joey wanted. Sorry, Joey. I hope the thing you wanted still works, even if it is &lt;em&gt;waaaay&lt;/em&gt; complex to set up. Someone should step up and make that easier for you, because I like it when we have pretty things, and there aren&amp;#8217;t enough of them on our&amp;nbsp;desktop.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 20 May 2015 00:58:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-20:2015/05/20/burning-trees/</guid></item><item><title>Your periodic reminder that</title><link>http://www.kryogenix.org/days/2015/05/14/your-periodic-reminder-that/</link><description>&lt;p&gt;Here are things, according to &lt;a href="https://twitter.com/search?q=%22your%20periodic%20reminder%20that%22&amp;amp;src=typd"&gt;Twitter people&lt;/a&gt;, of which you need to be periodically&amp;nbsp;reminded.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;unless you have gender specific bathrooms in your home, you use gender neutral bathrooms on the&amp;nbsp;reg&lt;/li&gt;
&lt;li&gt;one can both disagree with an act but also understand the impulse behind&amp;nbsp;it&lt;/li&gt;
&lt;li&gt;George Osborne promised new powers to English cities don&amp;#8217;t even roll back the 1983 Local Govt&amp;nbsp;dissolution&lt;/li&gt;
&lt;li&gt;I still think Manitoba might be&amp;nbsp;fictitious&lt;/li&gt;
&lt;li&gt;this is Photoshop&amp;#8217;s default&amp;nbsp;pattern&lt;/li&gt;
&lt;li&gt;the best facial exfoliant is still that baking powder sitting on your pantry&amp;nbsp;shelf&lt;/li&gt;
&lt;li&gt;you&amp;#8217;re not being censored when people tell you a conversation is&amp;nbsp;over&lt;/li&gt;
&lt;li&gt;data binding is much faster than virtual &lt;span class="caps"&gt;DOM&lt;/span&gt;&amp;nbsp;diffing&lt;/li&gt;
&lt;li&gt;Douglas Alexander got to be an elder statesman in his 40s by being elected in his&amp;nbsp;20s&lt;/li&gt;
&lt;li&gt;Sequel is&amp;nbsp;awesome&lt;/li&gt;
&lt;li&gt;classical logic is constructivist logic plus&amp;nbsp;lies&lt;/li&gt;
&lt;li&gt;Roseanne Barr is a transphobic garbage person; sorry about your childhood&amp;nbsp;memories&lt;/li&gt;
&lt;li&gt;finding two things are correlated tells you &lt;span class="caps"&gt;ABSOLUTELY&lt;/span&gt; &lt;span class="caps"&gt;ZERO&lt;/span&gt; about what &lt;span class="caps"&gt;CAUSES&lt;/span&gt; &lt;span class="caps"&gt;EITHER&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;sage grouse exist and look like&amp;nbsp;this&lt;/li&gt;
&lt;li&gt;Zimbardo is a&amp;nbsp;hack&lt;/li&gt;
&lt;li&gt;Bring!&amp;nbsp;rocks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don&amp;#8217;t think any of those needed any reminder at all, let alone a periodic&amp;nbsp;one.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 14 May 2015 18:37:00 +0100</pubDate><guid>tag:www.kryogenix.org/days,2015-05-14:2015/05/14/your-periodic-reminder-that/</guid></item></channel></rss>