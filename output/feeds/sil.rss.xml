<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>as days pass by - sil</title><link>https://www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><lastBuildDate>Mon, 03 Feb 2025 19:17:00 +0000</lastBuildDate><item><title>Blog Questions Challenge</title><link>https://www.kryogenix.org/days/2025/02/03/blog-questions-challenge/</link><description>&lt;p&gt;The latest thing circulating around people still blogging is the Blog Questions Challenge; &lt;a href="https://hicks.design/journal/blog-questions-challenge"&gt;Jon&lt;/a&gt; did it (and &lt;a href="https://mastodon.social/@jonhicks/113922089500368028"&gt;asked if I was&lt;/a&gt;) and so has &lt;a href="https://adactio.com/journal/21674"&gt;Jeremy&lt;/a&gt; and &lt;a href="https://ethanmarcotte.com/wrote/blog-questions-challenge/"&gt;Ethan&lt;/a&gt; and a bunch of others, so clearly it is time to get on board, fractionally late as ever.&lt;/p&gt;
&lt;p&gt;In my defence, it was &lt;a href="https://www.kryogenix.org/days/2025/01/30/forty-nine/"&gt;my birthday&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Why did you start blogging in the first place?&lt;/h2&gt;
&lt;p&gt;Some other people I admired were doing it. I think the person I was most influenced by was &lt;a href="https://simonwillison.net"&gt;Simon Willison&lt;/a&gt;, who is also still at it&lt;sup id="sf-blog-questions-challenge-1-back"&gt;&lt;a href="#sf-blog-questions-challenge-1" class="simple-footnote" title="although no longer at simon.incutio.com -- what even was Incutio?"&gt;1&lt;/a&gt;&lt;/sup&gt;, but a whole bunch of people got on board at around that same time, back in the early days when you be a medium-sized fish in a small pool just by participating. Mark Pilgrim springs to mind as well -- that's a good example of having influence, when the "standard format" of permalinks got sort of hashed out collectively to be /2025/02/03/blog-questions-challenge, which a lot of places still adhere to (although it feels faintly quaint, these days).&lt;/p&gt;
&lt;p&gt;Interestingly, a lot of the early posts on this site are short two-sentence half-paragraph things, throwaway thoughts, and that all got sucked up by social media... but social media hadn't been invented, back in 2002.&lt;/p&gt;
&lt;p&gt;Also interestingly: the second post on this here blog&lt;sup id="sf-blog-questions-challenge-2-back"&gt;&lt;a href="#sf-blog-questions-challenge-2" class="simple-footnote" title='I resisted the word "blog" for a long time, calling it a "weblog", and the activity being "weblogging", because "blog" is such an ugly word. Like most of the fights I was picking in the mid 2000s, this also seems faintly antiquated and passé now. Sic transit gloria mundi and all that.'&gt;2&lt;/a&gt;&lt;/sup&gt; was &lt;a href="https://www.kryogenix.org/days/2002/04/21/release/"&gt;bitching at Mozilla about the Firefox release schedule&lt;/a&gt;. Nothing new under the sun.&lt;sup id="sf-blog-questions-challenge-3-back"&gt;&lt;a href="#sf-blog-questions-challenge-3" class="simple-footnote" title="or &amp;quot;nihil sub sole novum&amp;quot;, since we're doing Latin quotes today"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;What platform are you using to manage your blog and why did you choose it? Have you blogged on other platforms before?&lt;/h2&gt;
&lt;p&gt;Cor. When it started, this site was being run by &lt;a href="https://www.kryogenix.org/code/castalian/"&gt;Castalian&lt;/a&gt;, which was basically "classic ASP but Python instead of VBScript", a thing I built. This is because I was using ASP at work on Windows machines, so that was the model for "dynamic web pages" that I understood, but I wasn't on Windows&lt;sup id="sf-blog-questions-challenge-4-back"&gt;&lt;a href="#sf-blog-questions-challenge-4" class="simple-footnote" title="and Windows's relationship with Python has always been a bit unsteady, although it's better these days now that Microsoft are prepared to acknowledge that other people can have ideas"&gt;4&lt;/a&gt;&lt;/sup&gt; and so I built it myself. No idea if it still works and I very much doubt it since it's old enough to buy all the drinks these days.&lt;/p&gt;
&lt;p&gt;After that it was &lt;a href="https://en.wikipedia.org/wiki/Movable_Type"&gt;Movable Type&lt;/a&gt; for a bit and then, because I'd discovered the idea of funky caching&lt;sup id="sf-blog-questions-challenge-5-back"&gt;&lt;a href="#sf-blog-questions-challenge-5" class="simple-footnote" title='you write the pages in an online form, but then a server process builds a static HTML version of them; the advanced version of this where pages were only built on request was called "funky caching" back then'&gt;5&lt;/a&gt;&lt;/sup&gt; it was &lt;a href="https://www.kryogenix.org/code/vellum/"&gt;Vellum&lt;/a&gt;, that model (a) in Python and (b) written by me. &lt;em&gt;Then&lt;/em&gt; for a while it was "Thort", which was based on CouchDB&lt;sup id="sf-blog-questions-challenge-6-back"&gt;&lt;a href="#sf-blog-questions-challenge-6" class="simple-footnote" title="if a disinterested observer were to consider this progression, they might unfairly but accurately conclude that whatever this site runs on is basically a half-arsed system I built based on the latest thing I'm interested in, mightn't they?"&gt;6&lt;/a&gt;&lt;/sup&gt;, and then it was WordPress, and then in 2014 I &lt;a href="https://www.kryogenix.org/days/2014/02/13/static-electricity/"&gt;switched from WP to a static build&lt;/a&gt; based on &lt;a href="https://getpelican.com/"&gt;Pelican&lt;/a&gt;, which it still is to this day. Crikey, that was over ten years ago!&lt;sup id="sf-blog-questions-challenge-7-back"&gt;&lt;a href="#sf-blog-questions-challenge-7" class="simple-footnote" title="tempus fugit. OK, I'll stop now."&gt;7&lt;/a&gt;&lt;/sup&gt; I like static site generators: I even wrote &lt;a href="https://websitesetup.org/best-static-site-generators/"&gt;10 Popular Static Site Generators&lt;/a&gt; a few years ago for WebsiteSetup which I think is still pretty good.&lt;/p&gt;
&lt;h2&gt;How do you write your posts? For example, in a local editing tool, or in a panel/dashboard that’s part of your blog?&lt;/h2&gt;
&lt;p&gt;In my text editor, which is &lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;. The static setup is here on my machine; I write a post, I type &lt;code&gt;make kryogenix&lt;/code&gt;, and it runs a whole little series of scripts which invoke Pelican to build the static HTML for the blog, do a few things that I've added (such as add footnote handling&lt;sup id="sf-blog-questions-challenge-8-back"&gt;&lt;a href="#sf-blog-questions-challenge-8" class="simple-footnote" title="like this!"&gt;8&lt;/a&gt;&lt;/sup&gt;, make &lt;code&gt;og:image&lt;/code&gt; links and images&lt;sup id="sf-blog-questions-challenge-9-back"&gt;&lt;a href="#sf-blog-questions-challenge-9" class="simple-footnote" title="an idea I stole shamelessly from Zach Leatherman"&gt;9&lt;/a&gt;&lt;/sup&gt;, and sort of handle webmentions but that's broken at the moment) and then copy it up to my actual website (via git) to be published.&lt;/p&gt;
&lt;p&gt;It's all a bit lashed together, to be honest, but this whole website is like that. It is something like an ancient city, such as London or Rome; what this site is mostly built on is the ruins of the previous history of the city. Sometimes the older bits poke through because they're still actually OK, or they never got updated; sometimes they've been replaced with the new shiny. You should see the &lt;code&gt;.htaccess&lt;/code&gt; file, which operates a bewildering set of redirects through about six different generations of URLs so &lt;a href="https://www.w3.org/Provider/Style/URI"&gt;all the old links still work&lt;/a&gt;.&lt;sup id="sf-blog-questions-challenge-10-back"&gt;&lt;a href="#sf-blog-questions-challenge-10" class="simple-footnote" title="Outgoing links are made to continue to work via unrot.link from the excellent Remy Sharp"&gt;10&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;When do you feel most inspired to write?&lt;/h2&gt;
&lt;p&gt;When the muse seizes me. Sometimes that's a lot; sometimes not. I do quite a lot of &lt;a href="https://www.kryogenix.org/books/"&gt;paid writing&lt;/a&gt; as part of my various day jobs for others, and quite a lot of creative writing as part of running a &lt;a href="https://www.youtube.com/@pbproleplaying3278"&gt;play-by-post D&amp;amp;D campaign&lt;/a&gt;, and that sucks up a reasonable amount of the writing energy, but there are things which just demand going on the website. Normally these days it's things where I want them to be a reference of some kind -- maybe of a useful tech thing, or some important thought, or something interesting -- for myself or for others. &lt;/p&gt;
&lt;p&gt;Alternatively you might think the answer is "while in the pub, which leads to making random notes in an email to myself from my phone and then writing a blog post when I get home" and while this is not true, it's not &lt;em&gt;not&lt;/em&gt; true either. I do not want to do a histogram of posting times from this site because I am worried that I will find that the majority are at, like, 11.15pm.&lt;/p&gt;
&lt;h2&gt;Do you publish immediately after writing, or do you let it simmer a bit as a draft?&lt;/h2&gt;
&lt;p&gt;Always post immediately. I have discovered about myself that, for semi-ephemeral stuff like posts her, or projects that I do for fun, that I need to get them done as part of that initial burst of inspiration and energy. If I don't get it done, then my enthusiasm will fade and they will linger half-finished for ever and never get completed. I don't necessarily &lt;em&gt;like&lt;/em&gt; this, but I've learned to live with it. If I think of an idea for a post and write a note about it and then &lt;em&gt;don't&lt;/em&gt; do it, when I rediscover the note a week later it will not seem anything like as compelling. So posts are mostly written as one long stream-of-consciousness to capitalise on the burning of the creative fire before it gets doused by time or work or everything going on in the world. Carpe diem, I guess.&lt;sup id="sf-blog-questions-challenge-11-back"&gt;&lt;a href="#sf-blog-questions-challenge-11" class="simple-footnote" title="I was lying about not doing this, before."&gt;11&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h1&gt;What’s your favourite post on your blog?&lt;/h1&gt;
&lt;p&gt;Maybe &lt;a href="https://www.kryogenix.org/days/2012/02/04/it-s-cold-outside/"&gt;It's Cold Outside&lt;/a&gt;, or &lt;a href="https://www.kryogenix.org/days/2012/03/11/monkey-island-2-for-about-the-fifth-time/"&gt;Monkey Island 2, for about the fifth time&lt;/a&gt;, or &lt;a href="https://www.kryogenix.org/days/2017/10/15/charles-paget-wade-and-the-underthing/"&gt;Charles Paget Wade and the Underthing&lt;/a&gt; for writing, although each of them have little burrs in the wording that I want to polish when I re-read them. The &lt;a href="https://www.kryogenix.org/days/2025/01/30/forty-nine/"&gt;series of birthday posts&lt;/a&gt; have been going on since the beginning, one every year, which probably wins for consistency. For technical stuff, maybe &lt;a href="https://www.kryogenix.org/days/2014/05/13/some-thoughts-on-soonsnap-and-little-big-details/"&gt;Some thoughts on soonsnap and little big details&lt;/a&gt; (now sadly defunct) or &lt;a href="https://www.kryogenix.org/days/2013/06/06/the-thing-and-the-whole-of-the-thing-on-drm-in-html/"&gt;The thing and the whole of the thing: on DRM in HTML&lt;/a&gt;. I like my own writing, mostly. Arrogant, I know.&lt;/p&gt;
&lt;h2&gt;Any future plans for your blog? Maybe a redesign, a move to another platform, or adding a new feature?&lt;/h2&gt;
&lt;p&gt;Not really at the moment, but, as above, these things tend to arrive in a blizzard of excitement and implementation and then linger forever once done. But right now... it all seems to work OK. Ask me when I get back from the pub.&lt;/p&gt;
&lt;h2&gt;Next?&lt;/h2&gt;
&lt;p&gt;Well, I should probably point back at some of the people who inspired me to do this or other things and keep doing so to this day. So &lt;a href="https://simonwillison.net/"&gt;Simon&lt;/a&gt;, &lt;a href="https://remysharp.com/"&gt;Remy&lt;/a&gt;, and &lt;a href="https://brucelawson.co.uk/"&gt;Bruce&lt;/a&gt;, perhaps!&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-blog-questions-challenge-1"&gt;although no longer at &lt;code&gt;simon.incutio.com&lt;/code&gt; -- what even was Incutio? &lt;a href="#sf-blog-questions-challenge-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-2"&gt;I resisted the word "blog" for a &lt;em&gt;long&lt;/em&gt; time, calling it a "weblog", and the activity being "weblogging", because "blog" is such an ugly word. Like most of the fights I was picking in the mid 2000s, this also seems faintly antiquated and passé now. Sic transit gloria mundi and all that. &lt;a href="#sf-blog-questions-challenge-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-3"&gt;or "nihil sub sole novum", since we're doing Latin quotes today &lt;a href="#sf-blog-questions-challenge-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-4"&gt;and Windows's relationship with Python has always been a bit unsteady, although it's better these days now that Microsoft are prepared to acknowledge that other people can have ideas &lt;a href="#sf-blog-questions-challenge-4-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-5"&gt;you write the pages in an online form, but then a server process builds a static HTML version of them; the advanced version of this where pages were only built on request was called "funky caching" back then &lt;a href="#sf-blog-questions-challenge-5-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-6"&gt;if a disinterested observer were to consider this progression, they might unfairly but accurately conclude that whatever this site runs on is basically a half-arsed system I built based on the latest thing I'm interested in, mightn't they? &lt;a href="#sf-blog-questions-challenge-6-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-7"&gt;tempus fugit. OK, I'll stop now. &lt;a href="#sf-blog-questions-challenge-7-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-8"&gt;like this! &lt;a href="#sf-blog-questions-challenge-8-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-9"&gt;an idea I stole &lt;em&gt;shamelessly&lt;/em&gt; from &lt;a href="https://www.zachleat.com/"&gt;Zach Leatherman&lt;/a&gt; &lt;a href="#sf-blog-questions-challenge-9-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-10"&gt;&lt;em&gt;Outgoing&lt;/em&gt; links are made to continue to work via &lt;a href="https://unrot.link/"&gt;unrot.link&lt;/a&gt; from the excellent &lt;a href="https://remysharp.com/"&gt;Remy Sharp&lt;/a&gt; &lt;a href="#sf-blog-questions-challenge-10-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-blog-questions-challenge-11"&gt;I was lying about not doing this, before. &lt;a href="#sf-blog-questions-challenge-11-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 03 Feb 2025 19:17:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2025-02-03:/days/2025/02/03/blog-questions-challenge/</guid><category>General musings</category></item><item><title>Forty Nine</title><link>https://www.kryogenix.org/days/2025/01/30/forty-nine/</link><description>&lt;p&gt;The sum of the digits of the square of 49 (2401) is the square root of 49.&lt;/p&gt;
&lt;p&gt;49 is the first square where the digits are squares. In this case, 4 and 9 are square numbers. &lt;/p&gt;
&lt;p&gt;It seems that 49 is an age of squares.&lt;/p&gt;
&lt;p&gt;I find myself increasingly OK with this.&lt;/p&gt;
&lt;p&gt;It is interesting, although really quite disillusioning, reading through the series of posts I've done on my birthday (follow the links back from &lt;a href="https://www.kryogenix.org/days/2024/01/30/somewhere-between-silver-and-tin/"&gt;last year&lt;/a&gt; for 22 years now) and seeing the trend in recent years. The world has got more worrying. A lot more. I hate this.&lt;/p&gt;
&lt;p&gt;So I've tried to find joy where I can get it. I'll give you an example. I looked up the number 49 for this, the same as I always do, and apparently 49 is the smallest discriminant of a totally real cubic field. Now, I'm sure that there are maths people out there who understand this. But to me, it is impossible to read this without putting on a mock Valley bro accent: &lt;em&gt;yeah brah, this field is&lt;/em&gt; todally &lt;em&gt;real, yah?&lt;/em&gt; And that made me smile. Bill dropped a birthday message on me at half seven this morning. Yesterday, I remembered a throwaway joke line that &lt;a href="https://popey.com/"&gt;popey&lt;/a&gt; dropped on me in 2015 and I literally laughed out loud in my own living room at the thought of it. Two days ago &lt;a href="https://jessica.tech"&gt;Jess&lt;/a&gt; and I went to see &lt;a href="https://murderontheorientexpressplay.com/"&gt;Murder on the Orient Express&lt;/a&gt; on stage at the Alexandra Theatre. Tonight I've been for beers with &lt;a href="https://brucelawson.co.uk"&gt;Bruce&lt;/a&gt; and Matt. My D&amp;amp;D group are about to confront Harazos to let them perform a ritual they've made up. Everyone in my team at Barnardo's was really nice about my birthday. None of this helps fix the world crashing down around us, but all of it certainly makes it easier to cope with, because all of it is a little bit of joy, of niceness, in the midst of unjoy and unniceness. Thank you, all of you.&lt;/p&gt;
&lt;p&gt;This has been not a great year. There's been ups and there's been downs. I'm still a lot better off than almost everyone -- I'm not under threat, I'm not more under threat than I was before, I can afford to do what I like as long as what I like isn't too extravagant. But it has nonetheless been tough. Maybe 2025 will be better, although to be honest I doubt it. And I have this sense of regret, not about the world getting worse, but that the idea that the world might get better has basically gone away. When I was younger, the thing was that the world &lt;em&gt;would&lt;/em&gt; get better, year on year, as time passed. And I am 100% sure that this was a thing that I got to think because I was privileged to not be being screwed over by the world. But I still had that thought, that things were OK today and would be slightly more than OK tomorrow, and at some point that went away. Things probably won't be better tomorrow. If they're the same, that probably in itself is a victory. This isn't really my tragedy; it's for people younger than me, who haven't experienced this change, who assume that things getting steadily more grey and sad and worse is just the way the world is; that's just &lt;em&gt;normal&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;So I look for little bits of joy. Hopefully you have some little bits of joy yourself, as I do. Happy birthday to you, even if it's not your birthday. Eat some cake.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 30 Jan 2025 23:04:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2025-01-30:/days/2025/01/30/forty-nine/</guid><category>General musings</category></item><item><title>My Keys</title><link>https://www.kryogenix.org/days/2024/11/04/my-keys/</link><description>&lt;p&gt;I have a problematic relationship with keys.&lt;/p&gt;
&lt;p&gt;Well, that's not true. I have a problematic relationship with key &lt;em&gt;rings&lt;/em&gt;. For some reason, my pockets are a violently hostile environment for things I put in them. I don't really understand why this is, but it's true. Keyrings bend out of shape; the concentric rings separate, and my actual keys fall off of them. People have expressed scepticism about this in the past, and they've been wrong and I've been right. The last time I complained about this, I thought I'd come up with a solution where I bought a keyring which was a tiny padlock. It lasted three days before a bolt sheared off. You can see the whole thing on &lt;a href="https://www.kryogenix.org/twitter/1192443341889265667/"&gt;posts made to twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At that point most people would give up, or be sad, or just live with split rings continually letting them down. But most people don't have a dad who is a king of engineering.&lt;/p&gt;
&lt;p&gt;My dad made me this.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/keyring.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;It's a keyring. It's a solid block of brass with the middle cut out, so it looks like a very shallow "U", or like three sides of a long rectangle. There's a hole drilled in each of the short ends, and a long bolt is threaded through those holes. On one end of the bolt is a nut, tight against the outside of the "U", and the bolt protrudes out about an inch where there's another, locking, nut. All the keys are hung from the bolt. To add a new key, I undo the locking nut on the end, undo the tight nut, pull the bolt out, hang another key from it, and then do everything back up. It's &lt;em&gt;brilliant&lt;/em&gt;. I've not had a single problem with it.&lt;/p&gt;
&lt;p&gt;Those of you carefully studying the picture will notice that there is writing on the brass "U". (And will also notice that I've blacked out the details of the actual keys, because you can cut a key based on a picture, and I'm not stupid.) That's engraving, which mentions my website, so if I lose my keys (which I am really careful to not do&lt;sup id="sf-my-keys-1-back"&gt;&lt;a href="#sf-my-keys-1" class="simple-footnote" title="the historical version of checking your pockets, as a man, was to feel for &amp;quot;spectacles, testicles, wallet, and watch&amp;quot; -- this was actually a ribald mnemonic for how to cross yourself as a Catholic, but this modern day man checks his pockets for keys, wallet, and phone in the same way to check they're not lost"&gt;1&lt;/a&gt;&lt;/sup&gt;) then whoever finds them can get in touch with me to tell me that happened but my address is not on the keys, so a nefarious finder gets less benefit from it. &lt;/p&gt;
&lt;p&gt;I love my keyring. It's the best. I do not know why more keyrings are not like this. It works just like a normal keyring (I have non-key things on mine, such as a USB stick and a tiny flashlight, but they would go on a regular split-ring keyring as well), but it doesn't just fail all the time like normal ones do. I surely can't be the only person who experiences this? Anyway, I don't mind, 'cos I have the solution. Cheers, dad. Maybe I should make this a product or something.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-my-keys-1"&gt;the historical version of checking your pockets, as a man, was to feel for "spectacles, testicles, wallet, and watch" -- this was actually a ribald mnemonic for how to cross yourself as a Catholic, but this modern day man checks his pockets for keys, wallet, and phone in the same way to check they're not lost &lt;a href="#sf-my-keys-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 04 Nov 2024 22:50:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-11-04:/days/2024/11/04/my-keys/</guid><category>General musings</category></item><item><title>Two Plumbers</title><link>https://www.kryogenix.org/days/2024/10/22/two-plumbers/</link><description>&lt;p&gt;In a land far away, there were two brothers, two plumbers. To preserve their anonymity, we'll call them... Mario and Luigi. Their mother, a kind and friendly woman, and their father, a man with (by the laws of averages and genetics) a truly gargantuan moustache, raised them both to be kind and friendly (and moustachioed) in their turn. There was enough work in the town to keep both the plumbers busy, and they each grew through apprentice to journeyman to experience and everyone liked them. They both cared about the job, about their clients, and they each did good work, always going the extra mile, doing more than was necessarily asked for, putting in an extra hour to tighten that pipe or fit a better S-bend or clean up the poor workmanship of lesser craftsmen and cowboys. They were happy. Even their rivalry for each job was good-humoured, a friendly source of amusement to them and to the town. Sometimes people would flip a coin to choose which to ring, having no way to choose between them, and Mario would laugh and suggest that he should have two-headed coins made, or Luigi would laugh and say that that ought to make it his turn next.&lt;/p&gt;
&lt;p&gt;But there came a time of downturn, when the people of the town had to hold tighter to their purses, and fewer called out for plumbers. And Luigi, after much thought, decided to take a job with Bowser's, the big plumbing conglomerate from the city. He was worried: the big company were often slapdash or inexperienced in their work, and discourteous or evasive to their clients, and more interested in bottom lines than hot water lines. But they paid extremely well, and they had the latest tools, and there was security in having a contract and a title and a boss. Besides, Bowser's worked for so many more people that Luigi's own skills could only help that many more. Maybe he could even teach them something about quality, and craftsmanship, and care. He suggested to Mario that they both joined, and Mario thought hard about it, and eventually decided not to, though it was a close-run thing. Both the brothers shook hands on it, respecting one another's decision, although in the silence of their hearts each was a little disappointed in the other.&lt;/p&gt;
&lt;p&gt;Luigi did well at Bowser's. He was right about the latest tools, and about the pay, and about the security. And he was partially right about teaching the big company something about quality. His work was often better than his colleagues, sometimes through expertise but most often because he tried harder: he loved the work, and wanted to do well, and was kind and friendly when he could be. But sometimes, try though he might, the time wasn't there, or the parts weren't in the van, and these things were not his fault; someone else at the big company had cut corners on their job and that forced Luigi to cut corners on his and make people sad and angry, or put in more time to fix it than he would have spent doing it all correctly himself in the first place. He pushed hard inside the company to fix these things, and he had some successes; a policy was written suggesting that employees work harder to improve customer happiness, and many customers across the land were made a little happier as a result. Luigi won an award. He trained some apprentices, and many of his little ways of making people happier and the job better were adopted into the company training scheme. One time he went home after another argument with his boss about the things that were not adopted, and that night he looked enviously out of their window at his brother's house across the street, thinking that it would be a fine thing to not have a boss who stopped you from doing things right.&lt;/p&gt;
&lt;p&gt;Mario did well working for himself. The time of downturn ended and things began to pick up again, maybe not quite to where they had been but nearly there for all that, and the phone calls and messages came in once more. Everyone was pleased to see him, and although he maybe took a little longer than the men from the big company, his work was never slapdash, always taking the time to do it right. And he had less money, but he really didn't mind, or begrudge it; he had enough to get by, and he loved the work, and wanted to do well, and was kind and friendly. He did envy his brother's toolbox, though, all the latest gear while Mario himself made do with things a little older, a little rustier, but they were all good quality tools that he understood, and the work was as good and better. In November one year a very expensive plumber's inspection camera was stolen from his brother's van, and Mario thought that it would have been great to have such a thing and maybe he would have taken better care, and then he felt guilty about thinking that of his brother. He felt guiltier still when on Christmas morning he opened the box from Luigi to find an expensive inspection camera in it. But then his brother winked at him and put a finger to his lips, and all was well between them again. One time Mario was up to his waist in the drain outside a house, raindrops rattling on his hat and cursing the god who invented backflow, when he saw his brother drive past all unknowing in his modern van, windows wound up and singing along with the radio, and he looked enviously after the van's lights in the storm, thinking that it would be a fine thing to have just a notch more comfort and influence and two fewer wet knees.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 22 Oct 2024 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-10-22:/days/2024/10/22/two-plumbers/</guid><category>General musings</category></item><item><title>On iOS, Home Screen web apps are part of your iCloud Backup</title><link>https://www.kryogenix.org/days/2024/09/17/on-ios-home-screen-web-apps-are-part-of-your-icloud-backup/</link><description>&lt;p&gt;Recently I have been most baffled by how on my iPhone, my iCloud backup was over 5GB (and therefore would not back up into the free space that I have) despite how I had turned off most of the apps that might want to be included in the backup. &lt;/p&gt;
&lt;p&gt;There are many, many, many posts on the internet from people having this problem, and there are a few common things which come up. The first one is that iMessage is included in the backup, and this includes any images or videos you've received or sent. The second is that your photos are included. So if you're thinking "hey there's hardly anything on my phone, why is the iCloud backup so big" but you've got 2 years worth of chats with a zillion people full of videos... that's why.&lt;/p&gt;
&lt;p&gt;I, however, had tried all that and I still couldn't get the backup size down. I even spoke to Apple suport directly about it, three times; each of the people I spoke to had helpful suggestions, but it was also equally clear that each of them was fishing around in the dark, because all the "usual" tricks and traps they knew about which caused this were things that I'd already dealt with or disabled. It all ended up inconclusive, and I still didn't have a backup.&lt;/p&gt;
&lt;p&gt;Today, in desperation, I decided to try backing up the phone to my Linux machine so I could poke about in the backup to see if I could tell what was using all the space. Now, iPhones can be backed up to Macs (not surprisingly) and Windows, but there's no official provision for doing so on Linux, sadly. However, there is &lt;a href="https://libimobiledevice.org/"&gt;libimobiledevice&lt;/a&gt;, a set of command line tools. I used them to back up my phone to my desktop as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;plug the phone in&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idevicebackup2 cloud off&lt;/code&gt; # disable iCloud backup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idevicebackup2 -i encryption on&lt;/code&gt; # enter a password&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idevicebackup2 backup ./&lt;/code&gt; # back up phone into current dir&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once I'd done that, I had a folder named for the UDID of my phone, filled with encrypted data. Fortunately, there is a Python library called &lt;a href="https://pypi.org/project/iOSbackup/"&gt;iOSbackup&lt;/a&gt; which knows how to read and decrypt these backups, so I used it to write myself a little equivalent of the &lt;code&gt;du&lt;/code&gt; utility to see which folders in the backup might be unexpectedly using a lot more storage than I expected.&lt;/p&gt;
&lt;p&gt;And in fact there were a whole bunch of folders called something like &lt;code&gt;Library/WebClips/(long string).webclip/&lt;/code&gt; which were using &lt;em&gt;tons&lt;/em&gt; of storage, some over a gigabyte. I immediately thought: hey, I bet they're Home Screen web apps. I use a lot of these -- if there's a PWA for a service, I'll use it rather than a platform-specific app. We set up &lt;a href="https://open-web-advocacy.org"&gt;Open Web Advocacy&lt;/a&gt; for a reason, after all. So this made me jump to a (what turned out to be correct) conclusion from a standing start. Each of these &lt;code&gt;Library/WebClips/blah.webclip&lt;/code&gt; folders contains an &lt;code&gt;ApplicationManifest&lt;/code&gt; file, and you can get &lt;code&gt;iOSbackup&lt;/code&gt; to disgorge its decrypted content; it's a "binary plist" (which Python &lt;a href="https://docs.python.org/3/library/plistlib.html"&gt;knows how to read&lt;/a&gt;) and with that I could see which Home Screen web apps were taking up space with this little script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;iOSbackup&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;iOSbackup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plistlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;UDID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ENTER YOUR UDID HERE (the backup folder name)&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BACKUP ENCRYPTION PASSWORD&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;FOLDER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2024-09-17&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# folder you put the backup in&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iOSbackup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;udid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;UDID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cleartextpassword&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;backuproot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FOLDER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# https://stackoverflow.com/a/53567149/1418014 thanks!&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;formatSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeInBytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;decimalNum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;isUnitWithI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sizeUnitSeperator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;format size to human readable string&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  &lt;span class="c1"&gt;# K=kilo, M=mega, G=giga, T=tera, P=peta, &lt;/span&gt;
  &lt;span class="c1"&gt;# E=exa, Z=zetta, Y=yotta&lt;/span&gt;
  &lt;span class="n"&gt;sizeUnitList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;K&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;largestUnit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isUnitWithI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;sizeUnitListWithI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;curIdx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eachUnit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeUnitList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;unitWithI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;eachUnit&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;curIdx&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;unitWithI&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;sizeUnitListWithI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unitWithI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;sizeUnitList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sizeUnitListWithI&lt;/span&gt;

    &lt;span class="n"&gt;largestUnit&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;

  &lt;span class="n"&gt;suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;B&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;decimalFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decimalNum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# &amp;quot;.1f&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;finalFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;decimalFormat&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
    &lt;span class="n"&gt;sizeUnitSeperator&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;quot;%.1f%s%s&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;sizeNum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sizeInBytes&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sizeUnit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sizeUnitList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeNum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;1024.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;finalFormat&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeNum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sizeUnit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;sizeNum&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mf"&gt;1024.0&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;finalFormat&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeNum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;largestUnit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;webapp_sizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBackupFilesList&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Library/WebClips/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;webclip_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;webclip_folder&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;webapp_sizes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;webapp_sizes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;webclip_folder&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# work out where this file is in the backup&lt;/span&gt;
    &lt;span class="n"&gt;backup_file_loc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;FOLDER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UDID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;backupFile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;backupFile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# technically this is accumulating the encrypted&lt;/span&gt;
        &lt;span class="c1"&gt;# size of the file, not the decrypted. But it&amp;#39;s fine&lt;/span&gt;
        &lt;span class="n"&gt;bf_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;backup_file_loc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;st_size&lt;/span&gt;
        &lt;span class="n"&gt;webapp_sizes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;webclip_folder&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;bf_size&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;FileNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/ApplicationManifest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# decrypt it to a temp location&lt;/span&gt;
        &lt;span class="c1"&gt;# you should be doing this with tempfile&lt;/span&gt;
        &lt;span class="n"&gt;dec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getFileDecryptedCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relativePath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;targetFolder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/tmp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;targetName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;iosdec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/tmp/iosdec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plistlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;# go looking for the first one which looks like JSON&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$objects&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;continue&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;webapp_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;manifest_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="k"&gt;continue&lt;/span&gt;
                    &lt;span class="n"&gt;webapp_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;manifest_json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;manifest_json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;short_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;webapp_sizes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;webclip_folder&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp_name&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;webapp_sizes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;formatSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and this helpfully printed a list which looked like this (but longer; I've kept a few around to give you the flavour):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;https://elk.zone/: 133.1MB
https://squoosh.app/: 1.1MB
https://www.kryogenix.org/farmbound/: 11.5MB
https://nerdlegame.com/: 220.9MB
https://twitter.com/: 1.2GB
Phanpy: 1.6GB
https://www.nytimes.com/games/: 376.2MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So... aha. Twitter and Phanpy can, I suppose, be excused since they are presumably caching every post ever, but I can delete those and re-add (and not bother re-adding Twitter) to get some of that back. Wordle, you are the weakest link, goodbye, and also I don't need elk.zone any more now I'm using Phanpy.&lt;/p&gt;
&lt;p&gt;I removed a bunch of these. Then I told the iCloud Backup to run again. And now my backup size is 800MB, not 5GB. Hooray!&lt;/p&gt;
&lt;p&gt;To be clear, &lt;strong&gt;this is not at all a Safari problem&lt;/strong&gt;. Safari is absolutely doing the right thing here; well done Safari team. Web apps are apps; they should be included in my phone backup, 100%. The bug here is in the iCloud Backup Settings App List, which lists all the apps that are taking up space in the backup but &lt;em&gt;does not list Home Screen web apps&lt;/em&gt;. This sucks, and it's a bug, and it should be fixed. Show me PWAs in the backup list, especially ones taking up a gigabyte of space in it. I have filed the bug at &lt;a href="https://feedbackassistant.apple.com/feedback/15158244"&gt;feedbackassistant.apple.com&lt;/a&gt; although I've never heard back from any of the others I've filed there so I don't really know what the process is.&lt;/p&gt;
&lt;p&gt;OK, now off to add Phanpy again.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Tue, 17 Sep 2024 22:35:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-09-17:/days/2024/09/17/on-ios-home-screen-web-apps-are-part-of-your-icloud-backup/</guid><category>General musings</category></item><item><title>The CMA wants your comments on web apps</title><link>https://www.kryogenix.org/days/2024/08/21/the-cma-wants-your-comments-on-web-apps/</link><description>&lt;p&gt;Here's the tl;dr: if you make web apps in or for the UK, the &lt;a href="https://www.gov.uk/cma-cases/mobile-browsers-and-cloud-gaming"&gt;&lt;abbr title="Competition and Markets Authority"&gt;CMA&lt;/abbr&gt;&lt;/a&gt;, the UK tech regulator, want to hear from you about their proposals &lt;strong&gt;before August 29th 2024&lt;/strong&gt;, which is only a week away. Read &lt;a href="https://assets.publishing.service.gov.uk/media/66b484020808eaf43b50dea8/Working_paper_7_Potential_Remedies_8.8.24.pdf"&gt;their list of remedies&lt;/a&gt; to anticompetitive behaviour between web browsers and platforms, and email your thoughts to &lt;a href="mailto:browsersandcloud@cma.gov.uk"&gt;browsersandcloud@cma.gov.uk&lt;/a&gt; before the deadline. They really do want to hear from you, confidentally if you want, and your voice is useful here; you don't need to have some formally written legal opinion here. They want to hear from actual web devs and companies. Email them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gov.uk/cma-cases/mobile-browsers-and-cloud-gaming#contact"&gt;&lt;img src="https://www.kryogenix.org/images/cma-hear-from-you.png" alt="We want to hear from you -- Competition and Markets Authority"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now let's look at what the CMA have written in a little more detail. (This is the "tl" bit, although hopefully you will choose to "r".) They have been conducting a "Market Investigation Reference", which is regulator code for "talk to loads of people to see if there's a problem and then decide what to do about that", and the one we care about is about web browsers. I have, as part of &lt;a href="https://open-web-advocacy.org"&gt;Open Web Advocacy&lt;/a&gt;, been part of those consultations a number of times, and they've always been very willing to listen, and they do seem to identify a bunch of problems with browser diversity that I personally also think are problems. You know what we're talking about here: all browsers on iOS are required to be Safari's WebKit and not their own engine; Google have a tight grip on a whole bunch of stuff; browser diversity is a good thing and there's not enough of it in the world and this looks to be from deliberate attempts to act like monopolies by some players. These are the sorts of issues that CMA are concerned about (and they have published &lt;a href="https://www.gov.uk/cma-cases/mobile-browsers-and-cloud-gaming#working-papers"&gt;quite a few working papers explaining their issues in detail&lt;/a&gt; which you can read). What we're looking at today is their proposed list of &lt;em&gt;fixes&lt;/em&gt; for these problems, which they call "remedies". At OWA we have also done this, of course, and you should &lt;a href="https://open-web-advocacy.org/blog/uk-browser-and-cloud-investigation-may-fail-to-allow-web-app-competition/"&gt;read the OWA blog post about the CMA's remedies paper&lt;/a&gt;. But the first important point is, to be clear, that a whole bunch of these remedies being proposed by the CMA are &lt;strong&gt;good&lt;/strong&gt;. This is not a complaint that it's all bad or that it's toothless, not at all. They're going to stop the #AppleBrowserBan and require that other browsers are allowed to use their own engines on iOS as browser apps and in in-app browsing, they're going to require both Apple and Google to grant other browsers' access to the same APIs that their own browsers can get at, they've got suggestions in place for how users can choose which browser they use to get past the problem of the "default hotseat" where you get one browser when you buy a phone and never think to change it, they're suggesting that Google open access to WebAPK minting to everyone. All of these help demonopolise the UK market. This is all good.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://open-web-advocacy.org/blog/uk-browser-and-cloud-investigation-may-fail-to-allow-web-app-competition/"&gt;&lt;img src="https://www.kryogenix.org/images/stuart-bruce-alex-cma.jpg" alt="Stuart Langridge, Bruce Lawson, and Alex Moore of OWA in the CMA offices in London"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But there are some places where their remedies don't really go far enough, and this is the stuff where it would be good for you, my web-engaged reader, to send them an email with your thoughts one way or the other. Part of making the web as capable as a platform-specific app is that web sites can be presented like a platform-specific app. This is (part of) what a PWA is, which most of you reading this will already know about. But releasing your app as a PWA, while it has a bunch of good characteristics for you (no reviews needed, instant updates, full control, cross-platform development, no tithing of money required to the people who sold the phone it's on) also has some downsides. In particular, it's difficult to get people to "install" a PWA, especially on iOS where you have to tell your users to go digging around in the share menu. And this is a fairly big area where the CMA could have proposed remedies, and have so far not chosen to. The first problem here is that iOS Safari doesn't support any sort of install prompt: as mentioned, there's the "add to home screen" entry hidden in the share menu. There's an API for this, everyone else implements it, iOS Safari doesn't. Maybe the API's got problems and needs fixing? That seems fine; engage with the web standards process to get it fixed! But there's been no sign of doing that in any useful way.&lt;/p&gt;
&lt;p&gt;The second and related issue is that although the CMA's remedies state that browsers can use their own engine rather than having to be mere wrappers around the platform's web view, they do &lt;em&gt;not&lt;/em&gt; say that when a browser installs a web app, that that web app will &lt;em&gt;also&lt;/em&gt; use that browser's engine. That is: if there were a port of, say, Microsoft Edge to iOS, then Edge would be able to use its own engine, which is Microsoft's port of Blink. That Edge browser can implement install prompts how it likes, because it's using its own engine. &lt;em&gt;But&lt;/em&gt; there's no guarantee in the CMA remedies that the PWA that gets &lt;em&gt;installed&lt;/em&gt; will then be opened up in Edge. Calling the "install this PWA as an app" API provided by the platform might add it as a PWA &lt;em&gt;in the platform maker's browser&lt;/em&gt; -- iOS Safari in this example. This would be rubbish. It means that the installed app might not even work; how will it know your passwords or cookies, etc; this can't be what's intended. But the remedies do not explicitly state this requirement, and so it's quite possible that platform owners will therefore use this as another way to push back against PWAs to make them less of a competitor to their own app stores. I would like to be able to say that platform owners wouldn't do that, that they wouldn't deliberately make things worse in an effort at malicious compliance, but after the debacle earlier this year of &lt;a href="https://open-web-advocacy.org/blog/its-official-apple-kills-web-apps-in-the-eu/"&gt;Apple dropping PWA support entirely&lt;/a&gt; and then only &lt;a href="https://open-web-advocacy.org/blog/apple-backs-off-killing-web-apps/"&gt;backing off on that after public outcry&lt;/a&gt;, we can't assume that there will be a good-faith attempt to improve PWA support (either by implementation, or by engaging wholeheartedly with the public web standards process), and so the remedies need to spell this out in more detail. This should be easy enough if I'm right and the CMA's &lt;em&gt;intent&lt;/em&gt; is that this should be done, and your voice adding to that is likely to encourage them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/AdaRoseCannon/status/1389642353472851970"&gt;&lt;img src="https://kryogenix.org/images/ada-apple-tweet.png" alt="A tweet from Ada Rose Cannon reading 'Seeing a Web App I worked on used by *Apple* to justify that the Web is a viable platform on iOS is bullshit. The Web can be an ideal place to build apps but Apple is consistently dragging their heals on implementing the Web APIs that would allow them to compete with native apps', quoting a tweet by Peter Gasston with text 'This image from Apple‘s opening presentation in the Epic Games court case is very misleading. “Web Apps and Native Apps can look the same, therefore no-one needs to publish on the App Store”.' and an Apple-created image of the FT web app and FT platform-specific app looking similar"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The worry about malicious compliance hampering web apps being a proper competitor to platform-specific apps also extends to another thing missing in the remedies: that access to hardware and software platform APIs for other browsers isn't required to be "which APIs there are", but "which APIs the existing browser elects to use". That is: if you write a native platform-specific app, it can talk to various hardware-ish things; bluetooth, USB, NFC, whichever. Therefore, you ought to be able, if you're a browser, to also have those APIs, in enough detail that you can then offer (mediated, secure) access to those services to &lt;em&gt;your&lt;/em&gt; users, the PWAs and websites that people run with you. But the remedies do not ensure that this is the case; they ensure that there is a "requirement for Apple to grant equivalent access to APIs used by WebKit and Safari to browsers using alternative browser engines." What this means is that if Safari doesn't use a thing, no other browser can use it either. So it's not possible to make the browser you build &lt;em&gt;better&lt;/em&gt; than Safari at this; Apple get to set the ceiling of what the web can do on the platform, and the ceiling is defined as "whatever &lt;em&gt;their&lt;/em&gt; browser can do". That's... not very competitive, is it? No. If you agree with that, then you should also write to the CMA about it. They would like to hear about actual examples where this sort of thing harms UK businesses, of course, and if that's you definitely write in, but it's also worth giving your opinion if you are a UK developer who works in this area, delivering things via the web to your users (or if you want to do that but are currently prevented).&lt;/p&gt;
&lt;p&gt;OK. Discussion over: go and write to the CMA with your thoughts on their remedies. Even if you think what they've proposed is perfect, you should still send them a message saying that; one thing that they and all government agencies tend to bemoan is that they only hear from people with lots of skin in the game, and generally only from people who are opposed, not people who are supportive. That means that they get a skewed view of what the web developer community actually &lt;em&gt;think&lt;/em&gt;, and this is a chance for us to unskew that a bit, together. You can request that the CMA keep your name, business, or submission confidential, so you don't have to worry about giving away secrets or your participation, and you need only comment on stuff which is relevant to you; you do not need a comprehensive position paper on the whole thing! The address to email is &lt;a href="mailto:browsersandcloud@cma.gov.uk"&gt;browsersandcloud@cma.gov.uk&lt;/a&gt;, the list of remedies is &lt;a href="https://assets.publishing.service.gov.uk/media/66b484020808eaf43b50dea8/Working_paper_7_Potential_Remedies_8.8.24.pdf"&gt;Working Paper 7&lt;/a&gt;, and the deadline is &lt;strong&gt;Thursday 29th August&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://2024.stateofthebrowser.com/"&gt;&lt;img src="https://www.kryogenix.org/images/sotb24.png" alt="State of the Browser 2024"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to hear more about this, then I am &lt;a href="https://2024.stateofthebrowser.com/speaker/stuart-langridge/"&gt;speaking&lt;/a&gt; about OWA, how it happened, what we've done, and how you can be involved at &lt;a href="https://2024.stateofthebrowser.com/"&gt;State of the Browser 2024&lt;/a&gt; on Saturday 14th September (just under a month from now!) in the Barbican in London. I'm &lt;a href="https://bsky.app/profile/londonwebstandards.org/post/3l2a2uqy5432s"&gt;told&lt;/a&gt; that there are less than 30 in-person tickets left, although there are online streaming tickets available too, so get in quick if you want to hear me and a whole bunch of other speakers!&lt;/p&gt;
&lt;p&gt;(Late breaking update: &lt;a href="https://brucelawson.co.uk/2024/web-apps-on-ios-is-the-cma-missing-the-point/"&gt;Bruce has also written about this&lt;/a&gt; and you should read that too!)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 21 Aug 2024 09:07:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-08-21:/days/2024/08/21/the-cma-wants-your-comments-on-web-apps/</guid><category>General musings</category></item><item><title>Family Fortunes board generator</title><link>https://www.kryogenix.org/days/2024/08/19/family-fortunes-board-generator/</link><description>&lt;p&gt;I nerd-sniped myself.&lt;/p&gt;
&lt;blockquote lang="en" cite="https://mastodon.social/@sil/112973699114307847"&gt;
  &lt;p&gt;Internet: I am disappointed that you have not provided me with one of those meme-maker websites for a Family Fortunes board. Now I will have to make one.&lt;/p&gt;
  &lt;footer&gt;
     — Stuart Langridge (@sil) &lt;a href="https://mastodon.social/@sil/112973699114307847"&gt;&lt;time datetime="2024-08-16T20:57:24.400Z"&gt;16/08/2024, 21:57:24&lt;/time&gt;&lt;/a&gt;
  &lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;See, I put word to thought and that was my mistake. So I spent, like, half my Saturday doing this instead of what I should be doing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.kryogenix.org/code/family-fortunes/"&gt;&lt;img src="https://kryogenix.org/random/ff.png" alt="A Family Fortunes board from the 1980s reading 'Things I should have done instead of this' with options 'SoTB talk', 'Ironing', 'Lagers', 'D&amp;amp;D campaign', and 'touching grass' in air-quotes (with a score of 0)"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I got to use a couple of interesting techniques with it that I hadn't done before, now that nice new web APIs exist for them: sharing an image, for example, which involves creating a &lt;code&gt;Blob&lt;/code&gt; (&lt;a href="https://stackoverflow.com/a/67073474/1418014"&gt;thank you Thomas Steiner&lt;/a&gt;), doing the equivalent of the venerable "yellow fade technique" with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API"&gt;web animations API&lt;/a&gt;, and yoinking all the information from a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; conveniently by reading &lt;code&gt;new FormData(form)&lt;/code&gt; in &lt;code&gt;form.oninput&lt;/code&gt;. This is all cool stuff; the web's such a nice environment to program for.&lt;/p&gt;
&lt;p&gt;A number of people have pointed out that this is not emulating the particular style of Family Fortunes board that &lt;em&gt;they&lt;/em&gt; prefer, to which our survey says: feel free to make your own. This is the one &lt;em&gt;I&lt;/em&gt; grew up with; those of you of more venerable years who prefer Max Bygraves or Bob Monkhouse to Les Dennis will simply have to struggle on under the burden. (Let us not speak of the appalling colourful modern video wall, which is just literally no fun at all and looks like a pub quiz machine.) Also, it turns out that Quite A Lot Of People have Opinions on what the exact shape of the X's should be, and no two of these opinions are the same. All good clean fun, yes.&lt;/p&gt;
&lt;p&gt;Anyway, I can't think that this is ever likely to be all that important, but if you ever need a way to mock up a Family Fortunes&lt;sup id="sf-family-fortunes-board-generator-1-back"&gt;&lt;a href="#sf-family-fortunes-board-generator-1" class="simple-footnote" title="I think Americans call it Family Feud?"&gt;1&lt;/a&gt;&lt;/sup&gt; screen from the 1980s with your own custom answers and scores, we asked 100 people and they all said that &lt;a href="https://www.kryogenix.org/code/family-fortunes/"&gt;kryogenix.org/code/family-fortunes&lt;/a&gt; is right there waiting patiently for you. Enjoy.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-family-fortunes-board-generator-1"&gt;I think Americans call it Family Feud? &lt;a href="#sf-family-fortunes-board-generator-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 19 Aug 2024 16:22:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-08-19:/days/2024/08/19/family-fortunes-board-generator/</guid><category>General musings</category></item><item><title>OED second edition CD-ROM under Wine</title><link>https://www.kryogenix.org/days/2024/05/08/oed-second-edition-cd-rom-under-wine/</link><description>&lt;p&gt;I recently discovered that there's an old software edition of the Oxford English Dictionary (the second edition) &lt;a href="https://archive.org/details/oxford-english-dictionary-second-edition"&gt;on archive.org&lt;/a&gt; for download. Not sure how legal this is, mind, but I thought it would be useful to get it running on my Ubuntu machine. So here's how I did that.&lt;/p&gt;
&lt;p&gt;Firstly, download the file; that will give you a file called &lt;code&gt;Oxford English Dictionary (Second Edition).iso&lt;/code&gt;, which is a CD image. We want to unpack that, and usefully there is 7zip in the Ubuntu archives which knows how to unpack ISO files.&lt;sup id="sf-oed-second-edition-cd-rom-under-wine-1-back"&gt;&lt;a href="#sf-oed-second-edition-cd-rom-under-wine-1" class="simple-footnote" title="and using 7zip is much easier than mounting the ISO file as a loopback thing"&gt;1&lt;/a&gt;&lt;/sup&gt; So, unpack the ISO with &lt;code&gt;7z x "Oxford English Dictionary (Second Edition).iso"&lt;/code&gt;. That will give you two more files: &lt;code&gt;OED2.DAT&lt;/code&gt; and &lt;code&gt;SETUP.EXE&lt;/code&gt;. The .DAT file is, I think, all the dictionary entries in some sort of binary format (and is 600MB, so be sure you have the space for it). You can then run &lt;code&gt;wine SETUP.EXE&lt;/code&gt;, which will install the software using wine, and that's all good.&lt;sup id="sf-oed-second-edition-cd-rom-under-wine-2-back"&gt;&lt;a href="#sf-oed-second-edition-cd-rom-under-wine-2" class="simple-footnote" title="There's a Microsoft Word macro that it offers to install; I didn't want that, and I have no idea whether it works"&gt;2&lt;/a&gt;&lt;/sup&gt; Choose a folder to install it in (I chose the same folder that &lt;code&gt;SETUP.EXE&lt;/code&gt; is in, at which point it will create an &lt;code&gt;OED&lt;/code&gt; subfolder in there and unpack a bunch of files into it, including &lt;code&gt;OED.EXE&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;That's the easy part. However, it won't quite work yet. You can see this by running &lt;code&gt;wine OED/OED.EXE&lt;/code&gt;. It should start up OK, and then complain that there's no CDROM.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/oed/01-no-cdrom.png" alt="a Windows dialog box reading 'CD-ROM not found'"&gt;&lt;/p&gt;
&lt;p&gt;This is because it expects there to be a CDROM drive with the &lt;code&gt;OED2.DAT&lt;/code&gt; file on it. We can set one up, though; we tell Wine to pretend that there's a CD drive connected, and what's on it. Run &lt;code&gt;winecfg&lt;/code&gt;, and in the &lt;code&gt;Drives&lt;/code&gt; tab, press &lt;code&gt;Add…&lt;/code&gt; to add a new drive. I chose &lt;code&gt;D:&lt;/code&gt; (which is a common Windows drive letter for a CD drive), and OK. Select your newly added &lt;code&gt;D:&lt;/code&gt; drive and set the &lt;code&gt;Path&lt;/code&gt; to be the folder where &lt;code&gt;OED2.DAT&lt;/code&gt; is (which is wherever you unpacked the ISO file). Then say &lt;code&gt;Show Advanced&lt;/code&gt; and change the drive &lt;code&gt;Type&lt;/code&gt; to &lt;code&gt;CD-ROM&lt;/code&gt; to tell Wine that you want this new drive to appear to be a CD. Say &lt;code&gt;OK&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/oed/02-winecfg.png" alt="a Windows dialog box reading 'CD-ROM not found'"&gt;&lt;/p&gt;
&lt;p&gt;Now, when you &lt;code&gt;wine OED/OED.EXE&lt;/code&gt; again, it should start up fine! Hooray, we're done! Except…&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/oed/03-bad-fonts.png" alt="the OED Windows app, except that all the text is little squares rather than actual text, which looks like a font rendering error"&gt;&lt;/p&gt;
&lt;p&gt;…that's not good. The app runs, but it looks like it's having font issues. (In particular, you can select and copy the text, even though it looks like a bunch of little squares, and if you paste that text into somewhere else it's real text! So this is some sort of font display problem.)&lt;/p&gt;
&lt;p&gt;Fortunately, the OED app does actually come with the fonts it needs. Unfortunately, it seems to unpack them to somewhere (&lt;code&gt;C:\WINDOWS\SYSTEM&lt;/code&gt;)&lt;sup id="sf-oed-second-edition-cd-rom-under-wine-3-back"&gt;&lt;a href="#sf-oed-second-edition-cd-rom-under-wine-3" class="simple-footnote" title="which we can find out from OED/INSTALL.LOG"&gt;3&lt;/a&gt;&lt;/sup&gt; that Wine doesn't appear to actually look at. What we need to do is to install those font files so Linux knows about them. You could click them all to install them, but there's a quicker way; copy them, from where the installer puts them, into our own font folder.&lt;/p&gt;
&lt;p&gt;To do this...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;first make a new folder to put them in: &lt;code&gt;mkdir ~/.local/share/fonts/oed&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Then find out where the installer put the font files, as a real path on our Linux filesystem: &lt;code&gt;winepath -u "C:/WINDOWS/SYSTEM"&lt;/code&gt;. Let's say that that ends up being &lt;code&gt;/home/you/.wine/dosdevices/c:/windows/system&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy the TTF files from that folder (remembering to change the first path to the one that &lt;code&gt;winepath&lt;/code&gt; output just now): &lt;code&gt;cp /home/you/.wine/dosdevices/c:/windows/system/*.TTF ~/.local/share/fonts/oed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And tell the font system that we've added a bunch of new fonts: &lt;code&gt;fc-cache&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And now it all ought to work! Run &lt;code&gt;wine OED/OED.EXE&lt;/code&gt; one last time…&lt;/p&gt;
&lt;p&gt;&lt;img src="https://kryogenix.org/images/oed/06-working.png" alt="the OED Windows app in all its glory"&gt;&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-oed-second-edition-cd-rom-under-wine-1"&gt;and using 7zip is much easier than mounting the ISO file as a loopback thing &lt;a href="#sf-oed-second-edition-cd-rom-under-wine-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-oed-second-edition-cd-rom-under-wine-2"&gt;There's a Microsoft Word macro that it offers to install; I didn't want that, and I have no idea whether it works &lt;a href="#sf-oed-second-edition-cd-rom-under-wine-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-oed-second-edition-cd-rom-under-wine-3"&gt;which we can find out from &lt;code&gt;OED/INSTALL.LOG&lt;/code&gt; &lt;a href="#sf-oed-second-edition-cd-rom-under-wine-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 08 May 2024 23:18:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-05-08:/days/2024/05/08/oed-second-edition-cd-rom-under-wine/</guid><category>General musings</category></item><item><title>The Pastry Box Project archaeology</title><link>https://www.kryogenix.org/days/2024/05/03/the-pastry-box-project-archaeology/</link><description>&lt;p&gt;Many years ago (2012!) I was invited to be part of "The Pastry Box Project", which described itself thus:&lt;/p&gt;
&lt;blockquote&gt;Each year, The Pastry Box Project gathers 30 people who are each influential in their field and asks them to share thoughts regarding what they do. Those thoughts are then published every day throughout the year at a rate of one per day, starting January 1st and ending December 31st.&lt;/blockquote&gt;

&lt;p&gt;It was interesting. Sadly, it's dropped off the web (as has its curator, Alex Duloz, as far as I can tell), but thankfully &lt;a href="https://archive.org"&gt;the Wayback Machine&lt;/a&gt; comes to the rescue once again.&lt;sup id="sf-the-pastry-box-project-archaeology-1-back"&gt;&lt;a href="#sf-the-pastry-box-project-archaeology-1" class="simple-footnote" title="Also, the writing is all archived at Github!"&gt;1&lt;/a&gt;&lt;/sup&gt; I was quietly proud of some of the things I wrote there (and I was recently asked for a reference to a thing I said which the questioner couldn't find, which is what made me realise that the site's not around any more), so I thought I'd republish the stuff I wrote there, here, for ease of finding. This was all written in 2012, and the world has moved on in a few ways since then, a dozen years ago at time of writing, but... I think I'd still stand by most of this stuff. The posts are &lt;a href="https://web.archive.org/web/20140709052954/https://the-pastry-box-project.net/baker/stuart-langridge"&gt;still at archive.org&lt;/a&gt; and you can get to and read other people's posts from there too, some of which are really good and worth your time. But here are mine, so I don't lose them again.&lt;/p&gt;
&lt;h2&gt;Tuesday, 18 December 2012&lt;/h2&gt;
&lt;p&gt;My daughter’s got a smartphone, because, well, everyone has. It has GPS on it, because, well, every one does. What this means is that she will never understand the concept of being lost.&lt;/p&gt;
&lt;p&gt;Think about that for a second. &lt;em&gt;She won’t ever even know what it &lt;strong&gt;means&lt;/strong&gt; to be lost.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Every argument I have in the pub now goes for about ten minutes before someone says, right, we’ve spent long enough arguing now, someone look up the correct answer on Wikipedia. My daughter won’t ever understand the concept of not having a bit of information available, of being confused about a matter of fact.&lt;/p&gt;
&lt;p&gt;A while back, it was decreed that telephone directories are not subject to copyright, that a list of phone numbers is “information alone without a minimum of original creativity” and therefore held no right of ownership.&lt;/p&gt;
&lt;p&gt;What instant access to information has provided us is a world where all the simple matters of fact are now yours; free for the asking. Putting data on the internet is not a skill; it is drudgery, a mechanical task for robots. Ask yourself: why do you buy technical books? It’s not for the information inside: there is no tech book anywhere which actually reveals something which isn’t on the web already. It’s about the voice; about the way it’s written; about how interesting it is. And that &lt;em&gt;is&lt;/em&gt; a skill. Matters of fact are not interesting — they’re useful, right enough, but not interesting. Making those facts available to everyone frees up authors, creators, makers to do authorial creative things. You don’t have to spend all your time collating stuff any more: now you can be Leonardo da Vinci all the time. Be beautiful. Appreciate the people who do things well, rather than just those who manage to do things at all. Prefer those people who make you laugh, or make you think, or make you throw your laptop out of a window with annoyance: who give you a strong reaction to their writing, or their speaking, or their work. Because information wanting to be free is what creates a world of creators. Next time someone wants to build a wall around their little garden, ask yourself: is what you’re paying for, with your time or your money or your personal information, something creative and wonderful? Or are they just mechanically collating information? I hope to spend 2013 enjoying the work of people who do something more than that.&lt;/p&gt;
&lt;h2&gt;Wednesday, 31 October 2012&lt;/h2&gt;
&lt;p&gt;Not everyone who works with technology loves technology. No, really, it’s true! Most of the people out there building stuff with web tech don’t attend conferences, don’t talk about WebGL in the pub, don’t write a blog with CSS3 “experiments” in it, don’t like what they do. It’s a job: come in at 9, go home at 5, don’t think about HTML outside those hours. Apparently 90% of the stuff in the universe is “dark matter”: undetectable, doesn’t interact with other matter, can’t be seen even with a really big telescope. Our “dark matter developers”, who aren’t part of the community, who barely even know that the community exists… how are we to help them? You can write all the &lt;em&gt;A List Apart&lt;/em&gt; articles you like but dark matter developers don’t read it. And so everyone’s intranet is horrid and Internet-Explorer-specific and so the IE team have to maintain backwards compatibility with that and that hurts the web. What can we do to reach this huge group of people? Everyone’s written a book about web technologies, and books help, but books are dying. We want to get the word out about all the amazing things that are now possible to everyone: do we know how? Do we even have to care? The theory is that this stuff will “trickle down”, but that doesn’t work for economics: I’m not sure it works for &lt;code&gt;@-moz-keyframes&lt;/code&gt; either. &lt;/p&gt;
&lt;h2&gt;Monday, 8 October 2012&lt;/h2&gt;
&lt;p&gt;The web moves really fast. How many times have you googled for a tutorial on or an example of something and found that the results, written six months or a year or two years ago, no longer work? The syntax has changed, or there’s a better way now, or it never worked right to begin with. You’ll hear people bemoaning this: trying to stop the web moving so quickly in order that knowledge about it doesn’t go out of date. But that ship’s sailed. This is the world we’ve built: it moves fast, and we have to just hat up and deal with it. So, how? How can we make sure that old and wrong advice doesn’t get found? It’s a difficult question, and I don’t think anyone’s seriously trying to answer it. We should try and think of a way. &lt;/p&gt;
&lt;h2&gt;Tuesday, 18 September 2012&lt;/h2&gt;
&lt;p&gt;Software isn’t always a solution to problems. If you’re a developer, everything generally looks like a nail: a nail which is solved by making a new bit of code. I’ve got half-finished mobile apps done for tracking my running with GPS, for telling me when to switch between running and walking, and… I’m still fat, because I’m writing software instead of &lt;em&gt;going running&lt;/em&gt;. One of the big ideas behind computers was to automate repetitive and boring tasks, certainly, which means that it should work like this: identify a thing that needs doing, do it for a while, think “hm, a computer could do this more easily”, write a bit of software to do it. However, there’s too much premature optimisation going on, so it actually looks like this: identify a thing that needs doing, think “hm, I’m sure a computer would be able to do this more easily”, write a bit of software to do it. See the difference? If the software never gets finished, then in the first approach the thing &lt;em&gt;still gets done&lt;/em&gt;. Don’t always reach for the keyboard: sometimes it’s better to reach for Post-It notes, or your running shoes. &lt;/p&gt;
&lt;h2&gt;Saturday, 18 August 2012&lt;/h2&gt;
&lt;p&gt;Changing the world is within your grasp.&lt;/p&gt;
&lt;p&gt;This is not necessarily a good thing.&lt;/p&gt;
&lt;p&gt;If you go around and talk to normal people, it becomes clear that, weirdly, they don’t ever imagine how to get ten million dollars. They don’t think about new ways to redesign a saucepan or the buttons in their car. They don’t contemplate why sending a parcel is slow and how it could be a slicker process. They don’t think about &lt;em&gt;ways to change the world&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I find it hard to talk to someone who doesn’t think like that.&lt;/p&gt;
&lt;p&gt;To an engineer, the world is a toy box full of sub-optimized and feature-poor toys, as Scott Adams once put it. To a designer, the world is full of bad design. And to both, it is not only possible but at a high level &lt;em&gt;obvious&lt;/em&gt; how to (a) fix it (b) for everyone (c) and make a few million out of doing so.&lt;/p&gt;
&lt;p&gt;At first, this seems a blessing: you can see how the world could be better! And make it happen!&lt;/p&gt;
&lt;p&gt;Then it’s a curse. Those normal people I mentioned? Short of winning the lottery or Great Uncle Brewster dying, there’s no possibility of becoming a multi-millionaire, and so they’re not thinking about it. Doors that have a handle on them but say “Push” are not a source of distress. Wrong kerning in signs is not like sandpaper on &lt;em&gt;their&lt;/em&gt; nerves.&lt;/p&gt;
&lt;p&gt;The curse of being able to change the world is… the frustration that you have so far failed to do so.&lt;/p&gt;
&lt;p&gt;Perhaps there is a Zen thing here. Some people have managed it. Maybe you have. So the world is better, and that’s a good thing all by itself, right? &lt;/p&gt;
&lt;h2&gt;Friday, 27 July 2012&lt;/h2&gt;
&lt;p&gt;The best systems are built by people who can accept that no-one will ever know how hard it was to do, and who therefore don’t seek validation by explaining to everyone how hard it was to do.&lt;/p&gt;
&lt;h2&gt;Tuesday, 12 June 2012&lt;/h2&gt;
&lt;p&gt;The most poisonous idea in the world is when you’re told that something which achieved success through lots of hard work actually got there just because it was excellent.&lt;/p&gt;
&lt;h2&gt;Friday, 18 May 2012&lt;/h2&gt;
&lt;p&gt;Ever notice how the things you slave over and work crushingly hard on get less attention, sometimes, than the amusing things you threw together in a couple of evenings?&lt;/p&gt;
&lt;p&gt;I can't decide whether this is a good thing or not.&lt;/p&gt;
&lt;h2&gt;Thursday, 5 April 2012&lt;/h2&gt;
&lt;p&gt;It's OK to not want to build websites for everybody and every browser. Making something which is super-dynamic in Chrome 18 and also works excellently in w3m is jolly hard work, and a lot of the time you might well be justified in thinking it's not worth it. If your site stats, or your belief, or your prediction of the market's direction, or your favourite pundit tell you that the best use of your time is to only support browsers with &lt;code&gt;querySelector&lt;/code&gt;, or only support browsers with JavaScript, or only support WebKit, or only support iOS Safari, then that's a reasonable decision to make; don't let anyone else tell you what your relationship with your users and customers and clients is, because you know better than them.&lt;/p&gt;
&lt;p&gt;Just don't confuse what you're doing with supporting "the web". State your assumptions up front. Own your decisions, and be prepared to back them up, for your project. If you're building something which doesn't work in IE6, that requires JavaScript, that requires mobile WebKit, that requires Opera Mobile, then you &lt;em&gt;are&lt;/em&gt; letting some people down. That's OK; you've decided to do that. But your view's no more valid than theirs, for a project you didn't build. Make your decisions, and state what the axioms you worked from were, and then everyone else can judge whether what you care about is what they care about. Just don't push your view as being what everyone else should do, and we'll all be fine.&lt;/p&gt;
&lt;h2&gt;Sunday, 18 March 2012&lt;/h2&gt;
&lt;p&gt;Publish and be damned, said the Duke of Wellington; these days, in between starting wars in France and being sick of everyone repeating the jokes about his name from Blackadder, he’d probably say that we should publish &lt;em&gt;or&lt;/em&gt; be damned. If you’re anything like me, you’ve got folders full of little experiments that you never got around to finishing or that didn’t pan out. Put ’em up somewhere. These things are useful.&lt;/p&gt;
&lt;p&gt;Twitter, autobiographies, collections of letters from authors, all these have shown us that the minutiae can be as fascinating as carefully curated and sieved and measured writings, and who knows what you’ll inspire the next person to do from the germ of one of your ideas?&lt;/p&gt;
&lt;h2&gt;Monday, 27 February 2012&lt;/h2&gt;
&lt;p&gt;There's a lot to think about when you're building something on the web. Is it accessible? How do I handle translations of the text? Is the design OK on a 320px-wide screen? On a 2320px-wide screen? Does it work in IE8? In Android 4.0? In Opera Mini? Have I minimized the number of HTTP requests my page requires? Is my JavaScript minified? Are my images responsive? Is Google Analytics hooked up properly? AdSense? Am I handling Unicode text properly? Avoiding CSRF? XSS? Have I encoded my videos correctly? Crushed my pngs? Made a print stylesheet?&lt;/p&gt;
&lt;p&gt;We've come a long way since:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;HEADER&amp;gt;
&amp;lt;TITLE&amp;gt;The World Wide Web project&amp;lt;/TITLE&amp;gt;
&amp;lt;NEXTID N="55"&amp;gt;
&amp;lt;/HEADER&amp;gt;
&amp;lt;BODY&amp;gt;
&amp;lt;H1&amp;gt;World Wide Web&amp;lt;/H1&amp;gt;The WorldWideWeb (W3) is a wide-area&amp;lt;A
NAME=0 HREF="WhatIs.html"&amp;gt;
hypermedia&amp;lt;/A&amp;gt; information retrieval
initiative aiming to give universal
access to a large universe of documents.&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Look at &lt;a href="http://html5boilerplate.com/"&gt;http://html5boilerplate.com/&lt;/a&gt;—a base level page which helps you to cover some (nowhere near all) of the above list of things to care about (and the rest of the things you need to care about too, which are the other 90% of the list). A year in development, 900 sets of changes and evolutions from the initial version, seven separate files. That's not over-engineering; that's what you need to know to build things these days.&lt;/p&gt;
&lt;p&gt;The important point is: one of the skills in our game is knowing what you don't need to do right now but still leaving the door open for you to do it later. If you become the next Facebook then you will have to care about all these things; initially you may not. You don't have to build them all on day one: that &lt;em&gt;is&lt;/em&gt; over-engineering. But you, designer, developer, translator, evangelist, web person, do have to understand what they all mean. And you do have to be able to layer them on later without having to tear everything up and start again. Feel guilty that you're not addressing all this stuff in the first release if necessary, but you should feel a lot guiltier if you didn't think of some of it.&lt;/p&gt;
&lt;h2&gt;Wednesday, 18 January 2012&lt;/h2&gt;
&lt;p&gt;Don't be creative. Be a creat&lt;em&gt;or&lt;/em&gt;. No one ever looks back and wishes that they'd given the world less stuff.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-the-pastry-box-project-archaeology-1"&gt;Also, the writing is all &lt;a href="https://github.com/the-pastry-box-project"&gt;archived at Github!&lt;/a&gt; &lt;a href="#sf-the-pastry-box-project-archaeology-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Fri, 03 May 2024 19:08:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-05-03:/days/2024/05/03/the-pastry-box-project-archaeology/</guid><category>General musings</category></item><item><title>The Matrix has you, part 2</title><link>https://www.kryogenix.org/days/2024/03/24/the-matrix-has-you-part-2/</link><description>&lt;p&gt;I've recently &lt;a href="https://mastodon.social/@sil/112144967827317228"&gt;switched back from vscode to Sublime Text&lt;/a&gt;, which means that after all the time I spent training my fingers to type "&lt;code&gt;code somefile.txt&lt;/code&gt;" instead of "&lt;code&gt;subl somefile.txt&lt;/code&gt;" I now need to undo all that conditioning and go back to &lt;code&gt;subl&lt;/code&gt; again. So I thought, hey, maybe I should dump a little shell script called &lt;code&gt;code&lt;/code&gt; in my &lt;code&gt;bin&lt;/code&gt; folder which admonished me in some amusing way, thus Pavlov-ing myself into learning to do it right.&lt;/p&gt;
&lt;p&gt;And then I thought, hey, what'd be cool is if I had that Matrix-esque "raining code" effect in the Terminal and then it was superimposed with a box saying "STOP TYPING code AND USE subl INSTEAD", like the "SYSTEM ERROR" message at the end of the first movie.&lt;/p&gt;
&lt;p&gt;And then I thought: someone's already done this, right? And they have; it is called &lt;a href="https://github.com/abishekvashok/cmatrix"&gt;&lt;code&gt;cmatrix&lt;/code&gt;&lt;/a&gt;. But I don't like cmatrix because it doesn't do the colours right; the text just sorta stops rather than fading away like the movie does, and it feels unreal and too sharp for me. Now, don't get me wrong, I understand why this is; terminals support a full proper range of colour these days, but writing a program which gets released to actual people and which can deal with the bewildering array of terminal settings out there is a miserable waste of everyone's time. But I'm not writing this for anyone else; it only has to work in &lt;em&gt;my&lt;/em&gt; terminal (in true &lt;a href="https://www.kryogenix.org/days/2007/03/18/works-on-my-machine/"&gt;works on my machine&lt;/a&gt; fashion). And this will give me a chance to noodle about with Python terminal libraries such as &lt;a href="https://pypi.org/project/blessed/"&gt;blessed&lt;/a&gt; to make something interesting. Hence, &lt;a href="https://kryogenix.org/random/matrix24.py"&gt;matrix24.py&lt;/a&gt;:&lt;/p&gt;
&lt;video style="max-width: 100%" controls src="https://kryogenix.org/random/matrix-24bit.mp4"&gt;&lt;/video&gt;

&lt;p&gt;It's a bodge all round, and it still doesn't look right, and &lt;a href="http://jessica.tech/"&gt;Jess&lt;/a&gt; pointed out that making something cool happen when I make a mistake is the opposite of conditioning, but I got to fiddle about with a new library for a bit, so that was fun. Can I do something productive now?&lt;/p&gt;
&lt;p&gt;(title from &lt;a href="https://www.kryogenix.org/days/2003/06/18/mtrx/"&gt;a classic post about the Matrix&lt;/a&gt; which still makes me laugh even after all these years, although it is very unfair to Keanu Reeves who is a cool bloke and should be emulated in his approach to life)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 24 Mar 2024 15:40:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2024-03-24:/days/2024/03/24/the-matrix-has-you-part-2/</guid><category>General musings</category></item></channel></rss>