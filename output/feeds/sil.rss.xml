<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>as days pass by - sil</title><link>https://www.kryogenix.org/days/</link><description>scratched tallies on the prison wall</description><lastBuildDate>Sat, 25 Jan 2020 00:45:00 +0000</lastBuildDate><item><title>Write more</title><link>https://www.kryogenix.org/days/2020/01/25/write-more/</link><description>&lt;p&gt;I&amp;#8217;ve written a 
&lt;a href="https://www.kryogenix.org/days/2020/01/19/the-tiniest-of-python-templating-engines/"&gt;couple&lt;/a&gt; 
of 
&lt;a href="https://www.kryogenix.org/days/2020/01/19/number-word-sequences/"&gt;things&lt;/a&gt; 
here recently and I&amp;#8217;d forgotten how much I enjoy doing that. I 
should do more of&amp;nbsp;it. &lt;/p&gt;
&lt;p&gt;Most of my creative writing energy goes 
into D&amp;amp;D, or stuff for work, or talks at conferences, but I 
think quite a lot of it is bled away by Twitter; an idea 
happens, and then while it&amp;#8217;s still just an idea I tweet it and 
then it&amp;#8217;s used up. There&amp;#8217;s a certain amount of instant 
gratification involved in this, of course, but I think it&amp;#8217;s like 
a pressure valve; because a tweet is so short, so immediate, 
it&amp;#8217;s easy to release the steam in a hundred tiny bursts rather 
than one long exhalation. I&amp;#8217;m not good at metaphors, but in my 
head this seems like one of those thermometers for charities: my 
creative wellspring builds up to the overflow point &amp;#8212; call it 
the value of 50 &amp;#8212; and so I tweet something which drops it back 
down to 48. Then it builds up again to 50 and another tweet 
drops it back to 48, and so on. In the old days, it&amp;#8217;d run up to 
fifty and then keep going while I was consumed with the desire 
to write but also consumed with the time required to actually 
write something, and then there&amp;#8217;d be something long and detailed 
and interesting which would knock me back down to thirty, or 
ten, or&amp;nbsp;nought. &lt;/p&gt;
&lt;p&gt;I kinda miss that. I&amp;#8217;m not sure what to do about 
it, though. Swearing off Twitter isn&amp;#8217;t really an option; even 
ignoring the catastrophic tsunami of &lt;span class="caps"&gt;FOMO&lt;/span&gt; that would ensue, I&amp;#8217;d 
be hugely worried that if I&amp;#8217;m not part of the conversation, part 
of the zeitgeist, I&amp;#8217;d just vanish from the public discourse. Not 
sure my ego could cope with&amp;nbsp;that. &lt;/p&gt;
&lt;p&gt;So I&amp;#8217;m between the devil and 
the deep blue sea. Neither of those are nice (which, obviously, 
is the point) but, like so many people before me, and I suspect 
me included, I think I&amp;#8217;m going to make an effort to turn more 
thoughts into writing rather than into snide asides or 
half-finished thoughts where maybe a hundred likes will finish&amp;nbsp;them. &lt;/p&gt;
&lt;p&gt;Of course I don&amp;#8217;t have comments, so your thoughts on this 
should be communicated to me via Twitter. The irony hurricane 
proceeds apace. (Or on your own weblog which then sends me a 
webmention via the form below, of course, but that&amp;#8217;s not all 
that likely yet.) Check in a month whether I&amp;#8217;ve even remotely 
stuck to this or if I&amp;#8217;ve just taken the easy&amp;nbsp;option.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sat, 25 Jan 2020 00:45:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-01-25:/days/2020/01/25/write-more/</guid></item><item><title>Number word sequences</title><link>https://www.kryogenix.org/days/2020/01/19/number-word-sequences/</link><description>&lt;p&gt;I was idly musing about number sequences, and the &lt;a href="https://en.wikipedia.org/wiki/Lychrel_number"&gt;Lychrel algorithm&lt;/a&gt;. If you don’t know about this, there’s a good &lt;a href="https://www.youtube.com/watch?v=bN8PE3eljdA"&gt;Numberphile video&lt;/a&gt; on it: basically, take any number, reverse it, add the two, and if you get a palindrome stop, and if you don’t, keep doing it. So start with, say, &lt;code&gt;57&lt;/code&gt;, reverse to get &lt;code&gt;75&lt;/code&gt;, add them to get &lt;code&gt;57+75=132&lt;/code&gt;, which isn’t a palindrome, so do it again; reverse &lt;code&gt;132&lt;/code&gt; to get &lt;code&gt;231&lt;/code&gt;, add to get &lt;code&gt;132+231=363&lt;/code&gt;, and that’s a palindrome, so stop. There are a bunch of interesting questions that can be asked about this process (which James Grime goes into in the video), among which are: does this always terminate? What’s the longest chain before termination? And so on. &lt;code&gt;196&lt;/code&gt; famously hasn’t terminated so far and it’s been tried for several billion iterations.&lt;/p&gt;
&lt;p&gt;Anyway, I was thinking about another such iterative process. Take a number, express it in words, then add up the values of all the letters in the words, and do it again. So &lt;code&gt;1&lt;/code&gt; becomes &lt;code&gt;ONE&lt;/code&gt;, and &lt;code&gt;ONE&lt;/code&gt; is &lt;code&gt;15, 14, 5&lt;/code&gt; (&lt;code&gt;O&lt;/code&gt; is the fifteenth letter of the alphabet, &lt;code&gt;N&lt;/code&gt; the fourteenth, and so on), so we add &lt;code&gt;15+14+5&lt;/code&gt; to get &lt;code&gt;34&lt;/code&gt;, which becomes &lt;code&gt;THIRTY FOUR&lt;/code&gt;, and so on. (We skip spaces and dashes; just the letters.)&lt;/p&gt;
&lt;p&gt;Take a complete example: let’s start with 4.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; -&amp;gt; &lt;code&gt;FOUR&lt;/code&gt; -&amp;gt; &lt;code&gt;6+15+21+18 = 60&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;60&lt;/code&gt; -&amp;gt; &lt;code&gt;SIXTY&lt;/code&gt; -&amp;gt; &lt;code&gt;19+9+24+20+25 = 97&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;97&lt;/code&gt; -&amp;gt; &lt;code&gt;NINETY-SEVEN&lt;/code&gt; -&amp;gt; &lt;code&gt;14+9+14+5+20+25+19+5+22+5+14 = 152&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;152&lt;/code&gt; -&amp;gt; &lt;code&gt;ONE HUNDRED AND FIFTY-TWO&lt;/code&gt; -&amp;gt; &lt;code&gt;15+14+5+8+21+14+4+18+5+4+1+14+4+6+9+6+20+25+20+23+15 = 251&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;251&lt;/code&gt; -&amp;gt; &lt;code&gt;TWO HUNDRED AND FIFTY-ONE&lt;/code&gt; -&amp;gt; &lt;code&gt;20+23+15+8+21+14+4+18+5+4+1+14+4+6+9+6+20+25+15+14+5 = 251&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and &lt;code&gt;251&lt;/code&gt; is a &lt;em&gt;fixed point&lt;/em&gt;: it becomes itself. So we stop there, because we’re now in an infinite loop.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/numwords_4_en.png" alt="A graph of this iterative process, starting at 4"&gt;&lt;/p&gt;
&lt;p&gt;Do all numbers eventually go into a loop? Do all numbers go into the &lt;em&gt;same&lt;/em&gt; loop — that is, do they all end up at &lt;code&gt;251&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;It’s hard to tell. (Well, it’s hard to tell for me. Some of you may see some easy way to prove this, in which case do let me know.) Me being me, I wrote a little Python programme to test this out (helped immeasurably by the Python 3 &lt;a href="https://pypi.org/project/num2words/"&gt;num2words&lt;/a&gt; library). As I discovered before, if you’re trying to pick out patterns in a big graph of numbers which all link to one another, it’s &lt;a href="https://www.kryogenix.org/days/2018/03/25/squares-and-prettier-graphs/"&gt;a lot easier to have graphviz draw you pretty pictures&lt;/a&gt;, so that’s what I did.&lt;/p&gt;
&lt;p&gt;I’ve run numbers up to 5000 or so (after that I got a bit bored waiting for answers; it’s not recreational mathematics if I have to wait around, it’s a job for which I’m not getting paid). And it looks like numbers settle out into a tiny island which ends up at &lt;code&gt;251&lt;/code&gt;, a little island which ends up at &lt;code&gt;285&lt;/code&gt;, and a massive island which ends up at &lt;code&gt;259&lt;/code&gt;, all of which become themselves&lt;sup id="sf-number-word-sequences-1-back"&gt;&lt;a href="#sf-number-word-sequences-1" class="simple-footnote" title="Well, 285 is part of a 285, 267, 313, 248, 284, 285 loop."&gt;1&lt;/a&gt;&lt;/sup&gt;. (You can see &lt;a href="https://www.kryogenix.org/images/numwords_en.png"&gt;an image of the first 500 numbers&lt;/a&gt; and how they end up; extending that up to 5000 just makes the islands larger, it doesn’t create new islands… and the diagrams either get rather unwieldy or they get &lt;em&gt;really&lt;/em&gt; big and they’re hard to display.&lt;sup id="sf-number-word-sequences-2-back"&gt;&lt;a href="#sf-number-word-sequences-2" class="simple-footnote" title="This is also why the graphs use neato, which is much less pleasing a layout for this than the “tree”-style layout of dot, because the dot images end up being 32,767 pixels across and all is a disaster."&gt;2&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/numwords_en.png"&gt;&lt;img src="/images/numwords_small_en.png" alt="A graph of the first 500 numbers and their connections"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have a theory that (a) yes all numbers end up in a fixed point and (b) there probably aren’t any more fixed points. Warning: dubious mathematical assertions lie ahead.&lt;/p&gt;
&lt;p&gt;There can’t be that many numbers that encode to themselves. This is both because I’ve run it up to 5000 and there aren’t, and because it just seems kinda unlikely and coincidental. So, we assume that the fixed points we have are most or all of the fixed points available. Now, every number has to end up &lt;em&gt;somewhere&lt;/em&gt;; the process can’t just keep going forever. So, if you keep generating numbers, you’re pretty likely at some point to hit a number you’ve already hit, which ends up at one of the fixed points. And finally, the numbers-to-words process doesn’t grow as fast as actual numbers do. Once you’ve got over a certain limit, you’ll pretty much always end up generating a number smaller than oneself in the next iteration. The reason I think this is that adding more to numbers doesn’t make their word lengths all that much longer. Take, for example, the longest number (in words) up to 100,000, which is (among others) &lt;code&gt;73,373&lt;/code&gt;, or &lt;code&gt;seventy-three thousand, three hundred and seventy-three&lt;/code&gt;. This is &lt;code&gt;47&lt;/code&gt; characters long. Even if they were all &lt;code&gt;Z&lt;/code&gt;, which they aren’t, it’d generate &lt;code&gt;47×26=1222&lt;/code&gt;, which is way less than &lt;code&gt;73,373&lt;/code&gt;. And adding lots more doesn’t help much: if we add a million to that number, we put &lt;code&gt;one million&lt;/code&gt; on the front of it, which is only another &lt;code&gt;10&lt;/code&gt; characters, or a maximum added value of &lt;code&gt;260&lt;/code&gt;. There’s no actual ceiling — numbers in words still grow without limit as the number itself grows — but it doesn’t grow anywhere near as fast as the number itself does. So the numbers generally get smaller as they iterate, until they get down below four hundred or so… and all of those numbers terminate in one of the three fixed points already outlined. So I think that all numbers will terminate thus.&lt;/p&gt;
&lt;p&gt;The obvious flaw with this argument is that it ought to apply to the reverse-and-add process above too and it doesn’t for 196 (and some others). So it’s possible that my approach will also make a Lychrel-ish number that may not terminate, but I don’t think it will; the argument above seems compelling.&lt;/p&gt;
&lt;p&gt;You might be thinking: bloody English imperialist! What about &lt;em&gt;les nombres&lt;/em&gt;, eh? Or &lt;em&gt;die Zahlen&lt;/em&gt;? Did you check those? &lt;em&gt;Mais oui&lt;/em&gt;, I checked (nice one &lt;code&gt;num2words&lt;/code&gt; for supporting a zillion languages!) Same thing. There are different fixed points (&lt;del&gt;French has one big island until &lt;code&gt;177&lt;/code&gt;, a very small island to &lt;code&gt;232&lt;/code&gt;, a &lt;code&gt;258, 436&lt;/code&gt; pair, and &lt;code&gt;222&lt;/code&gt; which encodes to itself and nothing else encodes to it, for example.&lt;/del&gt;&lt;ins&gt;Not quite: see the update at the end. Nothing changes about the maths, though.&lt;/ins&gt; Images of &lt;a href="https://www.kryogenix.org/images/numwords_fr.png"&gt;French&lt;/a&gt; and &lt;a href="https://www.kryogenix.org/images/numwords_de.png"&gt;German&lt;/a&gt; are available, and you can of course use &lt;a href="https://www.kryogenix.org/code/numwords.py"&gt;the Python 3 script&lt;/a&gt; to make your own; run it as &lt;code&gt;python3 numwords.py no&lt;/code&gt; for Norwegian, etc.) You may also be thinking “what about American English, eh? &lt;code&gt;101&lt;/code&gt; is &lt;code&gt;ONE HUNDRED ONE&lt;/code&gt;, not &lt;code&gt;ONE HUNDRED AND ONE&lt;/code&gt;.” I have not tested this, partially because I think the above argument should still hold for it, partially because &lt;code&gt;num2words&lt;/code&gt; doesn’t support it, and partially because that’s what you get for throwing a bunch of perfectly good tea into the ocean, but I don’t think it’d be hard to verify if someone wants to try it.&lt;/p&gt;
&lt;p&gt;No earth-shattering revelations here, not that it matters anyway because I’m 43 and you can only win a Fields Medal if you’re under forty, but this was a fun little diversion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Minirop &lt;a href="https://twitter.com/minirop/status/1219191671746940928"&gt;pointed out on Twitter&lt;/a&gt; that my code wasn’t correctly highlighting the “end” of a chain, which indeed it was not. I’ve poked the code, and the diagrams, to do this better; it’s apparent that both &lt;a href="https://www.kryogenix.org/images/numwords_fr.png"&gt;French&lt;/a&gt; and &lt;a href="https://www.kryogenix.org/images/numwords_de.png"&gt;German&lt;/a&gt; have most numbers end up in a fairy large loop, rather than at one specific number. I don’t &lt;em&gt;think&lt;/em&gt; this alters my argument for why this is likely to happen for all numbers (because a loop of numbers which all encode to one another is about as rare as a single number which encodes to itself, I’d guess), but maybe I haven’t thought about it enough!&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-number-word-sequences-1"&gt;Well, 285 is part of a 285, 267, 313, 248, 284, 285 loop. &lt;a href="#sf-number-word-sequences-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-number-word-sequences-2"&gt;This is also why the graphs use &lt;code&gt;neato&lt;/code&gt;, which is much less pleasing a layout for this than the “tree”-style layout of &lt;code&gt;dot&lt;/code&gt;, because the &lt;code&gt;dot&lt;/code&gt; images end up being 32,767 pixels across and all is a disaster. &lt;a href="#sf-number-word-sequences-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 19 Jan 2020 22:02:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-01-19:/days/2020/01/19/number-word-sequences/</guid></item><item><title>The tiniest of Python templating engines</title><link>https://www.kryogenix.org/days/2020/01/19/the-tiniest-of-python-templating-engines/</link><description>&lt;p&gt;In someone else&amp;#8217;s project (which they&amp;#8217;ll doubtless tell you about themselves when it&amp;#8217;s done) I needed a tiny Python templating engine. That is: I wanted to be able to say, here is a template string, please substitute a bunch of variables into it. Now, Python already does this, in about &lt;a href="https://wiki.python.org/moin/Templating"&gt;thirty different ways&lt;/a&gt;, and &lt;a href="https://docs.python.org/3/library/string.html#custom-string-formatting"&gt;&lt;code&gt;str.format&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://docs.python.org/3/library/string.html#template-strings"&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt; do most of it as&amp;nbsp;built-in.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;str.format&lt;/code&gt; works like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My name is {name} and I am {age} years old&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stuart&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and &lt;code&gt;string.Template&lt;/code&gt; like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;My name is $name and I am $age years old&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;safe_substitute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stuart&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both of which are pretty &lt;span class="caps"&gt;OK&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;However, what they&amp;#8217;re missing is loops; having more than one of a thing in your template, and looping over a list, substituting it each time. Every even fractionally-more-featureful templating system has this, whether &lt;a href="http://mustache.github.io/"&gt;Mustache&lt;/a&gt; or &lt;a href="https://jinja.palletsprojects.com/en/2.10.x/"&gt;Jinja&lt;/a&gt; or whatever, of course, but I didn&amp;#8217;t want another dependency. All I needed was &lt;code&gt;str.format&lt;/code&gt; but with loops. So, I thought, I&amp;#8217;ll write one, in about four lines of code, so I can just drop the function in to my Python file and then I&amp;#8217;m&amp;nbsp;good.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;LoopTemplate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loophandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;LoopTemplate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;var&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]]])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\{loop (?P&amp;lt;var&amp;gt;[^}]+)\}(?P&amp;lt;content&amp;gt;.*?)\{endloop\}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;loophandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DOTALL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And lo, twas so. So I can now&amp;nbsp;do &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;LoopTemplate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;I am {name} and my imps&amp;#39; names are: {loop imps}{name}{endloop}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stuart&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;imps&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Pyweazle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Grimthacket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hardebon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and it all works. Not revolutionary, of course, but I was mildly pleased with&amp;nbsp;myself.&lt;/p&gt;
&lt;p&gt;Much internal debate about whether &lt;code&gt;loophandler()&lt;/code&gt; should have been a &lt;code&gt;lambda&lt;/code&gt;, but I eventually decided it was more confusing that way, on the grounds that it was confusing &lt;em&gt;me&lt;/em&gt; and I knew what it was meant to be&amp;nbsp;doing.&lt;/p&gt;
&lt;p&gt;A brief explanation: &lt;code&gt;re.sub&lt;/code&gt; lets you pass a function as the thing to replace with, rather than just a string. So we find all examples of &lt;code&gt;{loop something}...{endloop}&lt;/code&gt; in the passed string, look up &lt;code&gt;something&lt;/code&gt; in the &amp;#8220;context&amp;#8221;, or the dict of substitution variables you passed to &lt;code&gt;LoopTemplate&lt;/code&gt;, and then we call &lt;code&gt;LoopTemplate&lt;/code&gt; &lt;em&gt;again&lt;/em&gt;, once per item in &lt;code&gt;something&lt;/code&gt; (which is expected to be a list), and pass it the &lt;code&gt;...&lt;/code&gt; as its string and the next item in &lt;code&gt;something&lt;/code&gt; as its context. So it all works. Of course, there&amp;#8217;s no error handling or anything &amp;#8212; if &lt;code&gt;something&lt;/code&gt; isn&amp;#8217;t present in the context, or if it&amp;#8217;s not a list, or if you stray in any other way from the path of righteousness, it&amp;#8217;ll incomprehensibly blow up. So don&amp;#8217;t do&amp;nbsp;that.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 19 Jan 2020 10:30:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2020-01-19:/days/2020/01/19/the-tiniest-of-python-templating-engines/</guid></item><item><title>Brum tech pub crawl 2019</title><link>https://www.kryogenix.org/days/2019/12/19/brum-tech-pub-crawl-2019/</link><description>&lt;p&gt;It&amp;#8217;s time for the Birmingham tech pub crawl! Saturday 28th December&amp;nbsp;2019.&lt;/p&gt;
&lt;p&gt;This is called a pub crawl, but it&amp;#8217;s really an excuse to get together, hang out, have a couple of drinks &amp;#8212; alcoholic or not, that&amp;#8217;s entirely up to you and there&amp;#8217;s no pressure &amp;#8212; in various places around the Jewellery Quarter. (There was discussion of being in the city centre, or in Digbeth, but since it&amp;#8217;s a Saturday and we want to talk rather than scream over the music, the &lt;span class="caps"&gt;JQ&lt;/span&gt; it is.) Get away from the turkey and chill out and meet people. Bring your family and your friends along. Pop in for an hour while you&amp;#8217;re in town and say hello, or show up at 12 noon and still be there at midnight, it&amp;#8217;s up to you. Lots of people come at various points during the day, and it&amp;#8217;s all very friendly, so if you don&amp;#8217;t think you know anyone, or you&amp;#8217;re on your own, that&amp;#8217;s not a problem. Come, chat to people, have a drink, have a laugh. The agenda this year is, roughly, six different places and a couple of hours in each, so we move around a bit, but it&amp;#8217;s all in the Jewellery Quarter so there&amp;#8217;s not a lot of walking. If you&amp;#8217;re feeling unsure do feel free to ping me &amp;#8212; &lt;a href="https://twitter.com/sil"&gt;@sil&lt;/a&gt; on Twitter &amp;#8212; and I can tell you where we are, and I&amp;#8217;ll try to keep things updated during the&amp;nbsp;day. &lt;/p&gt;
&lt;p&gt;Everyone is welcome, and everyone is invited. Bring friends along; drink coffees or soft drinks; pop in for an hour; whatever you fancy. Tell everyone about your pressies, talk about all the tech you thought about over the Christmas period, or don&amp;#8217;t talk about technology at all and just enjoy hanging out with your mates. Looking forward to seeing you&amp;nbsp;all.&lt;/p&gt;
&lt;p&gt;A rough&amp;nbsp;agenda:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;The Lord Clifden, 12pm - 2pm (they do food if you fancy&amp;nbsp;lunch)&lt;/li&gt;
    &lt;li&gt;The Church, 2pm -&amp;nbsp;4pm&lt;/li&gt;
    &lt;li&gt;1000 Trades, 4pm -&amp;nbsp;6pm&lt;/li&gt;
    &lt;li&gt;The Rose Villa Tavern, 6pm - 8pm (probably grab a bite to eat here if we haven&amp;#8217;t&amp;nbsp;already)&lt;/li&gt;
    &lt;li&gt;The Queen&amp;#8217;s Arms, 8pm -&amp;nbsp;10pm&lt;/li&gt;
    &lt;li&gt;The Actress and Bishop, 10pm -&amp;nbsp;whenever&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="/images/jqtechxmas19.svg"&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 19 Dec 2019 15:35:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2019-12-19:/days/2019/12/19/brum-tech-pub-crawl-2019/</guid></item><item><title>Pyramid</title><link>https://www.kryogenix.org/days/2019/12/15/pyramid/</link><description>&lt;p&gt;I keep wanting this quotation and not being able to remember half the things in the list, so I&amp;#8217;m putting it on my website: this is what websites are&amp;nbsp;for.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s from The Official Slacker Handbook by Sarah Dunn, which I painstakingly tracked down and purchased a second-hand paper copy of to find this, and it&amp;nbsp;reads:&lt;/p&gt;
&lt;blockquote&gt;Adam Weishaupt, founder of the Order of Illuminati, killed George Washington and served himself as our first president for two terms. The Illuminati are ultimately responsible for the French Revolution, the Bolshevik revolution, the American Revolution, the Pope, the Kennedy assassination, the Manson family, the Rockefeller dynasty, the numbers 5, 17, and 23, the New Age movement, the Nazis, &lt;span class="caps"&gt;UFO&lt;/span&gt; visitations, the Universal Price Code, and the pyramid with the eye on the back of the dollar bill.&lt;/blockquote&gt;

&lt;p&gt;No comment on whether I believe any of this, but of course that&amp;#8217;s just what they &lt;em&gt;want&lt;/em&gt; you to think.&amp;nbsp;Fnord.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Sun, 15 Dec 2019 13:12:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2019-12-15:/days/2019/12/15/pyramid/</guid></item><item><title>Three HomeSignal femtocell for bad coverage</title><link>https://www.kryogenix.org/days/2019/04/29/three-homesignal-femtocell-for-bad-coverage/</link><description>&lt;p&gt;My flat has terrible mobile coverage. It’s okaaaay-ish in the living room and dead in the bedrooms, and it’s infuriating. You might be thinking, &lt;em&gt;but Stuart! you live right in the centre of Birmingham! surely coverage in a city centre would be amazing!&lt;/em&gt; at which point you will get a look like this&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/john-oliver-look-to-camera.gif" alt=":|"&gt;&lt;/p&gt;
&lt;p&gt;and then I will say, &lt;em&gt;yeah, it’s something to do with the buildings or concrete or something, it’s fine when you’re outside. It’s an old building. Maybe they put copper in the walls like in the Rookery or something.&lt;/em&gt; Anyway, whatever, it never worked, regardless of which operator you’re on. So, when I moved in, I contacted &lt;em&gt;my&lt;/em&gt; operator, Three, and said: this sucks, do something about it. They said, sure thing, install our Wi-Fi Calling app, Three in-Touch. Which I did, and managed for two years.&lt;/p&gt;
&lt;p&gt;I say “managed” because that app is &lt;em&gt;terrible&lt;/em&gt;. The &lt;span class="caps"&gt;UI&lt;/span&gt; is clunky, it doesn’t handle picture messages, there’s no way to mark a message read, the phone call quality cuts out and breaks all the time, and most annoyingly when you get an &lt;span class="caps"&gt;SMS&lt;/span&gt; it shows a notification but doesn’t play a sound, so I have no idea that I &lt;em&gt;got&lt;/em&gt; a notification&lt;sup id="sf-three-homesignal-femtocell-for-bad-coverage-1-back"&gt;&lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-1" class="simple-footnote" title="They have had, looking at the internet, this reported to them about six hundred billion times"&gt;1&lt;/a&gt;&lt;/sup&gt;. I’ve missed &lt;em&gt;loads&lt;/em&gt; of SMSes over the last couple of years because of that.&lt;/p&gt;
&lt;p&gt;Anyway, the Three In-Touch&lt;sup id="sf-three-homesignal-femtocell-for-bad-coverage-2-back"&gt;&lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-2" class="simple-footnote" title="they don’t seem to be anything like consistent about the spelling and punctuation of the name of this app, so I don’t see why I should be either"&gt;2&lt;/a&gt;&lt;/sup&gt; app popped up a little dialogue box last week:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/threeintouchdialog.png" alt="We are updating our network. From 15 May 2019, the Three inTouch app will no longer be supported. Your call history and SMS sent or received will remain visible but you will no longer be able to make calls or send or receive SMS through the app. If you delete the app, your call and SMS history will be lost. WiFi calling is already built into most handsets these days and will continue to work in any enabled handset without need of the app"&gt;&lt;/p&gt;
&lt;p&gt;Ah, thought I. WiFi calling is already built in, is it?&lt;/p&gt;
&lt;p&gt;You see, there’s a problem with that. On iOS it’s built in. On Android, on a &lt;em&gt;lot&lt;/em&gt; of phones, it’s built in &lt;em&gt;only if you bought the phone from your carrier&lt;/em&gt;, which I never do. It needs some special bit of config built into the firmware for wifi calling to work.&lt;sup id="sf-three-homesignal-femtocell-for-bad-coverage-3-back"&gt;&lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-3" class="simple-footnote" title="It seems like this might be fixed in very recent versions of Android? It’s not at all clear. This problem is of course exacerbated by not getting system updates unless your phone is less than a week old."&gt;3&lt;/a&gt;&lt;/sup&gt; So I thought, well, I’m screwed then. Because Three won’t update my Z5 Compact to have whatever firmware it needs to do wifi calling, they’ve killed the (execrable, but functional) app, and I’m not buying a new phone until the phone industry stops making them the size of a football pitch.&lt;sup id="sf-three-homesignal-femtocell-for-bad-coverage-4-back"&gt;&lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-4" class="simple-footnote" title="I saw a bloke on Twitter the other day say rather sneerily, I bet all the people who are mocking folding phones like the Samsung Fold now also mocked the Samsung Note until they realised they like big screens after all. No, sneery bloke. I mock the folding phones now for being a (terribly clever technical) solution in search of a problem, I hated the huge Note when it first came out, and I hate all huge phones now. For god’s sake, phone industry, make a small flagship phone. Just one. I suppose it’ll have to be an Xperia Compact again, but it’d be good if there were competition for it."&gt;4&lt;/a&gt;&lt;/sup&gt; I got on the live chat thing with Three, who (predictably) said, yeah, we’re not sending you the firmware, pull the other one, son, it’s got bells on.&lt;sup id="sf-three-homesignal-femtocell-for-bad-coverage-5-back"&gt;&lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-5" class="simple-footnote" title="They also said that they’re rebuilding the Three inTouch app to be good and work with 5G. Apparently. At some unknown point in the future. I carefully did not point out that if you’re building a replacement for something then there needs to be overlap between the two things rather than an interregnum during which every user is screwed, because that information needs to go to their project manager rather than their support team, but to be clear: to whichever project manager thinks this is an acceptable way to do deployments, I hope someone hides snakes in your car."&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;And then, a surprise. Because they said, howsabout we send you a &lt;a href="https://three.co.uk/homesignal"&gt;Three HomeSignal&lt;/a&gt; device? It’s a box that plugs into your wifi and then your phone sees it as a phone antenna and you get good coverage.&lt;/p&gt;
&lt;p&gt;And my brain went, what, a femtocell? A femtocell like I asked you about when I first started having coverage problems and you swore blind didn’t exist because everyone has wifi calling now? One of those femtocells?&lt;/p&gt;
&lt;p&gt;Having been taught to never look a gift femtocell in the mouth, though, I didn’t say anything except “yes please I’d like that, cheers very much”. And so it arrived in the post two days later. Result.&lt;/p&gt;
&lt;p&gt;However, the user guide leaves a bit to be desired.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/threehomesignaluserguide.png" alt="The Three HomeSignal user guide, which says to plug in the ethernet cable and the power, and does not at all mention that it also needs a SIM card"&gt;&lt;/p&gt;
&lt;p&gt;I do not know why the user guide completely ignores that you need to also plug a &lt;span class="caps"&gt;SIM&lt;/span&gt; card into the HomeSignal device, but it does in fact ignore that. You should not ignore it: you need to do it, otherwise it doesn’t work; you’ll get an error, which is the &lt;span class="caps"&gt;LED&lt;/span&gt; flashing red five times, which means (in the only mention of a &lt;span class="caps"&gt;SIM&lt;/span&gt; anywhere in the user guide) “&lt;span class="caps"&gt;SIM&lt;/span&gt; card problem”. At which point you think: what bloody &lt;span class="caps"&gt;SIM&lt;/span&gt; card?&lt;/p&gt;
&lt;p&gt;More confusingly still, Three include &lt;em&gt;two&lt;/em&gt; &lt;span class="caps"&gt;SIM&lt;/span&gt; cards in the package. One is a Pay as you Go &lt;span class="caps"&gt;SIM&lt;/span&gt;. This is &lt;em&gt;not&lt;/em&gt; the one you want. I don’t know why the hell they put that in; fine, if you wanna sell me on your products, go for it, but you made the HomeSignal process a billion times more confusing. The &lt;span class="caps"&gt;SIM&lt;/span&gt; card that goes into the HomeSignal device is on a special green card, and it says “HomeSignal device only” on it. Put that one in the HomeSignal box. The other one, the Pay as you Go one, you should sellotape it to a brick and then send it back to Three, postage on delivery.&lt;/p&gt;
&lt;p&gt;Once you’ve done that, it works. So, Three, if you’re listening: one bonus point for finally deciding to update the awful Three in Touch app. Minus twenty points for not having a replacement for people who didn’t buy phones from you. Plus another twenty points for offering me the Three HomeSignal femtocell which fixes my problem. Minus a little bit for the bad instructions which don’t say that I have to put a &lt;span class="caps"&gt;SIM&lt;/span&gt; card in, and then minus quite a lot more for putting &lt;em&gt;two&lt;/em&gt; &lt;span class="caps"&gt;SIM&lt;/span&gt; cards in the box when I do finally work that out! So, on balance, this is probably about neutral; they have fixed a problem I shouldn’t have and which is partially caused by phone manufacturers, using a technically very clever solution which was confusingly explained. Business as usual in the mobile phone world, I suppose, unless you’re using an Apple phone at which point everything works really smoothly until it suddenly doesn’t. One day someone will get all of this right, surely?&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-three-homesignal-femtocell-for-bad-coverage-1"&gt;They have had, looking at the internet, this reported to them about six hundred billion times &lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-three-homesignal-femtocell-for-bad-coverage-2"&gt;they don’t seem to be anything like consistent about the spelling and punctuation of the name of this app, so I don’t see why I should be either &lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-three-homesignal-femtocell-for-bad-coverage-3"&gt;It seems like this might be fixed in very recent versions of Android? It’s not at all clear. This problem is of course exacerbated by not getting system updates unless your phone is less than a week old. &lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-3-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-three-homesignal-femtocell-for-bad-coverage-4"&gt;I saw a bloke on Twitter the other day say rather sneerily, I bet all the people who are mocking folding phones like the Samsung Fold now also mocked the Samsung Note until they realised they like big screens after all. No, sneery bloke. I mock the folding phones now for being a (terribly clever technical) solution in search of a problem, I hated the huge Note when it first came out, and I hate all huge phones now. For god’s sake, phone industry, make a small flagship phone. Just one. I suppose it’ll have to be an Xperia Compact again, but it’d be good if there were competition for it. &lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-4-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-three-homesignal-femtocell-for-bad-coverage-5"&gt;They also said that they’re rebuilding the Three inTouch app to be good and work with 5G. Apparently. At some unknown point in the future. I carefully did not point out that if you’re building a replacement for something then there needs to be overlap between the two things rather than an interregnum during which every user is screwed, because that information needs to go to their project manager rather than their support team, but to be clear: to whichever project manager thinks this is an acceptable way to do deployments, I hope someone hides snakes in your car. &lt;a href="#sf-three-homesignal-femtocell-for-bad-coverage-5-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 29 Apr 2019 09:46:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2019-04-29:/days/2019/04/29/three-homesignal-femtocell-for-bad-coverage/</guid></item><item><title>The ray-traced pictures</title><link>https://www.kryogenix.org/days/2019/04/01/the-ray-traced-pictures/</link><description>&lt;p&gt;A two-decade-long search is&amp;nbsp;over.&lt;/p&gt;
&lt;p&gt;A couple of years ago I wrote up the efforts required to &lt;a href="https://www.kryogenix.org/days/2017/08/24/double-oh-seven/"&gt;recover a tiny sound demo for the Archimedes computer&lt;/a&gt;. In there, I made brief mention of a sample from an Arc sound editor named Armadeus, of a man saying &amp;#8220;the mask, the ray-traced pictures, and finally the wire-frame city&amp;#8221;. That wasn&amp;#8217;t an idle comment. &lt;a href="http://whizzy.org"&gt;Bill&lt;/a&gt; and I have been looking for that sample for twenty&amp;nbsp;years.&lt;/p&gt;
&lt;p&gt;You&amp;#8217;re thinking, I bet it&amp;#8217;s not been twenty years. And you would be wrong. &lt;a href="https://groups.google.com/d/topic/comp.sys.acorn.misc/3YhswrNrGSo/discussion"&gt;Here&amp;#8217;s Bill posting to &lt;code&gt;comp.sys.acorn&lt;/code&gt; in 2003&lt;/a&gt;, for a&amp;nbsp;start.&lt;/p&gt;
&lt;p&gt;My daughter knows about this sample. &lt;a href="http://jonobacon.com"&gt;Jono&lt;/a&gt; knows about it. I use the phrase as a microphone test sentence, the same way other people use &amp;#8220;testing, testing, 1, 2&amp;#8221;. It&amp;#8217;s lived in my head since I was in middle school, there on the Arc machines in &lt;span class="caps"&gt;CL0&lt;/span&gt;, which was Computer Lab Zero. (There was a &lt;span class="caps"&gt;CL1&lt;/span&gt;, which had the &lt;span class="caps"&gt;BBC&lt;/span&gt; Micros in it, on the first floor. I never did know whether &lt;span class="caps"&gt;CL0&lt;/span&gt;, which was on the ground floor, was a subtle joke about floor levels and computers&amp;#8217; zero-based numbering schemes, or if Mr Irons the teacher was just weird. He might have been weird. He thought the name for an exclamation mark was&amp;nbsp;&amp;#8220;pling&amp;#8221;.)&lt;/p&gt;
&lt;p&gt;Anyway, we got to talking about it again, and Bill said: to hell with this, I&amp;#8217;ll just buy Armadeus. This act of selfless heroism earns him a gold medal. And a pint, yes it does. I&amp;#8217;ll let him tell the story about that, and the mindblowing worthlessness of modern floppy drives, in his own time. But today it arrived, and now I have an&amp;nbsp;mp3!&lt;/p&gt;
&lt;p&gt;&lt;audio src="https://kryogenix.org/random/themask.mp3" controls&gt;
    &lt;a href="https://kryogenix.org/random/themask.mp3"&gt;The ray-traced pictures. The mask. And finally, the wire-frame city.&lt;/a&gt;
&lt;/audio&gt;&lt;/p&gt;
&lt;p&gt;Interestingly, I thought it was in the other order. The sample actually says: &amp;#8220;The ray-traced pictures. The mask. And finally, the wire-frame city.&amp;#8221; I thought &amp;#8220;the mask&amp;#8221; was first, and it isn&amp;#8217;t. Still, memory plays tricks on you after this many years. Apparently it&amp;#8217;s from a Clares sound and music demo originally (Clares were the (defunct) company that made Armadeus. The name appears to have risen from the dead a couple of times since. No idea who they are now, if anyone.) Anyway, I don&amp;#8217;t care; I&amp;#8217;ve got it now. And it&amp;#8217;s on my website, which means it will never go away. We found it once before and then lost the sample; I&amp;#8217;m not making the same mistake again. Is this how Indy felt when he found the&amp;nbsp;Ark?&lt;/p&gt;
&lt;p&gt;Also, a shout out to &lt;a href="http://arcem.sourceforge.net/"&gt;arcem&lt;/a&gt;, which is an Archimedes emulator which runs fine on Ubuntu. It&amp;#8217;s a pain in the bum to set up &amp;#8212; you have to compile it, find ROMs, turn on sound support, use weird keypresses, set up hard drives in an incomprehensible text file, etc; someone ought to snap it or something so it&amp;#8217;s easier &amp;#8212; but it&amp;#8217;s been rather nice revisiting a lot of the &lt;a href="http://www.apdl.org.uk/apdlpd/library/library.htm"&gt;Arc software&lt;/a&gt; that&amp;#8217;s still collected and around for download. Desktop sillies. Someone should bring desktop sillies back to modern desktops. And reconnecting to &lt;a href="http://arcade-bbs.net"&gt;Arcade &lt;span class="caps"&gt;BBS&lt;/span&gt;&lt;/a&gt;, who need to fix all their &lt;span class="caps"&gt;FTP&lt;/span&gt; links to point to &lt;code&gt;telnet.arcade-bbs.net&lt;/code&gt; rather than the now-dead &lt;code&gt;arcade.demon.co.uk&lt;/code&gt;. I got to watch !DeskDuck again, which was a small mallard duck that swum up and down along the top of your icon bar. And a bunch of old demos from &lt;span class="caps"&gt;BIA&lt;/span&gt; and Arcangel and so on. I&amp;#8217;d forgotten a bit how much I liked &lt;span class="caps"&gt;RISC&lt;/span&gt; &lt;span class="caps"&gt;OS&lt;/span&gt;, and in particular that it&amp;#8217;s &lt;em&gt;so fast&lt;/em&gt; to start up. Bring that&amp;nbsp;back.&lt;/p&gt;
&lt;p&gt;Nice one Bill. Time for a&amp;nbsp;pint.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Mon, 01 Apr 2019 16:41:00 +0100</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2019-04-01:/days/2019/04/01/the-ray-traced-pictures/</guid></item><item><title>Chicken McNuggets</title><link>https://www.kryogenix.org/days/2019/01/30/chicken-mcnuggets/</link><description>&lt;p&gt;Back in the old days, when things made sense, you could buy Chicken McNuggets in boxes of 6, 9, and 20&lt;sup id="sf-chicken-mcnuggets-1-back"&gt;&lt;a href="#sf-chicken-mcnuggets-1" class="simple-footnote" title="yes, yes, now you can get four in a Happy Meal, but that’s just daft. Who only wants four chicken nuggets?"&gt;1&lt;/a&gt;&lt;/sup&gt;. So if you were &lt;em&gt;really&lt;/em&gt; hungry, you could buy, for example, 30: two boxes of 9 and two boxes of 6. If you weren’t that hungry you’re a bit scuppered; there’s no combination of 6, 9, and 20 which adds up to, say, 14. What if you were spectacularly hungry, but also wanted to annoy the McDonalds people? What’s the largest order of Chicken McNuggets which they could not fulfil?&lt;/p&gt;
&lt;p&gt;Well, that’s how old I am today. &lt;a href="https://www.kryogenix.org/days/2018/01/30/and-everything/"&gt;H&lt;/a&gt;&lt;a href="https://www.kryogenix.org/days/2017/01/30/niobium/"&gt;a&lt;/a&gt;&lt;a href="http://www.kryogenix.org/days/2016/01/31/what-i-did-on-my-holidays/"&gt;p&lt;/a&gt;&lt;a href="http://www.kryogenix.org/days/2015/01/30/temporarily-older-than-benedict-cumberbatch-for-six-months-again-dammit/"&gt;p&lt;/a&gt;&lt;a href="http://www.kryogenix.org/days/2014/01/30/but-these-posts-go-to-eleven/"&gt;y&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2013/01/30/thirty-seven-for-gods-sake-how-did-that-happen/"&gt;b&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2012/01/30/a-year-goes-past/"&gt;i&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2011/01/31/brave-new-age/"&gt;r&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2009/01/30/mini-hippo-returns/"&gt;t&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2008/01/30/another-year-passes/"&gt;h&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2007/01/30/my-week/"&gt;d&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2006/01/30/turning-thirty/"&gt;a&lt;/a&gt;&lt;a href="http://kryogenix.org/days/2005/01/30/staring/"&gt;y&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2004/01/31/birthdays/"&gt;to&lt;/a&gt; &lt;a href="http://kryogenix.org/days/2003/01/30/revolution/"&gt;me&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tomorrow I’m delivering my talk about &lt;a href="https://kryogenix.org/code/the-ux-of-text-fusion/"&gt;The &lt;span class="caps"&gt;UX&lt;/span&gt; of Text&lt;/a&gt; at &lt;a href="https://www.meetup.com/brumphp/events/258129063/"&gt;BrumPHP&lt;/a&gt;, and there may be a birthday drink or two afterwards. So if you’re in the area, do drop by.&lt;/p&gt;
&lt;p&gt;Best to not talk about politics right now. It was bad two years ago and it’s worse now. We’re currently in the teeth of Brexit. I thought this below from Jon Worth was a useful summary of what the next steps are, but this is no long-term thing; this shows what might happen in the next few days, which is as far out as can be planned. I have no idea what I’ll be thinking when writing my birthday post next year. I’m pretty worried.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en-gb"&gt;&lt;p lang="en" dir="ltr"&gt;After tonight's Commons vote for a 🦄 I have updated by &lt;a href="https://twitter.com/hashtag/Brexit?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Brexit&lt;/a&gt; diagram&lt;br&gt;&lt;br&gt;Next: May off to Brussels to demand something or other, and be rebuffed, and return to Commons in a fortnight more disgruntled&lt;br&gt;&lt;br&gt;Chances of No Deal now much higher &lt;a href="https://t.co/aajV003M0F"&gt;pic.twitter.com/aajV003M0F&lt;/a&gt;&lt;/p&gt;— Jon Worth (@jonworth) &lt;a href="https://twitter.com/jonworth/status/1090358419297579008?ref_src=twsrc%5Etfw"&gt;29 January 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Right, back to work. I’d rather be planning a D&amp;amp;D campaign, but putting together a group to do that is harder than it looks.&lt;/p&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-chicken-mcnuggets-1"&gt;yes, yes, now you can get four in a Happy Meal, but that’s just daft. Who only wants four chicken nuggets? &lt;a href="#sf-chicken-mcnuggets-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 30 Jan 2019 16:26:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2019-01-30:/days/2019/01/30/chicken-mcnuggets/</guid></item><item><title>Brum tech pub crawl 2018</title><link>https://www.kryogenix.org/days/2018/12/27/brum-tech-pub-crawl-2018/</link><description>&lt;p&gt;It&amp;#8217;s time for the Birmingham tech pub crawl! Saturday 29th December&amp;nbsp;2018.&lt;/p&gt;
&lt;p&gt;This is called a pub crawl, but it&amp;#8217;s really an excuse to get together, hang out, have a couple of drinks &amp;#8212; alcoholic or not, that&amp;#8217;s entirely up to you and there&amp;#8217;s no pressure &amp;#8212; in various places around the Jewellery Quarter. Get away from the turkey and chill out and meet people. Bring your family and your friends along. Pop in for an hour while you&amp;#8217;re in town and say hello, or show up at 12 noon and still be there at midnight, it&amp;#8217;s up to you. Lots of people come at various points during the day, and it&amp;#8217;s all very friendly, so if you don&amp;#8217;t think you know anyone, or you&amp;#8217;re on your own, that&amp;#8217;s not a problem. Come, chat to people, have a drink, have a laugh. The agenda this year is, roughly, six different places and a couple of hours in each, so we move around a bit, but it&amp;#8217;s all in the Jewellery Quarter so there&amp;#8217;s not a lot of walking. If you&amp;#8217;re feeling unsure do feel free to ping me &amp;#8212; &lt;a href="https://twitter.com/sil"&gt;@sil&lt;/a&gt; on Twitter &amp;#8212; and I can tell you where we are, and I&amp;#8217;ll try to keep things updated during the day. Everyone is welcome, and everyone is&amp;nbsp;invited.&lt;/p&gt;
&lt;p&gt;A rough&amp;nbsp;agenda:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;The Lord Clifden, 12pm - 2pm (they do food if you fancy&amp;nbsp;lunch)&lt;/li&gt;
    &lt;li&gt;The Church, 2pm -&amp;nbsp;4pm&lt;/li&gt;
    &lt;li&gt;1000 Trades, 4pm -&amp;nbsp;6pm&lt;/li&gt;
    &lt;li&gt;The Rose Villa Tavern, 6pm - 8pm (probably grab a bite to eat here if we haven&amp;#8217;t&amp;nbsp;already)&lt;/li&gt;
    &lt;li&gt;The Queen&amp;#8217;s Arms, 8pm -&amp;nbsp;10pm&lt;/li&gt;
    &lt;li&gt;The Actress and Bishop, 10pm -&amp;nbsp;whenever&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="/images/jqtechxmas18.svg"&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Thu, 27 Dec 2018 21:04:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2018-12-27:/days/2018/12/27/brum-tech-pub-crawl-2018/</guid></item><item><title>Why isn’t it their job</title><link>https://www.kryogenix.org/days/2018/12/19/why-isn-t-it-their-job/</link><description>&lt;p&gt;Bruce Lawson has written a rather nice description of &lt;a href="https://www.brucelawson.co.uk/2018/the-practical-value-of-semantic-html/"&gt;the practical value of semantic &lt;span class="caps"&gt;HTML&lt;/span&gt;&lt;/a&gt;, and you should read it, especially if you&amp;#8217;re a full-stack developer who feels that &lt;span class="caps"&gt;HTML&lt;/span&gt; is the super-easy part of your toolkit and the components are the most important. But there&amp;#8217;s one extra argument I&amp;#8217;d like to add to his list; less important than some of the others, but a different&amp;nbsp;nuance.&lt;/p&gt;
&lt;p&gt;Sometimes, when I find myself doing a bit of extra work to accommodate some users with unusual requirements, I find myself thinking: why isn&amp;#8217;t it their job to fix this, rather than mine? This is an unworthy thought, and I don&amp;#8217;t like that I have it, and I don&amp;#8217;t &lt;em&gt;respond&lt;/em&gt; to this thought; doing the right thing so all my users can use my stuff is important. But I do have the thought, nonetheless. Whether I&amp;#8217;m adding aria labels for screenreaders, or doing extra work to build sites that layer behaviour on top as additional rather than critical, or checking text contrast ratios, or testing on unusual mobile phones I don&amp;#8217;t and won&amp;#8217;t have, there&amp;#8217;s a sneaky little bit of my brain saying &amp;#8220;why is this my problem? if someone wants to buy a weird phone, it&amp;#8217;s their problem that websites don&amp;#8217;t work right, isn&amp;#8217;t&amp;nbsp;it?&amp;#8221;&lt;/p&gt;
&lt;p&gt;Leave aside here, for now, that there is no such thing as a &amp;#8220;normal&amp;#8221; experience, and even saying that people differ from the &amp;#8220;normal&amp;#8221; experience means that you are thinking about things the wrong way because you&amp;#8217;re assuming that there is a normality and then there&amp;#8217;s divergence and that&amp;#8217;s &lt;em&gt;wrong&lt;/em&gt;. I know this. You know this too, or at least&amp;nbsp;should.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s the secret. Someone who has a web experience different from what the industry perceives as the norm is normally actually pretty happy to try, for themselves, to make their web experience better. Someone with poor motor control generally &lt;em&gt;will&lt;/em&gt; be happy to learn the keyboard shortcuts for their browser, which the &amp;#8220;norm&amp;#8221; don&amp;#8217;t bother to do. Someone who listens to the web rather than reads it generally &lt;em&gt;will&lt;/em&gt; be happy to learn how to skip over your header using an option available in their tool but not yours, so you don&amp;#8217;t have to add &amp;#8220;skip header&amp;#8221; links. Someone who is desperate for all bold text to appear in bright green and with sparkles generally will be happy to learn how to customise their user stylesheet to make that&amp;nbsp;happen.&lt;/p&gt;
&lt;p&gt;The secret is: if you use semantic &lt;span class="caps"&gt;HTML&lt;/span&gt;, then they do the work, not you. Their browser does the work, not you. If your pages use semantic &lt;span class="caps"&gt;HTML&lt;/span&gt;, you&amp;#8217;re not going to get bug reports saying that your web app doesn&amp;#8217;t work in a screenreader, or your buttons don&amp;#8217;t work without mouse clicks, or your site doesn&amp;#8217;t show anything on a Yoyodyne SuperPhone 3 running FailBrowser, because it will and they will and it will. And using semantic &lt;span class="caps"&gt;HTML&lt;/span&gt; elements is no more effort; it&amp;#8217;s just as easy to use &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; as it is to use &lt;code&gt;&amp;lt;div id="main"&amp;gt;&lt;/code&gt;. Easier, even. You get to offload some of that work onto the people who need it, and they are happy to do it, as long as you aren&amp;#8217;t actively working to &lt;em&gt;stop&lt;/em&gt;&amp;nbsp;them. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sil</dc:creator><pubDate>Wed, 19 Dec 2018 11:11:00 +0000</pubDate><guid isPermaLink="false">tag:www.kryogenix.org,2018-12-19:/days/2018/12/19/why-isn-t-it-their-job/</guid></item></channel></rss>